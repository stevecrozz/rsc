{
  "Scheduler": {
    "description": "Provide RightLink with the ability to schedule script executions on instances",
    "attributes": {},
    "methods": {
      "schedule_right_script": {
        "access_rules": [
          "instance"
        ],
        "route": "POST   /api/right_net/scheduler/schedule_right_script(.:format)? {dummy so regexp matches}",
        "status_code": "204 No Content",
        "description": "Schedules a RightScript for execution on the current instance",
        "content_type": "",
        "parameters": {
          "audit_id": {
            "class": "Integer",
            "non_blank": true,
            "description": "Optional, reuse audit if specified"
          },
          "right_script_id": {
            "class": "Integer",
            "non_blank": true,
            "description": "RightScript ID"
          },
          "right_script": {
            "class": "String",
            "non_blank": true,
            "description": "RightScript name, overridden by right_script_id"
          },
          "arguments": {
            "class": "Enumerable",
	    "description": "Serialized script execution arguments values keyed by name"
          },
          "formal_values": {
            "class": "Enumerable",
	    "description": "Formal input parameter values"
          },
          "policy": {
            "description": "RunlistPolicy policy name"
          },
          "thread": {
            "description": "RunlistPolicy thread name"
          },
          "audit_period": {
            "description": "RunlistPolicy audit period"
          }
	}
      },
      "schedule_recipe": {
        "access_rules": [
          "instance"
        ],
        "route": "POST   /api/right_net/scheduler/schedule_recipe(.:format)? {dummy so regexp matches}",
        "status_code": "204 No Content",
        "description": "Schedules a chef recipe for execution on the current instance",
        "content_type": "",
        "parameters": {
          "audit_id": {
            "class": "Integer",
            "non_blank": true,
            "description": "Optional, reuse audit if specified"
          },
          "recipe_id": {
            "class": "Integer",
            "non_blank": true,
            "description": "ServerTemplateChefRecipe ID"
          },
          "recipe": {
            "class": "String",
            "non_blank": true,
            "description": "Chef recipe name, overridden by recipe_id"
          },
          "arguments": {
            "class": "Enumerable",
	    "description": "Serialized recipe execution arguments values keyed by name"
          },
          "formal_values": {
            "class": "Enumerable",
	    "description": "Formal input parameter values"
          },
          "policy": {
            "description": "RunlistPolicy policy name"
          },
          "thread": {
            "description": "RunlistPolicy thread name"
          },
          "audit_period": {
            "description": "RunlistPolicy audit period"
          }
	}
      }
    }
  },
  "SecurityGroups": {
    "methods": {
      "create": {
        "parameters": {
          "security_group[network_href]": {
            "class": "String",
            "non_blank": true
          },
          "security_group[name]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "security_group[description]": {
            "class": "String",
            "non_blank": true
          },
          "security_group": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/security_groups(.:format)? {:action=>\"create\", :controller=>\"security_groups\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a security group."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "tiny"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/security_groups/ABC3748439911DEF"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"security_group_rules","href":"/api/clouds/888/security_groups/ABC3748439911DEF/security_group_rules"}
          ],
          "description": null,
          "actions": [

          ],
          "resource_uid": "RESOURCE_3758419624",
          "name": "NAME_2922942130"
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Security Group to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Security Group to filter on."
          },
          "network_href": {
            "column": "security_groups.network_rsid",
            "description": "Network to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/security_groups(.:format)? {:action=>\"index\", :controller=>\"security_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists Security Groups."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/security_groups/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_groups\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete security group(s)"
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "tiny"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/security_groups/ABC3748439911DEF"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"security_group_rules","href":"/api/clouds/888/security_groups/ABC3748439911DEF/security_group_rules"}
          ],
          "description": null,
          "actions": [

          ],
          "resource_uid": "RESOURCE_3758419624",
          "name": "NAME_2922942130"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/security_groups/:id(.:format)? {:action=>\"show\", :controller=>\"security_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single Security Group."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "href": "",
        "actions": "",
        "resource_uid": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.security_group"
      ],
      "links": {
        "network": "Associated network",
        "security_group_rules": "Associated security_group_rules",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "Security Groups represent network security profiles that contain lists of firewall rules for different ports and source IP addresses, as well as\n  trust relationships amongst different security groups."
    },
    "description": "Security Groups represent network security profiles that contain lists of firewall rules for different ports and source IP addresses, as well as\ntrust relationships amongst different security groups."
  },
  "Routes": {
    "methods": {
      "update": {
        "parameters": {
          "route[destination_cidr_block]": {
            "class": "String",
            "description": "The updated destination (CIDR IP address) for the Route.",
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2}$/",
            "mandatory": false,
            "non_blank": true
          },
          "route[next_hop_type]": {
            "class": "String",
            "description": "The updated Route's next hop type.",
            "mandatory": false,
            "valid_values": [
              "instance",
              "network_interface",
              "network_gateway",
              "ip_string"
            ],
            "non_blank": true
          },
          "route[description]": {
            "class": "String",
            "description": "The updated description of the Route.",
            "mandatory": false,
            "non_blank": false
          },
          "route": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "route[next_hop_href]": {
            "class": "String",
            "description": "The updated href of the Route's next hop. Required if route[next_hop_type] is 'instance', 'network_interface', or 'network_gateway'. Not allowed otherwise.",
            "mandatory": false,
            "non_blank": true
          },
          "route[next_hop_ip]": {
            "class": "String",
            "description": "The updated IP Address of the Route's next hop. Required if route[next_hop_type] is 'ip_string'. Not allowed otherwise.",
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}$/",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/routes/:id(.:format)?               {:action=>\"update\", :controller=>\"routes\"}PUT    /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"update\", :controller=>\"routes\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Update an existing Route."
      },
      "create": {
        "parameters": {
          "route[destination_cidr_block]": {
            "class": "String",
            "description": "The destination (CIDR IP address) for the Route.",
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}\\/\\d{1,2}$/",
            "mandatory": true,
            "non_blank": true
          },
          "route[route_table_href]": {
            "class": "String",
            "description": "The RouteTable to create the Route in.",
            "mandatory": true,
            "non_blank": true
          },
          "route[next_hop_type]": {
            "class": "String",
            "description": "The Route's next hop type.",
            "mandatory": true,
            "valid_values": [
              "instance",
              "network_interface",
              "network_gateway",
              "ip_string"
            ],
            "non_blank": true
          },
          "route[description]": {
            "class": "String",
            "description": "The description to be set on the Route.",
            "non_blank": false
          },
          "route": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "route[next_hop_href]": {
            "class": "String",
            "description": "The href of the Route's next hop.\n                         Required if route[next_hop_type] is 'instance', 'network_interface', or 'network_gateway'.\n                         Not allowed otherwise.",
            "mandatory": false,
            "non_blank": true
          },
          "route[next_hop_ip]": {
            "class": "String",
            "description": "The IP Address of the Route's next hop. Required if route[next_hop_type] is 'ip_string'. Not allowed otherwise.",
            "regex": "/^(\\d{1,3}\\.){3}\\d{1,3}$/",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/routes(.:format)?                   {:action=>\"create\", :controller=>\"routes\"}POST   /api/route_tables/:route_table_id/routes(.:format)? {:action=>\"create\", :controller=>\"routes\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a new Route."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/routes/RESOURCE_1103037565;1215047012"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_476929356;1277906709"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"next_hop","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"}
          ],
          "destination_cidr_block": "10.0.0.0/16",
          "description": "DESCRIPTION_1589223190",
          "state": "available",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1103037565",
          "updated_at": "2015/04/08 22:32:17 +0000",
          "next_hop_type": "instance"
        },
        "filters": {
          "state": {
            "column": "network_routes.state",
            "description": "Returns Routes in the specified state"
          },
          "next_hop_href": {
            "description": "Returns Routes with the specified next_hop_href"
          },
          "next_hop_type": {
            "description": "Returns Routes with the specified next_hop_type"
          },
          "route_table_href": {
            "column": "network_routes.network_route_table_rsid",
            "description": "Returns Routes in the specified RouteTable"
          },
          "cloud_href": {
            "column": "network_routes.cloud_id",
            "description": "Returns Routes in the specified cloud"
          },
          "next_hop_ip": {
            "partial_match": true,
            "description": "Returns Routes with the specified next_hop_ip"
          },
          "network_href": {
            "column": "network_route_tables.network_rsid",
            "include": "network_route_table",
            "description": "Returns Routes in the specified Network"
          },
          "description": {
            "column": "network_routes.description",
            "partial_match": true,
            "description": "The description of the Route to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/routes(.:format)?                   {:action=>\"index\", :controller=>\"routes\"}GET    /api/route_tables/:route_table_id/routes(.:format)? {:action=>\"index\", :controller=>\"routes\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List Routes available in this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/routes/:id(.:format)?               {:action=>\"destroy\", :controller=>\"routes\"}DELETE /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"destroy\", :controller=>\"routes\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete an existing Route."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/routes/RESOURCE_1103037565;1215047012"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_476929356;1277906709"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"next_hop","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"}
          ],
          "destination_cidr_block": "10.0.0.0/16",
          "description": "DESCRIPTION_1589223190",
          "state": "available",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1103037565",
          "updated_at": "2015/04/08 22:32:17 +0000",
          "next_hop_type": "instance"
        },
        "status_code": "200 OK",
        "route": "GET    /api/routes/:id(.:format)?               {:action=>\"show\", :controller=>\"routes\"}GET    /api/route_tables/:route_table_id/routes/:id(.:format)? {:action=>\"show\", :controller=>\"routes\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single Route."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "next_hop_ip": "",
        "destination_cidr_block": "",
        "description": "",
        "state": "",
        "resource_uid": "",
        "created_at": "",
        "updated_at": "",
        "next_hop_type": ""
      },
      "content_types": [
        "application/vnd.rightscale.route"
      ],
      "links": {
        "next_hop": "Href of the next_hop (only if next_hop_type isn't ip_string)",
        "route_table": "The RouteTable that this Route belongs to.",
        "cloud": "The cloud that this Route is in.",
        "self": "Link to this Route."
      },
      "description": "A Route defines how networking traffic should be routed from one\n  destination to another. See nexthoptype for available endpoint targets."
    },
    "description": "A Route defines how networking traffic should be routed from one\ndestination to another. See nexthoptype for available endpoint targets."
  },
  "Oauth2": {
    "methods": {
      "create": {
        "parameters": {
          "grant_type": {
            "class": "String",
            "description": "Type of grant.",
            "mandatory": true,
            "valid_values": [
              "refresh_token"
            ],
            "non_blank": true
          },
          "right_link_version": {
            "class": "String",
            "description": "The RightLink gem version the client conforms to (only needed for instance agent clients).",
            "regex": "/^\\d+\\.\\d+(\\.\\d+)*$/",
            "mandatory": false,
            "non_blank": true
          },
          "r_s_version": {
            "class": "Integer",
            "description": "The RightAgent protocol version the client conforms to (only needed for instance agent clients).",
            "mandatory": false,
            "non_blank": true
          },
          "refresh_token": {
            "class": "String",
            "description": "The refresh token obtained from OAuth grant.",
            "mandatory": false,
            "non_blank": true
          },
          "client_id": {
            "class": "String",
            "description": "The client ID (only needed for confidential clients).",
            "mandatory": false,
            "non_blank": true
          },
          "account_id": {
            "class": "Integer",
            "description": "The client's account ID (only needed for instance agent clients).",
            "mandatory": false,
            "non_blank": true
          },
          "client_secret": {
            "class": "String",
            "description": "The client secret (only needed for confidential clients).",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/oauth2/                             {:action=>\"create\", :controller=>\"oauth2\"}",
        "access_rules": {
        },
        "description": "Perform an OAuth 2.0 token_refresh operation to obtain an access token that\ncan be used in lieu of an API session cookie. (In other words, creates a\nsession using OAuth 2.0).\n\nNote that an API-Version header is required with your request, and that the server\nmay respond with a 301 Moved Permanently if you include an account_id parameter and\nyour account is hosted in another RightScale cluster.\n\nThe request parameters and response format are all as per the OAuth 2.0\nInternet Draft standard v23. In brief:\n\n\nSuccessful responses include an access token, an expires-in timestamp, and a token type\nThe token type is always \"bearer\"\nTo use a bearer token, include header \"Authorization: Bearer \" with your API requests\nThe client must refresh the access token before it expires\n\n\n\n# Example Request using Curl (with prettified response):\ncurl -i -H X-API-Version:1.5 -x POST https://my.rightscale.com/api/oauth2 -d \"grant_type=refresh_token\" -d \"refresh_token=abcd1234deadbeef\"\n\n{\n  \"access_token\": \"xyzzy\",\n  \"expires_in\":   3600,\n  \"token_type\":   \"bearer\"\n}\n"
      }
    },
    "media_type": null,
    "description": "\nNote that all API calls irrespective of the resource it is acting on, should pass a header\n\"X-Api-Version\" with the value \"1.5\".\n\n\nThis is an OAuth 2.0 token endpoint that can be used to perform token-refresh operations and obtain\na bearer access token, which can be used in lieu of a session cookie when interacting with API\nresources.\n\nThis is not an API resource; in order to maintain compatibility with OAuth 2.0, it does not conform\nto the conventions established by other RightScale API resources. However, an API-version header is\nstill required when interacting with the OAuth endpoint.\n\nOAuth 2.0 endpoints always use the POST verb, accept a www-urlencoded request body (similarly to a\nbrowser form submission) and the OAuth action is indicated by the \"grant_type\" parameter. This\nendpoint supports the following OAuth 2.0 operations:\n\n\nrefresh_token - for end-user login using a previously-negotiated OAuth grant\nclient_credentials - for instance login using API credentials transmitted via user-data\n\n\nRightScale's OAuth implementation has two proprietary aspects that you should be aware of:\n\n\nclients MUST transmit an X-Api-Version header with every OAuth request\nclients MAY transmit an account_id parameter as part of their POST form data\n\n\nIf you choose to post an account_id, then the API may respond with a 301 redirect if your account\nis hosted in another RightScale cluster. If you omit this parameter and your account is hosted\nelsewhere, then you will simply receive a 400 Bad Request (because your grant is not known to\nthis cluster).\n\nFor more information on how to use OAuth 2.0 with RightScale, refer to the following:\nhttp://support.rightscale.com/12-Guides/03-RightScale_API/OAuth\nhttp://tools.ietf.org/html/draft-ietf-oauth-v2-23"
  },
  "HealthCheck": {
    "methods": {
      "index": {
        "parameters": {
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/health-check/                       {:action=>\"index\", :controller=>\"health_check\"}",
        "access_rules": {
        },
        "description": "Check health of RightApi controllers"
      }
    },
    "media_type": null,
    "description": null
  },
  "AlertSpecs": {
    "methods": {
      "update": {
        "parameters": {
          "alert_spec[file]": {
            "class": "String",
            "description": "The RRD path/file_name of the condition sentence.",
            "non_blank": true
          },
          "alert_spec": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[vote_type]": {
            "class": "String",
            "description": "Vote to grow or shrink a ServerArray when the alert is triggered.",
            "valid_values": [
              "grow",
              "shrink"
            ],
            "non_blank": true
          },
          "alert_spec[condition]": {
            "class": "String",
            "description": "The condition (operator) in the condition sentence.",
            "valid_values": [
              ">",
              ">=",
              "<",
              "<=",
              "==",
              "!="
            ],
            "non_blank": true
          },
          "alert_spec[threshold]": {
            "class": "String",
            "description": "The threshold of the condition sentence.",
            "non_blank": true
          },
          "alert_spec[escalation_name]": {
            "class": "String",
            "description": "Escalate to the named alert escalation when the alert is triggered.",
            "non_blank": true
          },
          "alert_spec[duration]": {
            "class": "String",
            "description": "The duration in minutes of the condition sentence.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "alert_spec[variable]": {
            "class": "String",
            "description": "The RRD variable of the condition sentence.",
            "non_blank": true
          },
          "alert_spec[name]": {
            "class": "String",
            "description": "The name of the AlertSpec.",
            "non_blank": true
          },
          "alert_spec[description]": {
            "class": "String",
            "description": "The description of the AlertSpec.",
            "non_blank": true
          },
          "alert_spec[vote_tag]": {
            "class": "String",
            "description": "Should correspond to a vote tag on a ServerArray if vote to grow or shrink.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"update\", :controller=>\"alert_specs\"}PUT    /api/alert_specs/:id(.:format)?          {:action=>\"update\", :controller=>\"alert_specs\"}",
        "access_rules": [
          "designer||instance"
        ],
        "description": "Updates an AlertSpec with the given parameters."
      },
      "create": {
        "parameters": {
          "alert_spec[file]": {
            "class": "String",
            "description": "The RRD path/file_name of the condition sentence.",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[vote_type]": {
            "class": "String",
            "description": "Vote to grow or shrink a ServerArray when the alert is triggered. Must either escalate or vote.",
            "valid_values": [
              "grow",
              "shrink"
            ],
            "non_blank": true
          },
          "alert_spec[condition]": {
            "class": "String",
            "description": "The condition (operator) in the condition sentence.",
            "mandatory": true,
            "valid_values": [
              ">",
              ">=",
              "<",
              "<=",
              "==",
              "!="
            ],
            "non_blank": true
          },
          "alert_spec[subject_href]": {
            "class": "String",
            "description": "The href of the resource that this AlertSpec should be associated with. The subject can be a ServerTemplate, Server, ServerArray, or Instance.",
            "non_blank": true
          },
          "alert_spec[threshold]": {
            "class": "String",
            "description": "The threshold of the condition sentence.",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[escalation_name]": {
            "class": "String",
            "description": "Escalate to the named alert escalation when the alert is triggered. Must either escalate or vote.",
            "non_blank": true
          },
          "alert_spec[duration]": {
            "class": "String",
            "description": "The duration in minutes of the condition sentence.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[variable]": {
            "class": "String",
            "description": "The RRD variable of the condition sentence.",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[name]": {
            "class": "String",
            "description": "The name of the AlertSpec.",
            "mandatory": true,
            "non_blank": true
          },
          "alert_spec[description]": {
            "class": "String",
            "description": "The description of the AlertSpec.",
            "non_blank": true
          },
          "alert_spec[vote_tag]": {
            "class": "String",
            "description": "Should correspond to a vote tag on a ServerArray if vote to grow or shrink.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/servers/:server_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/server_arrays/:server_array_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/server_templates/:server_template_id/alert_specs(.:format)? {:action=>\"create\", :controller=>\"alert_specs\"}POST   /api/alert_specs(.:format)?              {:action=>\"create\", :controller=>\"alert_specs\"}",
        "access_rules": [
          "designer||instance"
        ],
        "description": "Creates a new AlertSpec with the given parameters."
      },
      "index": {
        "parameters": {
          "with_inherited": {
            "class": "String",
            "description": "Flag indicating whether or not to include AlertSpecs from the ServerTemplate in the index.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/alert_specs/1"},
            {"rel":"subject","href":"/api/server_templates/2"}
          ],
          "threshold": "1",
          "duration": 60,
          "description": "DESCRIPTION_1468695257",
          "file": "path/file_name",
          "actions": [

          ],
          "variable": "state",
          "created_at": "2015/04/08 22:32:15 +0000",
          "condition": "==",
          "name": "NAME_2143785294",
          "escalation_name": "critical",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "filters": {
          "escalation_name": {
            "description": "The name of the alert escalation to filter on."
          },
          "subject_href": {
            "description": "The href of the subject to filter on. The subject can be a ServerTemplate, Server, ServerArray, or Instance."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the alert spec to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The alert spec description to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/servers/:server_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/server_arrays/:server_array_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/server_templates/:server_template_id/alert_specs(.:format)? {:action=>\"index\", :controller=>\"alert_specs\"}GET    /api/alert_specs(.:format)?              {:action=>\"index\", :controller=>\"alert_specs\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": null
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"destroy\", :controller=>\"alert_specs\"}DELETE /api/alert_specs/:id(.:format)?          {:action=>\"destroy\", :controller=>\"alert_specs\"}",
        "access_rules": [
          "designer||instance"
        ],
        "description": "Deletes a given AlertSpec."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/alert_specs/1"},
            {"rel":"subject","href":"/api/server_templates/2"}
          ],
          "threshold": "1",
          "duration": 60,
          "description": "DESCRIPTION_1468695257",
          "file": "path/file_name",
          "actions": [

          ],
          "variable": "state",
          "created_at": "2015/04/08 22:32:15 +0000",
          "condition": "==",
          "name": "NAME_2143785294",
          "escalation_name": "critical",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/servers/:server_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/server_arrays/:server_array_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/server_templates/:server_template_id/alert_specs/:id(.:format)? {:action=>\"show\", :controller=>\"alert_specs\"}GET    /api/alert_specs/:id(.:format)?          {:action=>\"show\", :controller=>\"alert_specs\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": null
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "threshold": "",
        "duration": "",
        "description": "",
        "file": "",
        "actions": "",
        "variable": "",
        "vote_type": "",
        "vote_tag": "",
        "created_at": "",
        "condition": "",
        "name": "",
        "escalation_name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.alert_spec"
      ],
      "links": {
        "subject": "Associated subject. The subject can be a ServerTemplate, Server, Server Array, or a running Instance.",
        "self": "Href of itself"
      },
      "description": "An AlertSpec defines the conditions under which an Alert is triggered and escalated.\n  Condition sentence: if &lt;file&gt;.&lt;variable&gt; &lt;condition&gt; '&lt;threshold&gt;' for &lt;duration&gt; min then escalate to '&lt;escalation_name&gt;'."
    },
    "description": "An AlertSpec defines the conditions under which an Alert is triggered and escalated.\nCondition sentence: if &lt;file&gt;.&lt;variable&gt; &lt;condition&gt; '&lt;threshold&gt;' for &lt;duration&gt; min then escalate to '&lt;escalation_name&gt;'."
  },
  "Volumes": {
    "methods": {
      "update": {
        "parameters": {
          "volume": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "volume[name]": {
            "class": "String",
            "description": "The new name for the Volume.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/volumes/:id(.:format)? {:action=>\"update\", :controller=>\"volumes\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": null
      },
      "create": {
        "parameters": {
          "volume[placement_group_href]": {
            "class": "String",
            "description": "The href of the Placement Group.",
            "non_blank": true
          },
          "volume[iops]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) this Volume should support. Only available on clouds supporting performance provisioning.",
            "regex": "/^\\d+$/",
            "mandatory": false,
            "non_blank": true
          },
          "volume[encrypted]": {
            "class": "String",
            "description": "A flag indicating whether Volume should be encrypted. Only available on clouds supporting volume encryption.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "volume[volume_type_href]": {
            "class": "String",
            "description": "The href of the volume type. A Name, Resource UID and optional Size is associated with a Volume Type.",
            "non_blank": true
          },
          "volume[size]": {
            "class": "String",
            "description": "The size of a Volume to be created in gigabytes (GB). Some Volume Types have predefined sizes and do not allow selecting a custom size on Volume creation.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "volume[datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone that the Volume will be in. This parameter is required for non-OpenStack clouds.",
            "non_blank": true
          },
          "volume[name]": {
            "class": "String",
            "description": "The name for the Volume to be created.",
            "mandatory": true,
            "non_blank": true
          },
          "volume[deployment_href]": {
            "class": "String",
            "description": "The href of the Deployment that owns this Volume.",
            "non_blank": true
          },
          "volume[parent_volume_snapshot_href]": {
            "class": "String",
            "description": "The href of the snapshot from which the volume will be created.",
            "non_blank": true
          },
          "volume": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "volume[description]": {
            "class": "String",
            "description": "The description of the Volume to be created.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/volumes(.:format)? {:action=>\"create\", :controller=>\"volumes\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Creates a new volume."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_1513095791;RAND"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387/volume_snapshots"},
            {"rel":"current_volume_attachment","href":"/api/clouds/888/volume_attachments/RESOURCE_2893029735;2272197279"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387/recurring_volume_attachments"}
          ],
          "status": "in-use",
          "description": "DESCRIPTION_3620342523",
          "actions": [

          ],
          "size": 1,
          "resource_uid": "RESOURCE_4227702693",
          "created_at": null,
          "name": "NAME_4249686834",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume to filter on."
          },
          "datacenter_href": {
            "column": "datacenter_rsid",
            "description": "The href of the Datacenter / Zone the Volume is in."
          },
          "parent_volume_snapshot_href": {
            "column": "volume_snapshot_rsid",
            "description": "The href of the snapshot from which the volume was created."
          },
          "deployment_href": {
            "description": "Deployment href to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The description of the Volume to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volumes(.:format)? {:action=>\"index\", :controller=>\"volumes\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists volumes."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/volumes/:id(.:format)? {:action=>\"destroy\", :controller=>\"volumes\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Deletes a given volume."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_1513095791;RAND"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387/volume_snapshots"},
            {"rel":"current_volume_attachment","href":"/api/clouds/888/volume_attachments/RESOURCE_2893029735;2272197279"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387/recurring_volume_attachments"}
          ],
          "status": "in-use",
          "description": "DESCRIPTION_3620342523",
          "actions": [

          ],
          "size": 1,
          "resource_uid": "RESOURCE_4227702693",
          "created_at": null,
          "name": "NAME_4249686834",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volumes/:id(.:format)? {:action=>\"show\", :controller=>\"volumes\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Displays information about a single volume."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "volume_type": "",
        "status": "",
        "description": "",
        "iops": "",
        "actions": "",
        "size": "",
        "resource_uid": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.volume"
      ],
      "links": {
        "current_volume_attachment": "Associated volume attachment. Describes where the volume is attached to and the attachment parameters.",
        "parent_volume_snapshot": "The volume snapshot from which the volume was created, if any",
        "deployment": "Containing Deployment",
        "recurring_volume_attachments": "Associated recurring volume attachments",
        "datacenter": "Associated datacenter/Zone",
        "volume_snapshots": "Associated volume snapshots",
        "volume_type": "Associated volume type",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A Volume provides a highly reliable, efficient and persistent storage solution that can be mounted to a cloud instance (in the same datacenter / zone)."
    },
    "description": "A Volume provides a highly reliable, efficient and persistent storage solution that can be mounted to a cloud instance (in the same datacenter / zone)."
  },
  "VolumeSnapshots": {
    "methods": {
      "create": {
        "parameters": {
          "volume_snapshot[deployment_href]": {
            "class": "String",
            "description": "The href of the Deployment that owns this Volume Snapshot.",
            "non_blank": true
          },
          "volume_snapshot_copy[description]": {
            "class": "String",
            "description": "The description of the Volume Snapshot to be copied.",
            "non_blank": true
          },
          "volume_snapshot": {
            "class": "Hash",
            "non_blank": true
          },
          "volume_snapshot_copy[name]": {
            "class": "String",
            "description": "The name of the Volume Snapshot to be copied.",
            "non_blank": true
          },
          "volume_snapshot[parent_volume_href]": {
            "class": "String",
            "description": "The href of the Volume from which the Volume Snapshot will be created.",
            "non_blank": true
          },
          "volume_snapshot[name]": {
            "class": "String",
            "description": "The name for the Volume Snapshot to be created.",
            "non_blank": true
          },
          "volume_snapshot_copy[cloud_href]": {
            "class": "String",
            "description": "The href of the destination cloud.",
            "non_blank": true
          },
          "volume_snapshot_copy": {
            "class": "Hash",
            "non_blank": true
          },
          "volume_snapshot_copy[volume_snapshot_href]": {
            "class": "String",
            "description": "The href of source volume snapshot.",
            "non_blank": true
          },
          "volume_snapshot[description]": {
            "class": "String",
            "description": "The description for the Volume Snapshot to be created.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots(.:format)? {:action=>\"create\", :controller=>\"volume_snapshots\"}POST   /api/clouds/:cloud_id/volume_snapshots(.:format)? {:action=>\"create\", :controller=>\"volume_snapshots\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Creates a new volume_snapshot."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_snapshots/RESOURCE_1070783021;3135561148"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"parent_volume","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volume_snapshots/RESOURCE_1070783021;3135561148/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_1781242481",
          "actions": [

          ],
          "state": "available",
          "size": null,
          "resource_uid": "RESOURCE_1070783021",
          "created_at": null,
          "name": "NAME_4089559921",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "state": {
            "description": "The current state of the snapshot"
          },
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume Snapshot to filter on."
          },
          "deployment_href": {
            "description": "Deployment href to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume Snapshot to filter on."
          },
          "description": {
            "description": "The description of the Volume Snapshot to filter on."
          },
          "parent_volume_href": {
            "column": "volume_rsid",
            "description": "The href of the volume from which the Volume Snapshot was created."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots(.:format)? {:action=>\"index\", :controller=>\"volume_snapshots\"}GET    /api/clouds/:cloud_id/volume_snapshots(.:format)? {:action=>\"index\", :controller=>\"volume_snapshots\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists all volume_snapshots."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_snapshots\"}DELETE /api/clouds/:cloud_id/volume_snapshots/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_snapshots\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Deletes a given volume_snapshot."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_snapshots/RESOURCE_1070783021;3135561148"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"parent_volume","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/volume_snapshots/RESOURCE_1070783021;3135561148/recurring_volume_attachments"}
          ],
          "description": "DESCRIPTION_1781242481",
          "actions": [

          ],
          "state": "available",
          "size": null,
          "resource_uid": "RESOURCE_1070783021",
          "created_at": null,
          "name": "NAME_4089559921",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_snapshots/:id(.:format)? {:action=>\"show\", :controller=>\"volume_snapshots\"}GET    /api/clouds/:cloud_id/volume_snapshots/:id(.:format)? {:action=>\"show\", :controller=>\"volume_snapshots\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Displays information about a single volume_snapshot."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "progress": "",
        "description": "",
        "actions": "",
        "state": "",
        "created_at": "",
        "size": "",
        "resource_uid": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.volume_snapshot"
      ],
      "links": {
        "parent_volume": "The volume from which the snapshot was created.",
        "deployment": "Containing Deployment",
        "recurring_volume_attachments": "Associated recurring volume attachments",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A VolumeSnapshot represents a Cloud storage volume at a particular point in time. One can create a snapshot regardless of whether or not a volume is attached to an Instance. When a snapshot is created,\n  various meta data is retained such as a Created At timestamp, a unique Resource UID (e.g. vol-52EF05A9), the Volume Owner and Visibility (e.g. private or public).\n  Snapshots consist of a series of data blocks that are incrementally saved."
    },
    "description": "A VolumeSnapshot represents a Cloud storage volume at a particular point in time. One can create a snapshot regardless of whether or not a volume is attached to an Instance. When a snapshot is created,\nvarious meta data is retained such as a Created At timestamp, a unique Resource UID (e.g. vol-52EF05A9), the Volume Owner and Visibility (e.g. private or public).\nSnapshots consist of a series of data blocks that are incrementally saved."
  },
  "Users": {
    "methods": {
      "update": {
        "parameters": {
          "user[last_name]": {
            "class": "String",
            "non_blank": true
          },
          "user[first_name]": {
            "class": "String",
            "non_blank": true
          },
          "user[company]": {
            "class": "String",
            "non_blank": true
          },
          "user[principal_uid]": {
            "class": "String",
            "description": "The updated principal identifier (SAML NameID or OpenID identity URL) of this user.",
            "non_blank": true
          },
          "user[current_password]": {
            "class": "String",
            "description": "The current password for the user.",
            "non_blank": true
          },
          "user": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "user[new_email]": {
            "class": "String",
            "description": "The updated email of this user.",
            "non_blank": true
          },
          "user[timezone_name]": {
            "class": "String",
            "description": "This can be in the form of country/region or timezone name. For example 'America/Los_Angeles' or 'GB' or 'UTC'. A complete list of acceptable values is available in the Settings > User Settings > Preferences page.",
            "non_blank": true
          },
          "user[phone]": {
            "class": "String",
            "regex": "/^[\\.()\\s\\d+-]+$/",
            "non_blank": true
          },
          "user[new_password]": {
            "class": "String",
            "description": "The new password for this user.",
            "non_blank": true
          },
          "user[identity_provider_href]": {
            "class": "String",
            "description": "The updated RightScale API href of the associated Identity Provider.",
            "non_blank": true
          },
          "user[current_email]": {
            "class": "String",
            "description": "The existing email of this user.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/users/:id(.:format)?                {:action=>\"update\", :controller=>\"users\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Update a user's contact information, change her password, or update SSO her settings. In order\nto update a user record, one of the following criteria must be met:\n\n\nYou're logged in AS the user being modified and you provide a valid current_password.\nYou're an admin and the user is linked to your enterprise SSO provider\nYou're an admin and the user's email matches the email_domain of your enterprise SSO provider\n\n\nIn other words: you can update yourself if you know your own password; you can update\nyourself or others if they're linked to your SSO providers, and you can update any user\nif her email address is known to belong to your organization.\n\nFor information about enabling canonical email domain ownership for your enterprise, please\ntalk to your RightScale account manager or contact our support team.\n\nTo update a user's contact information, simply pass the desired values for email, first_name,\nand so forth.\n\nTo update a user's password, provide a valid current_password and specify the desired\nnew_password.\n\nTo update a user's SSO information, you may provide a just a principal_uid (to maintain the\nuser's existing identity provider) or you may provide an identity_provider_href and a\nprincipal_uid (to switch identity providers as well as specify a new user identity).\n\nIn the context of SAML. principal_uid is equivalent to the SAML NameID or Subject claim;\nRightScale cannot predict or influence the NameID value that your SAML IdP will send to us for"
      },
      "create": {
        "parameters": {
          "user[last_name]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "user[first_name]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "user[email]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "user[company]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "user[principal_uid]": {
            "class": "String",
            "description": "The principal identifier (SAML NameID or OpenID identity URL) of this user. Required to create an SSO-authenticated user.",
            "non_blank": true
          },
          "user": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "user[timezone_name]": {
            "class": "String",
            "description": "This can be in the form of country/region or timezone name. For example 'America/Los_Angeles' or 'GB' or 'UTC'. A complete list of acceptable values is available in the Settings > User Settings > Preferences page.",
            "non_blank": true
          },
          "user[phone]": {
            "class": "String",
            "regex": "/^[\\.()\\s\\d+-]+$/",
            "mandatory": true,
            "non_blank": true
          },
          "user[password]": {
            "class": "String",
            "description": "The password of this user. Required to create a password-authenticated user.",
            "non_blank": true
          },
          "user[identity_provider_href]": {
            "class": "String",
            "description": "The RightScale API href of the Identity Provider through which this user will login to RightScale. Required to create an SSO-authenticated user.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/users(.:format)?                    {:action=>\"create\", :controller=>\"users\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Create a user. If a user already exists with the same email, that user will be returned.\n\nCreating a user alone will not enable the user to access this account. You have to create\n'permissions' for that user before it can be used. Performing a 'show' on a new user\nwill fail unless you immediately create an 'observer' permission on the current account.\n\nNote that information about users and their permissions must be propagated globally across all\nRightScale clusters, and this can take some time (less than 60 seconds under normal circumstances)\nso the users you create may not be able to login for a minute or two after you create them. However,\nyou may create or destroy permissions for newly-created users with no delay.\n\nTo create a user that will login using password authentication, include the 'password' parameter\nwith your request.\n\nTo create an SSO-enabled user, you must specify the identity_provider that will be vouching for\nthis user's identity, as well as the principal_uid (SAML NameID or OpenID identity URL) that\nthe identity provider will assert for this user. Identity providers should be specified by\ntheir API href; you can obtain a list of the identity providers available to your account by\ninvoking the 'index' action of the identity_providers API resource."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/users/888"}
          ],
          "email": "owner_user@rightscale.com",
          "first_name": "Fred",
          "last_name": "Accountholder",
          "company": "Account That Likes to Publish Things",
          "actions": [

          ],
          "timezone_name": "America/Los_Angeles",
          "created_at": "2009/07/13 21:50:24 +0000",
          "phone": "805-867-5309",
          "updated_at": "2008/11/06 19:56:51 +0000"
        },
        "filters": {
          "email": {
            "description": "Email of the user to filter on."
          },
          "first_name": {
            "partial_match": true,
            "description": "First name of the user to filter on."
          },
          "last_name": {
            "partial_match": true,
            "description": "Last name of the user to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/users(.:format)?                    {:action=>\"index\", :controller=>\"users\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List the users available to the account the user is logged in to. Therefore, to list the users of\na child account, the user has to login to the child account first."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/users/888"}
          ],
          "email": "owner_user@rightscale.com",
          "first_name": "Fred",
          "last_name": "Accountholder",
          "company": "Account That Likes to Publish Things",
          "actions": [

          ],
          "timezone_name": "America/Los_Angeles",
          "created_at": "2009/07/13 21:50:24 +0000",
          "phone": "805-867-5309",
          "updated_at": "2008/11/06 19:56:51 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/users/:id(.:format)?                {:action=>\"show\", :controller=>\"users\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single user."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "email": "",
        "principal_uid": "",
        "first_name": "",
        "last_name": "",
        "company": "",
        "actions": "",
        "timezone_name": "",
        "created_at": "",
        "phone": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.user"
      ],
      "links": {
        "identity_provider": "Associated identity provider",
        "self": "Href of itself"
      },
      "description": "A User represents an individual RightScale user. Users must be given access to RightScale accounts in order to \n  access RightScale resources."
    },
    "description": "A User represents an individual RightScale user. Users must be given access to RightScale accounts in order to \naccess RightScale resources."
  },
  "RunnableBindings": {
    "methods": {
      "multi_update": {
        "parameters": {
          "runnable_bindings[][right_script_href]": {
            "class": "String",
            "description": "The updated RightScript href. Note: recipe cannot be specified when this param is given.",
            "non_blank": true
          },
          "runnable_bindings": {
            "class": "Array",
            "mandatory": true,
            "non_blank": true
          },
          "runnable_bindings[][recipe]": {
            "class": "String",
            "description": "The updated Chef recipe name. Note: right_script_href cannot be specified when this param is given.",
            "non_blank": true
          },
          "runnable_bindings[][id]": {
            "class": "String",
            "description": "The ID of the RunnableBinding to update.",
            "regex": "/^\\d*$/",
            "mandatory": true,
            "non_blank": true
          },
          "runnable_bindings[][sequence]": {
            "class": "String",
            "description": "The sequence at which this executable should be run.  Default is 'operational'.",
            "valid_values": [
              "boot",
              "decommission",
              "operational"
            ],
            "non_blank": true
          },
          "runnable_bindings[][position]": {
            "class": "String",
            "description": "The updated position of the RunnableBinding in the execution order. If specified, will be inserted in that location and cause all others to move down.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/server_templates/:server_template_id/runnable_bindings/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"runnable_bindings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Update attributes for multiple bound executables.\n\nThe resource must be editable."
      },
      "create": {
        "parameters": {
          "runnable_binding[recipe]": {
            "class": "String",
            "description": "The Chef recipe name. Note: right_script_href cannot be specified when this param is given.",
            "non_blank": true
          },
          "runnable_binding[sequence]": {
            "class": "String",
            "description": "The sequence at which this executable should be run. Default is 'operational'.",
            "valid_values": [
              "boot",
              "decommission",
              "operational"
            ],
            "non_blank": true
          },
          "runnable_binding[right_script_href]": {
            "class": "String",
            "description": "The RightScript href. Note: recipe cannot be specified when this param is given.",
            "non_blank": true
          },
          "runnable_binding": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "runnable_binding[position]": {
            "class": "String",
            "description": "The position of the executable in the execution order. If not specified, will be added to the end. If specified, will be inserted in that location and cause all others to move down.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates/:server_template_id/runnable_bindings(.:format)? {:action=>\"create\", :controller=>\"runnable_bindings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Bind an executable to the given ServerTemplate.\n\nAn executable may be either a RightScript or Chef Recipe.\n\nThe resource must be editable."
      },
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_templates/1/runnable_bindings/2"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"right_script","href":"/api/right_scripts/2"}
          ],
          "sequence": "boot",
          "right_script": {
            "lineage": "https://testscale_1/api/acct/331800546/right_scripts/2",
            "revision": 0,
            "name": "NAME_230061123",
            "id": "2"
          },
          "actions": [

          ],
          "position": 2,
          "id": "2"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates/:server_template_id/runnable_bindings(.:format)? {:action=>\"index\", :controller=>\"runnable_bindings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the executables bound to the ServerTemplate.\n\nAn excutable may be either a RightScript or Chef Recipe."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/server_templates/:server_template_id/runnable_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"runnable_bindings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Unbind an executable from the given resource.\n\nThe resource must be editable."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_templates/1/runnable_bindings/2"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"right_script","href":"/api/right_scripts/2"}
          ],
          "sequence": "boot",
          "right_script": {
            "lineage": "https://testscale_1/api/acct/331800546/right_scripts/2",
            "revision": 0,
            "name": "NAME_230061123",
            "id": "2"
          },
          "actions": [

          ],
          "position": 2,
          "id": "2"
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates/:server_template_id/runnable_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"runnable_bindings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single executable binding.\n\nAn excutable may be either a RightScript or Chef Recipe."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "sequence": "",
        "right_script": "",
        "actions": "",
        "recipe": "",
        "position": "",
        "id": ""
      },
      "content_types": [
        "application/vnd.rightscale.runnable_binding"
      ],
      "links": {
        "server_template": "Href of associated ServerTemplate",
        "right_script": "Href of associated RightScript (only returned if RightScript executable)",
        "self": "Href of itself"
      },
      "description": "A RunnableBinding represents an item in a runlist of a ServerTemplate. These items could be\n  RightScript or Chef recipes, and could be associated with any one of the three runlists of a \n  ServerTemplate (boot, operational, decommission)."
    },
    "description": "A RunnableBinding represents an item in a runlist of a ServerTemplate. These items could be\nRightScript or Chef recipes, and could be associated with any one of the three runlists of a \nServerTemplate (boot, operational, decommission)."
  },
  "PublicationLineages": {
    "methods": {
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/publication_lineages/1"}
          ],
          "comments_emailed": false,
          "short_description": "SHORT_DESCRIPTION_3482802747",
          "actions": [

          ],
          "long_description": "LONG_DESCRIPTION_275921284",
          "created_at": 1428532335,
          "name": "NAME_1192695421",
          "comments_enabled": true,
          "updated_at": 1428532335
        },
        "status_code": "200 OK",
        "route": "GET    /api/publication_lineages/:id(.:format)? {:action=>\"show\", :controller=>\"publication_lineages\"}",
        "access_rules": [
          "publisher"
        ],
        "description": "Show information about a single publication lineage. Only non-HEAD revisions are possible."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "comments_emailed": "",
        "short_description": "",
        "actions": "",
        "long_description": "",
        "created_at": "",
        "name": "",
        "comments_enabled": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.publication_lineage"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "A Publication Lineage contains lineage information for a Publication in the MultiCloudMarketplace.\n  It is shared among all revisions of a Publication within the marketplace.\n  Publication Lineages are different than lineages that exist within an account."
    },
    "description": "A Publication Lineage contains lineage information for a Publication in the MultiCloudMarketplace.\nIt is shared among all revisions of a Publication within the marketplace.\nPublication Lineages are different than lineages that exist within an account."
  },
  "IpAddressBindings": {
    "methods": {
      "create": {
        "parameters": {
          "ip_address_binding[instance_href]": {
            "class": "String",
            "description": "The Instance to which this IpAddress should be bound.",
            "mandatory": true,
            "non_blank": true
          },
          "ip_address_binding[public_port]": {
            "class": "String",
            "description": "The incoming port for port forwarding. Incoming network traffic on this port will get forwarded (to the IP:Private Port of the specified Instance). Required unless public_ip_address_href is passed.",
            "mandatory": false,
            "non_blank": true
          },
          "ip_address_binding[protocol]": {
            "class": "String",
            "description": "Transport layer protocol of traffic that may be forwarded from public port to private port on the Instance. Required unless public_ip_address_href is passed.",
            "mandatory": false,
            "valid_values": [
              "UDP",
              "TCP"
            ],
            "non_blank": true
          },
          "ip_address_binding[public_ip_address_href]": {
            "class": "String",
            "description": "The IpAddress to bind to the specified instance. Required unless port forwarding rule params are passed.",
            "mandatory": false,
            "non_blank": true
          },
          "ip_address_binding[private_port]": {
            "class": "String",
            "description": "Incoming network traffic will get forwarded to this port number on the specified Instance. If not specified, will use public port. Required unless public_ip_address_href is passed.",
            "mandatory": false,
            "non_blank": true
          },
          "ip_address_binding": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings(.:format)? {:action=>\"create\", :controller=>\"ip_address_bindings\"}POST   /api/clouds/:cloud_id/ip_address_bindings(.:format)? {:action=>\"create\", :controller=>\"ip_address_bindings\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates an ip address binding which attaches a specified IpAddress resource\nto a specified instance, and also allows for configuration of port forwarding\nrules. If the instance specified is a current (running) instance, a one-time\nIpAddressBinding will be created. If the instance is a next instance, then\na recurring IpAddressBinding is created, which will cause the IpAddress to\nbe bound each time the incarnator boots."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "recurring": false,
          "links": [
            {"rel":"self","href":"/api/clouds/336004719/ip_address_bindings/RESOURCE_167495894;RAND"},
            {"rel":"instance","href":"/api/clouds/336004719/instances/RESOURCE_3500169318;RAND"},
            {"rel":"ip_address","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND"}
          ],
          "created_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "instance_href": {
            "column": "instance_rsid",
            "description": "The href of the Instance to filter on."
          },
          "ip_address_href": {
            "column": "ip_address_rsid",
            "description": "The href of the IpAddress to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings(.:format)? {:action=>\"index\", :controller=>\"ip_address_bindings\"}GET    /api/clouds/:cloud_id/ip_address_bindings(.:format)? {:action=>\"index\", :controller=>\"ip_address_bindings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the ip address bindings available to this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_address_bindings\"}DELETE /api/clouds/:cloud_id/ip_address_bindings/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_address_bindings\"}",
        "access_rules": [
          "actor"
        ],
        "description": null
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "recurring": false,
          "links": [
            {"rel":"self","href":"/api/clouds/336004719/ip_address_bindings/RESOURCE_167495894;RAND"},
            {"rel":"instance","href":"/api/clouds/336004719/instances/RESOURCE_3500169318;RAND"},
            {"rel":"ip_address","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND"}
          ],
          "created_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:ip_address_id/ip_address_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"ip_address_bindings\"}GET    /api/clouds/:cloud_id/ip_address_bindings/:id(.:format)? {:action=>\"show\", :controller=>\"ip_address_bindings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single ip address binding."
      }
    },
    "media_type": {
      "attributes": {
        "recurring": "",
        "links": "",
        "public_port": "",
        "created_at": "",
        "protocol": "",
        "private_port": ""
      },
      "content_types": [
        "application/vnd.rightscale.ip_address_binding"
      ],
      "links": {
        "ip_address": "Href of the IpAddress bound to the Instance",
        "instance": "Href of the Instance to which the IpAddress is bound",
        "self": "Href of itself"
      },
      "description": "An IpAddressBinding represents an abstraction for binding an IpAddress to an instance.\n  The IpAddress is bound immediately for a current instance, or on launch for a next instance.\n  It also allows specifying port forwarding rules for that particular IpAddress and Instance pair."
    },
    "description": "An IpAddressBinding represents an abstraction for binding an IpAddress to an instance.\nThe IpAddress is bound immediately for a current instance, or on launch for a next instance.\nIt also allows specifying port forwarding rules for that particular IpAddress and Instance pair."
  },
  "Credentials": {
    "methods": {
      "update": {
        "parameters": {
          "credential": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "credential[name]": {
            "class": "String",
            "description": "The updated name of the Credential.",
            "non_blank": true
          },
          "credential[description]": {
            "class": "String",
            "description": "The updated description of the Credential.",
            "non_blank": false
          },
          "credential[value]": {
            "class": "String",
            "description": "The updated value of the Credential.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/credentials/:id(.:format)?          {:action=>\"update\", :controller=>\"credentials\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a Credential."
      },
      "create": {
        "parameters": {
          "credential": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "credential[name]": {
            "class": "String",
            "description": "The name of the Credential to be created.",
            "mandatory": true,
            "non_blank": true
          },
          "credential[description]": {
            "class": "String",
            "description": "The description of the Credential to be created.",
            "non_blank": false
          },
          "credential[value]": {
            "class": "String",
            "description": "The value of the Credential to be created.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/credentials(.:format)?              {:action=>\"create\", :controller=>\"credentials\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new Credential with the given parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/credentials/1"}
          ],
          "description": null,
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "CREDENTIAL_2235028759",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "name": {
            "column": "name",
            "partial_match": true,
            "description": "Name of the Credentials to filter on."
          },
          "description": {
            "column": "description",
            "partial_match": true,
            "description": "Description of the Credentials to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/credentials(.:format)?              {:action=>\"index\", :controller=>\"credentials\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the Credentials available to this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/credentials/:id(.:format)?          {:action=>\"destroy\", :controller=>\"credentials\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a Credential."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/credentials/1"}
          ],
          "description": null,
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "CREDENTIAL_2235028759",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/credentials/:id(.:format)?          {:action=>\"show\", :controller=>\"credentials\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single Credential. NOTE: Credential values may be updated through the API, but values cannot be retrieved via the API."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "value": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.credential"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "A Credential provides an abstraction for sensitive textual information,\n  such as passphrases or cloud credentials, whose value should be encrypted\n  when stored in the database and not generally shown in the UI or through the\n  API. Credentials may then be used as inputs of type \"Cred\" in RightScripts\n  or Chef recipes. NOTE: Credential values may be updated through the API, but\n  values cannot be retrieved via the API."
    },
    "description": "A Credential provides an abstraction for sensitive textual information,\nsuch as passphrases or cloud credentials, whose value should be encrypted\nwhen stored in the database and not generally shown in the UI or through the\nAPI. Credentials may then be used as inputs of type \"Cred\" in RightScripts\nor Chef recipes. NOTE: Credential values may be updated through the API, but\nvalues cannot be retrieved via the API."
  },
  "Clouds": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888"},
            {"rel":"datacenters","href":"/api/clouds/888/datacenters"},
            {"rel":"instance_types","href":"/api/clouds/888/instance_types"},
            {"rel":"security_groups","href":"/api/clouds/888/security_groups"},
            {"rel":"instances","href":"/api/clouds/888/instances"},
            {"rel":"ssh_keys","href":"/api/clouds/888/ssh_keys"},
            {"rel":"images","href":"/api/clouds/888/images"},
            {"rel":"ip_addresses","href":"/api/clouds/888/ip_addresses"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_address_bindings"},
            {"rel":"volume_attachments","href":"/api/clouds/888/volume_attachments"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/recurring_volume_attachments"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volume_snapshots"},
            {"rel":"volumes","href":"/api/clouds/888/volumes"}
          ],
          "cloud_type": "eucalyptus",
          "description": "",
          "display_name": "habuka01",
          "name": "habuka01"
        },
        "filters": {
          "cloud_type": {
            "description": "The type of the cloud to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the cloud to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The cloud description field to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds(.:format)?                   {:action=>\"index\", :controller=>\"clouds\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the clouds available to this account."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888"},
            {"rel":"datacenters","href":"/api/clouds/888/datacenters"},
            {"rel":"instance_types","href":"/api/clouds/888/instance_types"},
            {"rel":"security_groups","href":"/api/clouds/888/security_groups"},
            {"rel":"instances","href":"/api/clouds/888/instances"},
            {"rel":"ssh_keys","href":"/api/clouds/888/ssh_keys"},
            {"rel":"images","href":"/api/clouds/888/images"},
            {"rel":"ip_addresses","href":"/api/clouds/888/ip_addresses"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_address_bindings"},
            {"rel":"volume_attachments","href":"/api/clouds/888/volume_attachments"},
            {"rel":"recurring_volume_attachments","href":"/api/clouds/888/recurring_volume_attachments"},
            {"rel":"volume_snapshots","href":"/api/clouds/888/volume_snapshots"},
            {"rel":"volumes","href":"/api/clouds/888/volumes"}
          ],
          "cloud_type": "eucalyptus",
          "description": "",
          "display_name": "habuka01",
          "name": "habuka01"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:id(.:format)?               {:action=>\"show\", :controller=>\"clouds\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single cloud. "
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "cloud_type": "",
        "description": "",
        "display_name": "",
        "name": "",
        "capabilities": ""
      },
      "content_types": [
        "application/vnd.rightscale.cloud"
      ],
      "links": {
        "instance_types": "Associated instance types",
        "datacenters": "Associated datacenters",
        "volumes": "Associated volumes",
        "subnets": "Associated subnets",
        "recurring_volume_attachments": "Associated recurring volume attachments",
        "volume_attachments": "Associated volume attachments",
        "volume_types": "Associated volume types",
        "security_groups": "Associated security groups",
        "images": "Associated images",
        "ssh_keys": "Associated ssh keys",
        "volume_snapshots": "Associated volume snapshots",
        "ip_address_bindings": "Associated IP Address Bindings",
        "ip_addresses": "Associated IP Addresses",
        "instances": "Associated instances",
        "self": "Href of itself"
      },
      "description": "Represents a Cloud (within the context of the account in the session)."
    },
    "description": "Represents a Cloud (within the context of the account in the session)."
  },
  "VolumeAttachments": {
    "methods": {
      "create": {
        "parameters": {
          "volume_attachment[instance_href]": {
            "class": "String",
            "description": "The href of the instance to which the volume will be attached to.",
            "non_blank": true
          },
          "volume_attachment[volume_href]": {
            "class": "String",
            "description": "The href of the volume to be attached.",
            "non_blank": true
          },
          "volume_attachment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "volume_attachment[device]": {
            "class": "String",
            "description": "The device location where the volume will be mounted. Value must be of format /dev/xvd[bcefghij]. This is not reliable and will be deprecated.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"create\", :controller=>\"volume_attachments\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Creates a new volume attachment."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_attachments/RESOURCE_2893029735;2272197279"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"volume","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"}
          ],
          "device_id": "device_id:9",
          "device": "/dev/xvdj",
          "actions": [

          ],
          "state": "attached",
          "resource_uid": "RESOURCE_2893029735",
          "created_at": "2015/04/08 22:32:14 +0000",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "volume_href": {
            "column": "volume_attachments.volume_rsid",
            "description": "The href of the volume to filter on."
          },
          "resource_uid": {
            "column": "volume_attachments.resource_uid",
            "description": "Resource Unique IDentifier for the volume to filter on."
          },
          "instance_href": {
            "column": "volume_attachments.instance_rsid",
            "description": "The href of the instance to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/volume_attachments(.:format)? {:action=>\"index\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volume_attachments(.:format)? {:action=>\"index\", :controller=>\"volume_attachments\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists all volume attachments."
      },
      "destroy": {
        "parameters": {
          "force": {
            "class": "String",
            "description": "Specifies whether to force the detachment of a volume.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"destroy\", :controller=>\"volume_attachments\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Deletes a given volume attachment."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_attachments/RESOURCE_2893029735;2272197279"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"volume","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"}
          ],
          "device_id": "device_id:9",
          "device": "/dev/xvdj",
          "actions": [

          ],
          "state": "attached",
          "resource_uid": "RESOURCE_2893029735",
          "created_at": "2015/04/08 22:32:14 +0000",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_attachments(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/volume_attachment(.:format)? {:action=>\"show\", :controller=>\"volume_attachments\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Displays information about a single volume attachment."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "device_id": "",
        "device": "",
        "actions": "",
        "state": "",
        "created_at": "",
        "resource_uid": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.volume_attachment"
      ],
      "links": {
        "instance": "Associated instance",
        "volume": "Associated volume",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A VolumeAttachment represents a relationship between a volume and an instance."
    },
    "description": "A VolumeAttachment represents a relationship between a volume and an instance."
  },
  "Repositories": {
    "methods": {
      "update": {
        "parameters": {
          "repository[source]": {
            "class": "String",
            "description": "The updated URL for the repository.",
            "non_blank": true
          },
          "repository[credentials][ssh_key]": {
            "class": "String",
            "description": "The updated SSH key for the repository (only valid for git repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[source_type]": {
            "class": "String",
            "description": "The updated source type for the repository.",
            "valid_values": [
              "git",
              "svn",
              "download"
            ],
            "non_blank": true
          },
          "repository[credentials][password]": {
            "class": "String",
            "description": "The updated password, or credential, for the repository (only valid for svn or download repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[commit_reference]": {
            "class": "String",
            "description": "The updated commit reference (tag, branch, revision...) for the repository",
            "non_blank": false
          },
          "repository[name]": {
            "class": "String",
            "description": "The updated repository name.",
            "non_blank": true
          },
          "repository": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "repository[credentials][username]": {
            "class": "String",
            "description": "The updated user name, or credential, for the repository (only valid for svn or download repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[asset_paths][cookbooks]": {
            "class": "Array",
            "description": "The updated cookbook paths for the repository",
            "non_blank": false
          },
          "repository[asset_paths]": {
            "class": "Hash",
            "non_blank": true
          },
          "repository[credentials]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "repository[description]": {
            "class": "String",
            "description": "The updated description for the repository.",
            "non_blank": false
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/repositories/:id(.:format)?         {:action=>\"update\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates a specified Repository.\n\nThe following types of inputs are supported for the credential fields:\n\n\n\nType\nFormat\nExample(s)\n\n\nText string\ntext:&lt;value&gt;\ntext:-----BEGIN RSA PRIVATE KEY-----text:secret\n\n\nCredential value\ncred:&lt;value&gt;\ncred:my ssh keycred:svn_1_password\n\n"
      },
      "cookbook_import": {
        "parameters": {
          "repository_commit_reference": {
            "class": "String",
            "description": "Optional commit reference indicating last succeeded commit. Must match the Repository's fetch_status.succeeded_commit attribute or the import will not be performed.",
            "non_blank": true
          },
          "asset_hrefs": {
            "class": "Array",
            "description": "Hrefs of the assets that should be imported.",
            "mandatory": true,
            "non_blank": true
          },
          "with_dependencies": {
            "class": "String",
            "description": "A flag indicating whether dependencies should automatically be imported.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "namespace": {
            "class": "String",
            "description": "The namespace to import into.",
            "valid_values": [
              "primary",
              "alternate"
            ],
            "non_blank": true
          },
          "follow": {
            "class": "String",
            "description": "A flag indicating whether imported cookbooks should be followed.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/repositories/:id/cookbook_import(.:format)? {:action=>\"cookbook_import\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Performs a Cookbook import, which allows you to use the specified cookbooks in your design objects."
      },
      "create": {
        "parameters": {
          "repository[source]": {
            "class": "String",
            "description": "The URL for the repository.",
            "mandatory": true,
            "non_blank": true
          },
          "repository[credentials][ssh_key]": {
            "class": "String",
            "description": "The SSH key, or credential, for the repository (only valid for git repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[source_type]": {
            "class": "String",
            "description": "The source type for the repository.",
            "mandatory": true,
            "valid_values": [
              "git",
              "svn",
              "download"
            ],
            "non_blank": true
          },
          "repository[credentials][password]": {
            "class": "String",
            "description": "The password, or credential, for the repository (only valid for svn or download repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[commit_reference]": {
            "class": "String",
            "description": "The revision for the repository",
            "non_blank": false
          },
          "repository[name]": {
            "class": "String",
            "description": "The repository name.",
            "mandatory": true,
            "non_blank": true
          },
          "repository": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "repository[credentials][username]": {
            "class": "String",
            "description": "The user name, or credential, for the repository (only valid for svn or download repositories).",
            "regex": "/(cred:.+|text:.*)/",
            "non_blank": true
          },
          "repository[asset_paths][cookbooks]": {
            "class": "Array",
            "description": "The cookbook paths for the repository",
            "non_blank": false
          },
          "repository[asset_paths]": {
            "class": "Hash",
            "non_blank": true
          },
          "repository[credentials]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "repository[description]": {
            "class": "String",
            "description": "The description for the repository.",
            "non_blank": false
          },
          "repository[auto_import]": {
            "class": "String",
            "description": "Whether cookbooks should automatically be imported upon repository creation.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/repositories(.:format)?             {:action=>\"create\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Creates a Repository.\n\nThe following types of inputs are supported for the credential fields:\n\n\n\nType\nFormat\nExample(s)\n\n\nText string\ntext:&lt;value&gt;\ntext:-----BEGIN RSA PRIVATE KEY-----text:secret\n\n\nCredential value\ncred:&lt;value&gt;\ncred:my ssh keycred:svn_1_password\n\n"
      },
      "resolve": {
        "parameters": {
          "imported_cookbook_name": {
            "class": "Array",
            "description": "A list of cookbook names that were imported by the repository.",
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/repositories/resolve(.:format)?     {:action=>\"resolve\", :controller=>\"repositories\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show a list of repositories that have imported cookbooks with the given names.\n\nThis operation returns a list of repositories that would later satisfy a call\nto the swap_repository\naction on a ServerTemplate.",
        "content_type": "application/vnd.rightscale.repository;type=collection"
      },
      "cookbook_import_preview": {
        "parameters": {
          "asset_hrefs": {
            "class": "Array",
            "description": "Hrefs of the assets that should be imported.",
            "mandatory": true,
            "non_blank": true
          },
          "namespace": {
            "class": "String",
            "description": "The namespace to import into.",
            "mandatory": true,
            "valid_values": [
              "primary",
              "alternate"
            ],
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/repositories/:id/cookbook_import_preview(.:format)? {:action=>\"cookbook_import_preview\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Retrieves a preview of the effects of a Cookbook import.\n\nNOTE: This action is for RightScale internal use only. The response is\nfree-form JSON with no associated mediatype.\n\nDO NOT USE, THIS ACTION IS SUBJECT TO CHANGE AT ANYTIME.",
        "content_type": "application/vnd.rightscale.import_preview;type=collection"
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/repositories/1"},
            {"rel":"repository_assets","href":"/api/repositories/1/repository_assets"}
          ],
          "source_type": "git",
          "fetch_status": {
          },
          "source": "git://host39308.com/repo48070.git",
          "actions": [
            {
              "rel": "cookbook_import_preview"
            },
            {
              "rel": "cookbook_import"
            },
            {
              "rel": "refetch"
            },
            {
              "rel": "resolve"
            }
          ],
          "asset_paths": {
            "cookbooks": null
          },
          "credentials": {
            "ssh_key": null
          },
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "cookbook_repo_164128677",
          "read_only": false,
          "id": "1",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "name": {
            "column": "name",
            "partial_match": true,
            "description": "Name of the Repositories to filter on."
          },
          "description": {
            "column": "description",
            "partial_match": true,
            "description": "Description of the Repositories to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/repositories(.:format)?             {:action=>\"index\", :controller=>\"repositories\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all Repositories for this Account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/repositories/:id(.:format)?         {:action=>\"destroy\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Deletes the specified Repositories."
      },
      "refetch": {
        "parameters": {
          "auto_import": {
            "class": "String",
            "description": "Whether cookbooks should automatically be imported after repositories are fetched.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/repositories/:id/refetch(.:format)? {:action=>\"refetch\", :controller=>\"repositories\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Refetches all RepositoryAssets associated with the Repository.\nNote that a refetch simply updates RightScale's view of the contents of the repository.\nYou must perform an import to use the assets in your design objects (or use the auto import parameter)."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/repositories/1"},
            {"rel":"repository_assets","href":"/api/repositories/1/repository_assets"}
          ],
          "source_type": "git",
          "fetch_status": {
          },
          "source": "git://host39308.com/repo48070.git",
          "actions": [
            {
              "rel": "cookbook_import_preview"
            },
            {
              "rel": "cookbook_import"
            },
            {
              "rel": "refetch"
            },
            {
              "rel": "resolve"
            }
          ],
          "asset_paths": {
            "cookbooks": null
          },
          "credentials": {
            "ssh_key": null
          },
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "cookbook_repo_164128677",
          "read_only": false,
          "id": "1",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/repositories/:id(.:format)?         {:action=>\"show\", :controller=>\"repositories\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows a specified Repository."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "commit_reference": "",
        "description": "",
        "source_type": "",
        "fetch_status": "",
        "actions": "",
        "asset_paths": "",
        "source": "",
        "asset_counts": "",
        "credentials": "",
        "created_at": "",
        "read_only": "",
        "name": "",
        "id": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.repository"
      ],
      "links": {
        "repository_assets": "Assets fetched from the repository",
        "self": "Href of itself"
      },
      "description": "A Repository is a location from which you can download and import design objects such as Chef cookbooks. Using this resource you can add and modify repository information and import assets discovered in the repository.\n\nRightScale currently supports the following types of repositores: git, svn, and URLs of compressed files (tar, tgz, gzip)."
    },
    "description": "A Repository is a location from which you can download and import design objects such as Chef cookbooks. Using this resource you can add and modify repository information and import assets discovered in the repository.\n\nRightScale currently supports the following types of repositores: git, svn, and URLs of compressed files (tar, tgz, gzip)."
  },
  "Permissions": {
    "methods": {
      "create": {
        "parameters": {
          "permission[user_href]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "permission": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "permission[role_title]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/permissions(.:format)?              {:action=>\"create\", :controller=>\"permissions\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Create a permission, thereby granting some user a particular role\nwith respect to the current account.\n\nThe 'observer' role has a special status; it must be granted before\na user is eligible for any other permission in a given account. \n\nWhen provisioning users, always create the observer permission FIRST; \ncreating any other permission before it will result in an error.\n\nFor more information about the roles available and the privileges\nthey confer, please refer to the following page of the RightScale\nsupport portal:\n  http://support.rightscale.com/15-References/Lists/ListofUser_Roles"
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/permissions/334416589"},
            {"rel":"account","href":"/api/accounts/331800546"},
            {"rel":"user","href":"/api/users/888"}
          ],
          "role_title": "actor_1459520147",
          "actions": [

          ],
          "created_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "user_href": {
            "description": "Href of the user"
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/permissions(.:format)?              {:action=>\"index\", :controller=>\"permissions\"}",
        "access_rules": [
          "admin"
        ],
        "description": "List all permissions for all users of the current acount."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/permissions/:id(.:format)?          {:action=>\"destroy\", :controller=>\"permissions\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Destroy a permission, thereby revoking a user's role with respect\nto the current account.\n\nThe 'observer' role has a special status; it cannot be revoked if\na user has any other roles, because other roles become useless without\nbeing able to read data pertaining to the account.\n\nWhen deprovisioning user, always destroy the observer permission LAST;\ndestroying it while the user has other permissions will result in an error."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/permissions/334416589"},
            {"rel":"account","href":"/api/accounts/331800546"},
            {"rel":"user","href":"/api/users/888"}
          ],
          "role_title": "actor_1459520147",
          "actions": [

          ],
          "created_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/permissions/:id(.:format)?          {:action=>\"show\", :controller=>\"permissions\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Show information about a single permission."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "role_title": "",
        "actions": "",
        "created_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.permission"
      ],
      "links": {
        "user": "Href of the user to which this permission belongs",
        "account": "Href of the account to which this permission belongs",
        "self": "Href of itself"
      },
      "description": null
    },
    "description": null
  },
  "NetworkOptionGroupAttachments": {
    "methods": {
      "update": {
        "parameters": {
          "network_option_group_attachment[network_option_group_href]": {
            "class": "String",
            "description": "The NetworkOptionGroup to attach to the specified resource.",
            "non_blank": true
          },
          "network_option_group_attachment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/network_option_group_attachments/:id(.:format)? {:action=>\"update\", :controller=>\"network_option_group_attachments\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Update an existing NetworkOptionGroupAttachment."
      },
      "create": {
        "parameters": {
          "network_option_group_attachment[network_option_group_href]": {
            "class": "String",
            "description": "The NetworkOptionGroup to attach to the specified resource.",
            "non_blank": true
          },
          "network_option_group_attachment[network_href]": {
            "class": "String",
            "description": "The Network to attach the specified NetworkOptionGroup to.",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group_attachment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/network_option_group_attachments(.:format)? {:action=>\"create\", :controller=>\"network_option_group_attachments\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a new NetworkOptionGroupAttachment."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/network_option_group_attachments/RESOURCE_1018387185;3954061321"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network_option_group","href":"/api/network_option_groups/RESOURCE_1117361955;296518507"},
            {"rel":"network","href":"/api/networks/RESOURCE_3932894095;1818962239"}
          ],
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1018387185",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "network_option_group_href": {
            "column": "network_options_group_rsid",
            "description": "Returns NetworkOptionGroupAttachments attached with the specified NetworkOptionGroup"
          },
          "cloud_href": {
            "description": "Returns NetworkOptionGroupAttachments in the specified cloud"
          },
          "network_href": {
            "column": "network_rsid",
            "description": "Returns NetworkOptionGroupAttachments attached to the specified Network"
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_option_group_attachments(.:format)? {:action=>\"index\", :controller=>\"network_option_group_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List NetworkOptionGroupAttachments in this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/network_option_group_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"network_option_group_attachments\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete an existing NetworkOptionGroupAttachment."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/network_option_group_attachments/RESOURCE_1018387185;3954061321"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network_option_group","href":"/api/network_option_groups/RESOURCE_1117361955;296518507"},
            {"rel":"network","href":"/api/networks/RESOURCE_3932894095;1818962239"}
          ],
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1018387185",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_option_group_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"network_option_group_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single NetworkOptionGroupAttachment."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "actions": "",
        "created_at": "",
        "network_option_group": "",
        "resource_uid": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.network_option_group_attachment"
      ],
      "links": {
        "network_option_group": "NetworkOptionGroup being attached to a networking resource",
        "network": "Network being attached with the NetworkOptionGroup",
        "cloud": "Associated Cloud",
        "self": "Href of itself"
      },
      "description": "Resource for attaching NetworkOptionGroups to Networks.\n\nA single NetworkOptionGroup can be attached to many Networks.\n  A Network/Subnet can have many NetworkOptionGroups attached, as long as the\n  NetworkOptionGroups each have different types.\n\nThis resource describes the attachment details between a particular\n  NetworkOptionGroup and Network.\n\nAmazon currently only supports attaching NetworkOptionGroups to Networks.\n  Other clouds in the future may support attaching to Subnets."
    },
    "description": "Resource for attaching NetworkOptionGroups to Networks.\n\nA single NetworkOptionGroup can be attached to many Networks.\nA Network/Subnet can have many NetworkOptionGroups attached, as long as the\nNetworkOptionGroups each have different types.\n\nThis resource describes the attachment details between a particular\nNetworkOptionGroup and Network.\n\nAmazon currently only supports attaching NetworkOptionGroups to Networks.\nOther clouds in the future may support attaching to Subnets."
  },
  "Images": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/images/RS_ID_16120294"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "image_type": "machine",
          "description": null,
          "virtualization_type": null,
          "visibility": "private",
          "actions": [

          ],
          "os_platform": null,
          "cpu_architecture": null,
          "resource_uid": "resource_machine_1623525750",
          "name": "NAME_4134789201"
        },
        "filters": {
          "cpu_architecture": {
            "partial_match": true,
            "description": "The CPU architecture of the Instance Type to filter on. Examples: x86 or 64-bit architecture."
          },
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Image to filter on."
          },
          "image_type": {
            "partial_match": true,
            "description": "The Image Type to filter on. This will be either \"machine\", \"ramdisk\" or \"kernel\"."
          },
          "visibility": {
            "description": "The visibility of the Image in the cloud to filter on. Examples: private, public."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Image to filter on."
          },
          "os_platform": {
            "partial_match": true,
            "description": "The image's operating system to filter on. Examples: Linux or Windows."
          },
          "description": {
            "partial_match": true,
            "description": "Description of the Image to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/images(.:format)?  {:action=>\"index\", :controller=>\"images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all Images for the given Cloud."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/images/RS_ID_16120294"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "image_type": "machine",
          "description": null,
          "virtualization_type": null,
          "visibility": "private",
          "actions": [

          ],
          "os_platform": null,
          "cpu_architecture": null,
          "resource_uid": "resource_machine_1623525750",
          "name": "NAME_4134789201"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/images/:id(.:format)? {:action=>\"show\", :controller=>\"images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows information about a single Image."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "image_type": "",
        "description": "",
        "virtualization_type": "",
        "visibility": "",
        "actions": "",
        "os_platform": "",
        "cpu_architecture": "",
        "resource_uid": "",
        "root_device_storage": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.image"
      ],
      "links": {
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "Images represent base VM image existing in a cloud. An image will define the initial Operating System and root disk contents \n  for a new Instance to have, and therefore it represents the basic starting point for creating a new one."
    },
    "description": "Images represent base VM image existing in a cloud. An image will define the initial Operating System and root disk contents \nfor a new Instance to have, and therefore it represents the basic starting point for creating a new one."
  },
  "ChildAccounts": {
    "methods": {
      "update": {
        "parameters": {
          "child_account[name]": {
            "class": "String",
            "description": "The updated name for the account.",
            "non_blank": true
          },
          "child_account": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/accounts/:id(.:format)?             {:action=>\"update\", :controller=>\"child_accounts\"}PUT    /api/child_accounts/:id(.:format)?       {:action=>\"update\", :controller=>\"child_accounts\"}",
        "access_rules": [
          "enterprise_manager"
        ],
        "description": "Update an enterprise ChildAccount for this Account."
      },
      "create": {
        "parameters": {
          "child_account[name]": {
            "class": "String",
            "mandatory": true,
            "non_blank": true
          },
          "child_account": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "child_account[cluster_href]": {
            "class": "String",
            "description": "The href of the cluster in which to create the account. If not specified, will default to the cluster of the parent account.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/child_accounts(.:format)?           {:action=>\"create\", :controller=>\"child_accounts\"}",
        "access_rules": [
          "enterprise_manager"
        ],
        "description": "Create an enterprise ChildAccount for this Account. The User will by default get an 'admin' role\non the ChildAccount to enable him/her to add, delete Users and Permissions.\n\nFor more information on the valid values for 'cluster_href', refer to the following:\n\n\nhttp://support.rightscale.com/12-Guides/RightScale_API_1.5/Examples/ChildAccounts/Create\n\n"
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/accounts/331800546"},
            {"rel":"owner","href":"/api/users/888"},
            {"rel":"cluster","href":"/api/clusters/9"}
          ],
          "created_at": "2015/04/08 22:32:12 +0000",
          "name": "SPEC_ACCOUNT",
          "updated_at": "2015/04/08 22:32:12 +0000"
        },
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the account to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/child_accounts(.:format)?           {:action=>\"index\", :controller=>\"child_accounts\"}",
        "access_rules": [
          "enterprise_manager"
        ],
        "description": "Lists the enterprise ChildAccounts available for this Account."
      }
    },
    "media_type": null,
    "description": null
  },
  "Publications": {
    "methods": {
      "import": {
        "parameters": {
        },
        "status_code": "201 Created",
        "route": "POST   /api/publications/:id/import(.:format)?  {:action=>\"import\", :controller=>\"publications\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Imports the given publication and its subordinates to this account.\nOnly non-HEAD revisions that are shared with the account can be imported."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/publications/1"},
            {"rel":"lineage","href":"/api/publication_lineages/1"}
          ],
          "content_type": "ServerTemplate",
          "description": "DESCRIPTION_2572349256",
          "actions": [
            {
              "rel": "import"
            }
          ],
          "revision_notes": "REVISION_NOTES 108715999",
          "revision": 5,
          "created_at": 1428532335,
          "publisher": "org_2116992474",
          "commit_message": "A committed revision",
          "name": "NAME_817523666",
          "updated_at": 1428532335
        },
        "filters": {
          "publisher": {
            "partial_match": true,
            "description": "The publisher to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name to filter on."
          },
          "revision": {
            "column": "version",
            "description": "The revision to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The description to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/publications(.:format)?             {:action=>\"index\", :controller=>\"publications\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the publications available to this account. Only non-HEAD revisions are possible."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/publications/1"},
            {"rel":"lineage","href":"/api/publication_lineages/1"}
          ],
          "content_type": "ServerTemplate",
          "description": "DESCRIPTION_2572349256",
          "actions": [
            {
              "rel": "import"
            }
          ],
          "revision_notes": "REVISION_NOTES 108715999",
          "revision": 5,
          "created_at": 1428532335,
          "publisher": "org_2116992474",
          "commit_message": "A committed revision",
          "name": "NAME_817523666",
          "updated_at": 1428532335
        },
        "status_code": "200 OK",
        "route": "GET    /api/publications/:id(.:format)?         {:action=>\"show\", :controller=>\"publications\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single publication. Only non-HEAD revisions are possible."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "content_type": "",
        "description": "",
        "actions": "",
        "revision_notes": "",
        "revision": "",
        "created_at": "",
        "publisher": "",
        "commit_message": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.publication"
      ],
      "links": {
        "lineage": "Href of Publication Lineage",
        "self": "Href of itself"
      },
      "description": "A Publication is a revisioned component shared with a set of Account Groups.\n  If shared with your account, it can be imported in to your account."
    },
    "description": "A Publication is a revisioned component shared with a set of Account Groups.\nIf shared with your account, it can be imported in to your account."
  },
  "Backups": {
    "methods": {
      "update": {
        "parameters": {
          "backup": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "backup[committed]": {
            "class": "String",
            "description": "Setting this to 'true' will update the 'rs_backup:committed=false' tag to 'rs_backup:committed=true' on all the snapshots.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/backups/:id(.:format)?              {:action=>\"update\", :controller=>\"backups\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Updates the committed tag for all of the VolumeSnapshots in the given Backup to the given value."
      },
      "cleanup": {
        "parameters": {
          "weeklies": {
            "class": "String",
            "description": "The number of weekly backups(the latest one in each week) that should be kept.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "yearlies": {
            "class": "String",
            "description": "The number of yearly backups(the latest one in each year) that should be kept.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "monthlies": {
            "class": "String",
            "description": "The number of monthly backups(the latest one in each month) that should be kept.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "dailies": {
            "class": "String",
            "description": "The number of daily backups(the latest one in each day) that should be kept.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "cloud_href": {
            "class": "String",
            "description": "Backups belonging to only this cloud are considered for cleanup. Otherwise, all backups in the account with the same lineage will be considered.",
            "non_blank": true
          },
          "keep_last": {
            "class": "String",
            "description": "The number of backups that should be kept.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "lineage": {
            "class": "String",
            "description": "The lineage of the backups that are to be cleaned-up.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/backups/cleanup(.:format)?          {:action=>\"cleanup\", :controller=>\"backups\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Deletes old backups that meet the given criteria. For example, if a user calls cleanup with keep monthlies set to 12,\nthen the latest backup for each month, for 12 months, will be kept.\n\nAll backups belong to a particular 'lineage'. Backups are not constrained to a specific cloud or a specific deployment.\nA lineage is account-specific. Hence, backups having the same lineage but belonging to different clouds are still considered\nfor cleanup.\n\nIf backups specific to a single cloud should be cleaned up, see the cloud_href parameter.\n\n\nDefinitions:\nA snapshot is completed if its status is \"available\"\nA snapshot is committed if it has a tag \"rs_backup:committed=true\"\nA snapshot belongs to a backup \"X\" if it has a tag \"rs_backup:backup_id=X\"\nA snapshot is part of a backup with size \"Y\" if it has a tag \"rs_backup:count=Y\"\nA snapshot's position in a backup is \"Z\" if it has a tag \"rs_backup:position=Z\"\n\nBackups are of 3 types:\nPerfect backup: A backup which is completed (all the snapshots are completed) and committed (all the snapshots are committed) and the number of snapshots it found is equal to the number\nin the \"rs_backup:count=\" tag on each of the Snapshots.\nImperfect backup: A backup which is not committed or if the number of snapshots it found is not equal to the number in the \"rs_backup:count=\" tag on each of the snapshots.\nPartial Perfect backup: A snapshot which is neither perfect nor imperfect\n\nAn imperfect backup is picked up for cleanup only if there exists a perfect backup with a newer created_at timestamp.\nNo constraints will be applied on such imperfect backups and all of them will be destroyed.\n\nFor all the perfect backups, the constraints of keep_last and dailies etc. will be applied.\nThe algorithm for choosing the perfect backups to keep is simple. It is the union of those set of backups if each of those conditions are applied\nindependently. i.e backups_to_keep = backups_to_keep(keep_last) U backups_to_keep(dailies) U backups_to_keep(weeklies) U backups_to_keep(monthlies) U backups_to_keep(yearlies)\n\nHence, it is important to \"commit\" a backup to make it eligible for cleanup.\n"
      },
      "create": {
        "parameters": {
          "backup": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "backup[lineage]": {
            "class": "String",
            "description": "A unique value to create backups belonging to a particular system.\n                                       This will be used to set the tag  e.g. 'rs_backup:lineage=prod_mysqldb'. ",
            "mandatory": true,
            "non_blank": true
          },
          "backup[name]": {
            "class": "String",
            "description": "The name to be set on each of the volume snapshots.",
            "mandatory": true,
            "non_blank": true
          },
          "backup[from_master]": {
            "class": "String",
            "description": "Setting this to 'true' will create a tag 'rs_backup:from_master=true' on the snapshots so that one can filter them later.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "backup[volume_attachment_hrefs]": {
            "class": "Array",
            "description": "List of volume attachment hrefs that are to be backed-up.",
            "mandatory": true,
            "non_blank": true
          },
          "backup[description]": {
            "class": "String",
            "description": "The description to be set on each of the volume snapshots",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/backups(.:format)?                  {:action=>\"create\", :controller=>\"backups\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Takes in an array of volumeattachmenthrefs and takes a snapshot of each.\nThe volumeattachmenthrefs must belong to the same instance."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "lineage": {
            "class": "String",
            "description": "Backups belonging to this lineage.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/backups/1aec6508-de3f-11e4-8103-000000000000"}
          ],
          "committed": true,
          "description": "backup description",
          "lineage": "lineage123",
          "actions": [
            {
              "rel": "restore"
            }
          ],
          "created_at": "2015/04/08 22:32:14 +0000",
          "volume_snapshot_count": 2,
          "name": "test backup",
          "from_master": false,
          "volume_snapshots": [
            {
              "committed": true,
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_2412106415;2618186331"
                }
              ],
              "device": "/dev/sdk1",
              "state": "available",
              "size": null,
              "resource_uid": "RESOURCE_2412106415",
              "position": "1"
            },
            {
              "committed": true,
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_3598952322;2788345972"
                }
              ],
              "device": "/dev/sdk2",
              "state": "available",
              "size": null,
              "resource_uid": "RESOURCE_3598952322",
              "position": "2"
            }
          ],
          "completed": true
        },
        "filters": {
          "completed": {
            "description": "Use to filter backups that are completed"
          },
          "latest_before": {
            "description": "Use to get the latest backup that is created before a certain date"
          },
          "from_master": {
            "description": "Use to filter backups whose snapshots all have the tag 'rs_backup:from_master=X'"
          },
          "committed": {
            "description": "Use to filter backups whose snapshots all have the tag 'rs_backup:committed=true'"
          },
          "cloud_href": {
            "description": "Use to filter backups belonging to a particular cloud."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/backups(.:format)?                  {:action=>\"index\", :controller=>\"backups\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists all of the backups with the given lineage tag. Filters can be used to search for a particular backup. If the\n'latest_before' filter is set, only one backup is returned (the latest backup before the given timestamp).\n\nTo get the latest completed backup, the 'completed' filter should be set to 'true' and the 'latest_before' filter\nshould be set to the current timestamp. The format of the timestamp must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g.\n2011/07/11 00:00:00 +0000.\n\nTo get the latest completed backup just before, say 25 June 2009, then the 'completed' filter\nshould be set to 'true' and the 'latest_before' filter should be set to 2009/06/25 00:00:00 +0000."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/backups/:id(.:format)?              {:action=>\"destroy\", :controller=>\"backups\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Deletes a given backup by deleting all of its snapshots, this call will succeed even if the backup has not completed."
      },
      "restore": {
        "parameters": {
          "backup": {
            "class": "Hash",
            "non_blank": true
          },
          "backup[volume_type_href]": {
            "class": "String",
            "description": "The href of the volume type. Each volume is created with this volume type instead of the default volume type for the cloud. A Name, Resource UID and optional Size is associated with a volume type.",
            "non_blank": true
          },
          "backup[name]": {
            "class": "String",
            "description": "Each volume is created with this name instead of the volume snapshot's name",
            "non_blank": true
          },
          "instance_href": {
            "class": "String",
            "description": "The instance href that the backup will be restored to.",
            "mandatory": true,
            "non_blank": true
          },
          "backup[size]": {
            "class": "String",
            "description": "Each volume is created with this size in gigabytes (GB) instead of the volume snapshot's size (must be equal or larger). Some volume types have predefined sizes and do not allow selecting a custom size on volume creation.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "backup[iops]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) each volume should support. Only available on clouds supporting performance provisioning.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "backup[description]": {
            "class": "String",
            "description": "Each volume is created with this description instead of the volume snapshot's description",
            "non_blank": true
          }
        },
        "status_code": "202 Accepted",
        "route": "POST   /api/backups/:id/restore(.:format)?      {:action=>\"restore\", :controller=>\"backups\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Restores the given Backup.\nThis call will:\n\n\ncreate the required number of Volumes from the volume_snapshots_hrefs in the given Backup,\nattach them to the given Instance at the device specified in the Snapshot. If the devices are already being used\n   on the Instance, the Task will denote that the restore has failed.\n"
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/backups/1aec6508-de3f-11e4-8103-000000000000"}
          ],
          "committed": true,
          "description": "backup description",
          "lineage": "lineage123",
          "actions": [
            {
              "rel": "restore"
            }
          ],
          "created_at": "2015/04/08 22:32:14 +0000",
          "volume_snapshot_count": 2,
          "name": "test backup",
          "from_master": false,
          "volume_snapshots": [
            {
              "committed": true,
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_2412106415;2618186331"
                }
              ],
              "device": "/dev/sdk1",
              "state": "available",
              "size": null,
              "resource_uid": "RESOURCE_2412106415",
              "position": "1"
            },
            {
              "committed": true,
              "links": [
                {
                  "rel": "self",
                  "href": "/api/clouds/888/volume_snapshots/RESOURCE_3598952322;2788345972"
                }
              ],
              "device": "/dev/sdk2",
              "state": "available",
              "size": null,
              "resource_uid": "RESOURCE_3598952322",
              "position": "2"
            }
          ],
          "completed": true
        },
        "status_code": "200 OK",
        "route": "GET    /api/backups/:id(.:format)?              {:action=>\"show\", :controller=>\"backups\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists the attributes of a given backup"
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "committed": "",
        "description": "",
        "lineage": "",
        "actions": "",
        "created_at": "",
        "volume_snapshot_count": "",
        "name": "",
        "from_master": "",
        "volume_snapshots": "",
        "completed": ""
      },
      "content_types": [
        "application/vnd.rightscale.backup"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "A backup represents a set of volume snapshots.\n\nDefinitions:\n   A snapshot is completed if its status is \"available\".\n   A snapshot is committed if it has a tag \"rs_backup:committed=true\".\n   A snapshot belongs to a backup \"X\" if it has a tag \"rs_backup:backup_id=X\".\n   A snapshot is part of a backup with size \"Y\" if it has a tag \"rs_backup:count=Y\".\n   A snapshot's position in a backup is \"Z\" if it has a tag \"rs_backup:position=Z\".\n\nBackups are of 3 types:\n   Perfect backup:         A backup which is completed(all the snapshots are completed) and committed(all the snapshots are committed) and the number of snapshots it found is equal to the number\n                           in the \"rs_backup:count=\" tag on each of the snapshots.\n\nImperfect backup:       A backup which is not committed or if the number of snapshots it found is not equal to the number in the \"rs_backup:count=\" tag on each of the snapshots.\n\nPartial Perfect backup: A snapshot which is neither perfect nor imperfect.\n\nAn imperfect backup is picked up for cleanup only if there exists a perfect backup with a newer created_at timestamp.\n   No constraints will be applied on such imperfect backups and all of them will be destroyed.\n\nFor all the perfect backups, the constraints of keep_last and dailies etc. will be applied.\n   The algorithm for choosing the perfect backups to keep is simple. It is the union of those set of backups if each of those conditions are applied\n   independently. i.e backups_to_keep = backups_to_keep(keep_last) U backups_to_keep(dailies) U backups_to_keep(weeklies) U backups_to_keep(monthlies) U backups_to_keep(yearlies) \n\nHence, it is important to \"commit\" a backup to make it eligible for cleanup."
    },
    "description": null
  },
  "Sessions": {
    "methods": {
      "index_instance_session": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/sessions/instance(.:format)?        {:action=>\"index_instance_session\", :controller=>\"sessions\"}GET    /api/session/instance(.:format)?         {:action=>\"index_instance_session\", :controller=>\"sessions\"}",
        "access_rules": [
          "instance"
        ],
        "description": "Shows the full attributes of the instance (that has the token used to log-in).\nThis call can be used by an instance to get it's own details.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -b mycookies -X GET https://my.rightscale.com/api/sessions/instance\n",
        "content_type": "application/vnd.rightscale.instance"
      },
      "create_instance_session": {
        "parameters": {
          "account_href": {
            "class": "String",
            "description": "The account href for which the session needs to be created.",
            "regex": "/^\\/api\\/accounts\\/\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "instance_token": {
            "class": "String",
            "description": "The instance token to login with.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/sessions/instance(.:format)?        {:action=>\"create_instance_session\", :controller=>\"sessions\"}POST   /api/session/instance(.:format)?         {:action=>\"create_instance_session\", :controller=>\"sessions\"}",
        "access_rules": {
        },
        "description": "Creates API session scoped to a given account and instance.\n\nThis call requires a form of authentication (token), as well as the account for which the session needs to be created.\nUpon successfully authenticating the credentials, the system will return a 204 code and set of two cookies that will serve as the credentials for the session. Both of these cookies\nmust be passed in any of the subsequent requests for this session.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the POST request against the content of the received Location header, passing the exact same parameters again.\n\n\nUsers can find their account ID and instance\\_token from their instance's user_data:\naccount ID regex: /RS_API_TOKEN=(\\d+):/\ninstance_token regex: /RS_API_TOKEN=(?:\\d+):(\\w+)&/\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -c mycookies -X POST -d instance_token='randomtoken' -d account_href=/api/accounts/11 https://my.rightscale.com/api/sessions/instance\n"
      },
      "create": {
        "parameters": {
          "email": {
            "class": "String",
            "description": "The email to login with.",
            "mandatory": true,
            "non_blank": true
          },
          "password": {
            "class": "String",
            "description": "The corresponding password.",
            "mandatory": true,
            "non_blank": true
          },
          "account_href": {
            "class": "String",
            "description": "The account href for which the session needs to be created.",
            "regex": "/^\\/api\\/accounts\\/\\d+$/",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/sessions(.:format)?                 {:action=>\"create\", :controller=>\"sessions\"}POST   /api/session(.:format)?                  {:action=>\"create\", :controller=>\"sessions\"}POST   /api/sessions(.:format)?                 {:action=>\"create\", :controller=>\"sessions\"}POST   /api/session(.:format)?                  {:action=>\"create\", :controller=>\"sessions\"}",
        "access_rules": {
        },
        "description": "Creates API session scoped to a given account. (API login)\n\nThis call requires a form of authentication (user and password), as well as the account for which the session needs to be created.\nUpon successfully authenticating the credentials, the system will return a 204 code and set of two cookies that will serve as the credentials for the session. Both of these cookies\nmust be passed in any of the subsequent requests for this session.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the POST request against the content of the received Location header, passing the exact same parameters again.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -c mycookies -X POST -d email='email@me.com' -d password='mypassword' -d account_href=/api/accounts/11 https://my.rightscale.com/api/sessions\n"
      },
      "index": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"account_groups","href":"/api/account_groups"},
            {"rel":"accounts","href":"/api/accounts"},
            {"rel":"alert_specs","href":"/api/alert_specs"},
            {"rel":"alerts","href":"/api/alerts"},
            {"rel":"audit_entries","href":"/api/audit_entries"},
            {"rel":"backups","href":"/api/backups"},
            {"rel":"child_accounts","href":"/api/child_accounts"},
            {"rel":"cloud_accounts","href":"/api/cloud_accounts"},
            {"rel":"clouds","href":"/api/clouds"},
            {"rel":"cookbooks","href":"/api/cookbooks"},
            {"rel":"credentials","href":"/api/credentials"},
            {"rel":"deployments","href":"/api/deployments"},
            {"rel":"identity_providers","href":"/api/identity_providers"},
            {"rel":"multi_cloud_images","href":"/api/multi_cloud_images"},
            {"rel":"network_gateways","href":"/api/network_gateways"},
            {"rel":"network_option_group_attachments","href":"/api/network_option_group_attachments"},
            {"rel":"network_option_groups","href":"/api/network_option_groups"},
            {"rel":"networks","href":"/api/networks"},
            {"rel":"permissions","href":"/api/permissions"},
            {"rel":"placement_groups","href":"/api/placement_groups"},
            {"rel":"preferences","href":"/api/preferences"},
            {"rel":"publication_lineages","href":"/api/publication_lineages"},
            {"rel":"publications","href":"/api/publications"},
            {"rel":"repositories","href":"/api/repositories"},
            {"rel":"right_scripts","href":"/api/right_scripts"},
            {"rel":"route_tables","href":"/api/route_tables"},
            {"rel":"routes","href":"/api/routes"},
            {"rel":"security_group_rules","href":"/api/security_group_rules"},
            {"rel":"self","href":"/api/session"},
            {"rel":"server_arrays","href":"/api/server_arrays"},
            {"rel":"server_template_multi_cloud_images","href":"/api/server_template_multi_cloud_images"},
            {"rel":"server_templates","href":"/api/server_templates"},
            {"rel":"servers","href":"/api/servers"},
            {"rel":"tags","href":"/api/tags"},
            {"rel":"users","href":"/api/users"}
          ],
          "message": "You have successfully logged into the RightScale API.",
          "actions": [

          ]
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/sessions(.:format)?                 {:action=>\"index\", :controller=>\"sessions\"}GET    /api/session(.:format)?                  {:action=>\"index\", :controller=>\"sessions\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Returns a list of root resources so an authenticated session can use them as a starting point or a way to know what\nfeatures are available within its privileges.\n\n\nExample Request using Curl:\ncurl -i -H X_API_VERSION:1.5 -b mycookies -X GET https://my.rightscale.com/api/sessions\n"
      },
      "accounts": {
        "parameters": {
          "view": {
            "class": "String",
            "description": "Extended view shows account permissions and products",
            "mandatory": false,
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          },
          "email": {
            "class": "String",
            "description": "The email to login with if not using existing session.",
            "mandatory": false,
            "non_blank": true
          },
          "password": {
            "class": "String",
            "description": "The corresponding password.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/sessions/accounts(.:format)?        {:action=>\"accounts\", :controller=>\"sessions\"}GET    /api/session/accounts(.:format)?         {:action=>\"accounts\", :controller=>\"sessions\"}",
        "access_rules": {
        },
        "description": "List all the accounts that a user has access to.\n\nThis call may be executed outside of an existing session. Doing so requires passing a username and password in the\nrequest body. The idea is that it should be possible to list accounts that can be used to create a session.\n\nUpon successfully authenticating the credentials, the system will return a 200 OK code and return the list of accounts.\nIf an 302 redirect code is returned, the client is responsible of re-issuing the GET request against the content of the received Location header, passing the exact same parameters again.\n\n\nExample Request using Curl (not using an existing session):\ncurl -i -H X_API_VERSION:1.5 -X GET -d email='email@me.com' -d password='mypassword' https://my.rightscale.com/api/sessions/accounts\n\nExample Request using Curl (using an existing session):\ncurl -i -H X_API_VERSION:1.5 -X GET -b mycookies https://my.rightscale.com/api/sessions/accounts\n",
        "content_type": "application/vnd.rightscale.account;type=collection"
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "message": "",
        "actions": ""
      },
      "content_types": [
        "application/vnd.rightscale.session"
      ],
      "links": {
        "servers": "Available Servers",
        "networks": "Available Networks",
        "deployments": "Available Deployments",
        "audit_entries": "Available AuditEntries",
        "server_templates": "Available ServerTemplates",
        "permissions": "Available Permissions",
        "multi_cloud_images": "Available MultiCloudImages",
        "publication_lineages": "Available PublicationLineages",
        "network_gateways": "Available NetworkGateways",
        "preferences": "Available Preferences",
        "server_template_multi_cloud_images": "Available ServerTemplateMultiCloudImages",
        "server_arrays": "Available ServerArrays",
        "repositories": "Available Repositories",
        "cookbooks": "Available Cookbooks",
        "account_groups": "Available AccountGroups",
        "right_scripts": "Available RightScripts",
        "publications": "Available Publications",
        "identity_providers": "Available IdentityProviders",
        "clouds": "Available Clouds",
        "cloud_flow_processes": "Available Cloud Workflow processes",
        "users": "Available Users",
        "alert_specs": "Available AlertSpecs",
        "security_group_rules": "Available SecurityGroupRules",
        "network_option_groups": "Available NetworkOptionGroups",
        "cloud_accounts": "Available CloudAccounts",
        "child_accounts": "Available ChildAccounts",
        "route_tables": "Available RouteTables",
        "placement_groups": "Available PlacementGroups",
        "network_option_group_attachments": "Available NetworkOptionGroupAttachments",
        "accounts": "Available Accounts",
        "tags": "Search for Tags",
        "self": "Href of itself",
        "routes": "Available Routes",
        "credentials": "Available Credentials",
        "backups": "Available Backups",
        "alerts": "Available Alerts"
      },
      "description": "Session is the first resource that API users interact with, it has links to root resources."
    },
    "description": "The sessions resource is in charge of creating API sessions that are bound to a given account. The sequence for login into the API is the following:\n\n\nPerform a POST request to /api/sessions ('create' action) to my.rightscale.com or to any more specific hosts saved from previous sessions.\nIf the targeted host is not appropriate for the specific account being accessed it will return a 302 http code with a URL with which the client must retry the same POST request.\nIf the targeted host is the right one and the login is successful, it will return a 204 http code, along with two cookies that will need to be saved and passed in any subsequent API request.\nIf there is an authentication or authorization problem with the POST request an error (typically 401 or 422 ) may be returned at any point in the above sequence.\nIf the session expires, it will return a 403 http code with a \"Session cookie is expired or invalid\" message.\n\n\n\nNote that all API calls irrespective of the resource it is acting on, should pass a header \"X_API_VERSION\" with the value \"1.5\".\n"
  },
  "PlacementGroups": {
    "methods": {
      "create": {
        "parameters": {
          "placement_group[name]": {
            "class": "String",
            "description": "The name of the Placement Group to be created.",
            "mandatory": true,
            "non_blank": true
          },
          "placement_group": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "placement_group[description]": {
            "class": "String",
            "description": "The description of the Placement Group to be created.",
            "non_blank": false
          },
          "placement_group[cloud_href]": {
            "class": "String",
            "description": "The Href of the Cloud in which the PlacementGroup should be created. Note: This feature is not supported for all clouds.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/placement_groups(.:format)?         {:action=>\"create\", :controller=>\"placement_groups\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a PlacementGroup."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/placement_groups/ABC1908070727DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "",
          "actions": [

          ],
          "state": null,
          "created_at": "2015/04/08 22:32:13 +0000",
          "resource_uid": "RESOURCE_3640845437",
          "name": "NAME_1094344696",
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "filters": {
          "state": {
            "description": "State of the Placement Groups to filter on. Valid values are: [\"pending\", \"available\", \"terminating\"]."
          },
          "cloud_href": {
            "description": "Href of the Cloud to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Placement Groups to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/placement_groups(.:format)?         {:action=>\"index\", :controller=>\"placement_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all PlacementGroups in an account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/placement_groups/:id(.:format)?     {:action=>\"destroy\", :controller=>\"placement_groups\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Destroys a PlacementGroup."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/placement_groups/ABC1908070727DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "",
          "actions": [

          ],
          "state": null,
          "created_at": "2015/04/08 22:32:13 +0000",
          "resource_uid": "RESOURCE_3640845437",
          "name": "NAME_1094344696",
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/placement_groups/:id(.:format)?     {:action=>\"show\", :controller=>\"placement_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows information about a single PlacementGroup."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "state": "",
        "created_at": "",
        "resource_uid": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.placement_group"
      ],
      "links": {
        "cloud": "Href of the Cloud that this PlacementGroup belongs to",
        "self": "Href of itself"
      },
      "description": null
    },
    "description": null
  },
  "Alerts": {
    "methods": {
      "disable": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/disable(.:format)? {:action=>\"disable\", :controller=>\"alerts\"}POST   /api/alerts/:id/disable(.:format)?       {:action=>\"disable\", :controller=>\"alerts\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Disables the Alert indefinitely. Idempotent."
      },
      "quench": {
        "parameters": {
          "duration": {
            "class": "String",
            "description": "The time period in seconds to suppress Alert from being triggered.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/quench(.:format)? {:action=>\"quench\", :controller=>\"alerts\"}POST   /api/alerts/:id/quench(.:format)?        {:action=>\"quench\", :controller=>\"alerts\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Suppresses the Alert from being triggered for a given time period. Idempotent."
      },
      "enable": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/servers/:server_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/server_arrays/:server_array_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/deployments/:deployment_id/alerts/:id/enable(.:format)? {:action=>\"enable\", :controller=>\"alerts\"}POST   /api/alerts/:id/enable(.:format)?        {:action=>\"enable\", :controller=>\"alerts\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Enables the Alert indefinitely. Idempotent."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "mandatory": false,
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/alerts/1"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"alert_spec","href":"/api/alert_specs/1"}
          ],
          "status": "enabled",
          "actions": [
            {
              "rel": "quench"
            },
            {
              "rel": "disable"
            }
          ],
          "created_at": "2015/04/08 22:32:15 +0000",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "filters": {
          "alert_spec_href": {
            "description": "The href of the AlertSpec to filter on."
          },
          "status": {
            "include": "denorm_server_alert",
            "description": "The status to filter on. The status is case-sensitive and must be one of: 'enabled', 'disabled', 'quenched', or 'triggered'."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/servers/:server_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/server_arrays/:server_array_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/deployments/:deployment_id/alerts(.:format)? {:action=>\"index\", :controller=>\"alerts\"}GET    /api/alerts(.:format)?                   {:action=>\"index\", :controller=>\"alerts\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists all Alerts."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/alerts/1"},
            {"rel":"instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"alert_spec","href":"/api/alert_specs/1"}
          ],
          "status": "enabled",
          "actions": [
            {
              "rel": "quench"
            },
            {
              "rel": "disable"
            }
          ],
          "created_at": "2015/04/08 22:32:15 +0000",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/servers/:server_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/server_arrays/:server_array_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/deployments/:deployment_id/alerts/:id(.:format)? {:action=>\"show\", :controller=>\"alerts\"}GET    /api/alerts/:id(.:format)?               {:action=>\"show\", :controller=>\"alerts\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Shows the attributes of a specified Alert."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "status": "",
        "actions": "",
        "created_at": "",
        "triggered_at": "",
        "quenched_until": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.alert"
      ],
      "links": {
        "alert_spec": "Associated AlertSpec",
        "instance": "Associated running Instance",
        "self": "Href of itself"
      },
      "description": "An Alert represents an AlertSpec bound to a running Instance."
    },
    "description": "An Alert represents an AlertSpec bound to a running Instance."
  },
  "UserDatas": {
    "methods": {
      "show": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/user_data/                          {:action=>\"show\", :controller=>\"user_datas\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": null
      }
    },
    "media_type": null,
    "description": null
  },
  "ServerTemplates": {
    "methods": {
      "swap_repository": {
        "parameters": {
          "source_repository_href": {
            "class": "String",
            "description": "The repository whose cookbook attachments are to be replaced.",
            "mandatory": true,
            "non_blank": true
          },
          "target_repository_href": {
            "class": "String",
            "description": "The repository whose cookbook attachments are to be utilized.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/server_templates/:id/swap_repository(.:format)? {:action=>\"swap_repository\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "In-place replacement of attached cookbooks from a given repository.\n\nFor each attached cookbook coming from the source repository, replace it by\nattaching a cookbook of identical name coming from the target repository.\n\nIn order for the operation to be successful, all attachments that came from the\nsource repository must exist in the target repository.\n\nIf multiple cookbooks of a given name exist in the target repository, preference\nis given by the following order (top most being the highest preference):\n\n\n  Name & Version Match / Primary Namespace\n  Name & Version Match / Alternate Namespace\n  Name Match / Primary Namespace\n  Name Match / Alternate Namespace\n\n\nIf multiple cookbooks still have the same preference for the replacement, the operation is\nindeterministic."
      },
      "update": {
        "parameters": {
          "server_template": {
            "class": "Hash",
            "description": "",
            "mandatory": true,
            "non_blank": true
          },
          "server_template[description]": {
            "class": "String",
            "description": "The updated description for the ServerTemplate.",
            "non_blank": false
          },
          "server_template[name]": {
            "class": "String",
            "description": "The updated name for the ServerTemplate.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/server_templates/:id(.:format)?     {:action=>\"update\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates attributes of a given ServerTemplate. Only HEAD revisions can be updated (revision 0).\nCurrently, the attributes you can update are only the 'direct' attributes of a server template. To\nmanage multi cloud images of a ServerTemplate, please see the resource 'ServerTemplateMultiCloudImages'."
      },
      "detect_changes_in_head": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "POST   /api/server_templates/:id/detect_changes_in_head(.:format)? {:action=>\"detect_changes_in_head\", :controller=>\"server_templates\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Identifies RightScripts attached to the resource that differ from their HEAD.\n\nIf the attached revision of the RightScript is the HEAD, then this will indicate\na difference between it and the latest committed revision in the same lineage.",
        "content_type": "application/vnd.rightscale.changes;type=collection"
      },
      "publish": {
        "parameters": {
          "email_comments": {
            "class": "String",
            "description": "Email me when a user comments on this ServerTemplate.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "account_group_hrefs": {
            "class": "Array",
            "description": "List of hrefs of account groups to publish to.",
            "mandatory": true,
            "non_blank": true
          },
          "categories": {
            "class": "Array",
            "description": "List of Categories.",
            "mandatory": false,
            "non_blank": true
          },
          "descriptions": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "descriptions[long]": {
            "class": "String",
            "description": "Long Description.",
            "mandatory": true,
            "non_blank": true
          },
          "allow_comments": {
            "class": "String",
            "description": "Allow users to leave comments on this ServerTemplate.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "descriptions[notes]": {
            "class": "String",
            "description": "New Revision Notes.",
            "mandatory": true,
            "non_blank": true
          },
          "descriptions[short]": {
            "class": "String",
            "description": "Short Description.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates/:id/publish(.:format)? {:action=>\"publish\", :controller=>\"server_templates\"}",
        "access_rules": [
          "publisher"
        ],
        "description": "Publishes a given ServerTemplate and its subordinates.\nOnly non-HEAD revisions that are owned by the account can be published."
      },
      "create": {
        "parameters": {
          "server_template": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_template[description]": {
            "class": "String",
            "description": "The description of the ServerTemplate to be created.",
            "non_blank": false
          },
          "server_template[name]": {
            "class": "String",
            "description": "The name of the ServerTemplate to be created.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates(.:format)?         {:action=>\"create\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Creates a new ServerTemplate with the given parameters."
      },
      "resolve": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "POST   /api/server_templates/:id/resolve(.:format)? {:action=>\"resolve\", :controller=>\"server_templates\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Enumerates all attached cookbooks, missing dependencies and bound executables.\n\nVersion constraints on missing dependencies and the state of the Chef Recipes;\nwhether or not the cookbook or recipe itself could be found among the\nattachments, will also be reported.",
        "content_type": "application/vnd.rightscale.cookbook_resolution;type=collection"
      },
      "commit": {
        "parameters": {
          "commit_message": {
            "class": "String",
            "description": "The message associated with the commit.",
            "mandatory": true,
            "non_blank": true
          },
          "freeze_repositories": {
            "class": "String",
            "description": "Freeze the repositories.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "commit_head_dependencies": {
            "class": "String",
            "description": "Commit all HEAD revisions (if any) of the associated MultiCloud Images, RightScripts and Chef repo sequences.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Commits a given ServerTemplate. Only HEAD revisions (revision 0) that are owned by the account can be committed."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_images","href":"/api/server_templates/1/multi_cloud_images"},
            {"rel":"default_multi_cloud_image","href":"/api/multi_cloud_images/1"},
            {"rel":"inputs","href":"/api/server_templates/1/inputs"},
            {"rel":"alert_specs","href":"/api/server_templates/1/alert_specs"},
            {"rel":"runnable_bindings","href":"/api/server_templates/1/runnable_bindings"},
            {"rel":"cookbook_attachments","href":"/api/server_templates/1/cookbook_attachments"}
          ],
          "description": "DESCRIPTION_1637299068",
          "lineage": "https://testscale_1/api/acct/331800546/ec2_server_templates/1",
          "actions": [
            {
              "rel": "commit"
            },
            {
              "rel": "clone"
            },
            {
              "rel": "resolve"
            },
            {
              "rel": "swap_repository"
            },
            {
              "rel": "detect_changes_in_head"
            }
          ],
          "revision": 0,
          "name": "NICKNAME_3365599203"
        },
        "filters": {
          "multi_cloud_image_href": {
            "column": "server_template_multi_cloud_images.multi_cloud_image_id",
            "description": "The MultiCloud Image used by the ServerTemplate to filter on."
          },
          "name": {
            "column": "nickname",
            "partial_match": true,
            "description": "The name of the ServerTemplate to filter on."
          },
          "revision": {
            "column": "version",
            "description": "The revision of the ServerTemplate to filter on."
          },
          "lineage": {
            "column": "lineage_uid",
            "description": "The ServerTemplate lineage to filter on (this attribute is simply a string and not a working URL)."
          },
          "description": {
            "partial_match": true,
            "description": "The ServerTemplate description to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates(.:format)?         {:action=>\"index\", :controller=>\"server_templates\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the ServerTemplates available to this account. HEAD revisions have a revision of 0.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      },
      "clone": {
        "parameters": {
          "server_template": {
            "class": "Hash",
            "description": "",
            "mandatory": true,
            "non_blank": true
          },
          "server_template[description]": {
            "class": "String",
            "description": "The description for the cloned ServerTemplate.",
            "non_blank": true
          },
          "server_template[name]": {
            "class": "String",
            "description": "The name for the cloned ServerTemplate.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates/:id/clone(.:format)? {:action=>\"clone\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Clones a given ServerTemplate."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/server_templates/:id(.:format)?     {:action=>\"destroy\", :controller=>\"server_templates\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Deletes a given ServerTemplate."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_images","href":"/api/server_templates/1/multi_cloud_images"},
            {"rel":"default_multi_cloud_image","href":"/api/multi_cloud_images/1"},
            {"rel":"inputs","href":"/api/server_templates/1/inputs"},
            {"rel":"alert_specs","href":"/api/server_templates/1/alert_specs"},
            {"rel":"runnable_bindings","href":"/api/server_templates/1/runnable_bindings"},
            {"rel":"cookbook_attachments","href":"/api/server_templates/1/cookbook_attachments"}
          ],
          "description": "DESCRIPTION_1637299068",
          "lineage": "https://testscale_1/api/acct/331800546/ec2_server_templates/1",
          "actions": [
            {
              "rel": "commit"
            },
            {
              "rel": "clone"
            },
            {
              "rel": "resolve"
            },
            {
              "rel": "swap_repository"
            },
            {
              "rel": "detect_changes_in_head"
            }
          ],
          "revision": 0,
          "name": "NICKNAME_3365599203"
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates/:id(.:format)?     {:action=>\"show\", :controller=>\"server_templates\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single ServerTemplate. HEAD revisions have a revision of 0.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "lineage": "",
        "inputs": "",
        "actions": "",
        "revision": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.server_template"
      ],
      "links": {
        "multi_cloud_images": "Associated MultiCloud Images",
        "runnable_bindings": "Attached RightScripts and Chef Recipes",
        "publication": "Associated privately shared Publication",
        "inputs": "List of configuration inputs",
        "default_multi_cloud_image": "The default MultiCloud Image",
        "alert_specs": "Associated AlertSpecs",
        "cookbook_attachments": "Attached Chef Cookbooks",
        "self": "Href of itself"
      },
      "description": "ServerTemplates allow you to pre-configure servers by starting from a base image and adding scripts that run during the boot,\n operational, and shutdown phases. A ServerTemplate is a description of how a new instance will be configured when it is\n provisioned by your cloud provider.\n All revisions of a ServerTemplate belong to a ServerTemplate lineage that is exposed by the \"lineage\" attribute.\n (NOTE: This attribute is merely a string to locate all revisions of a ServerTemplate and NOT a working URL)"
    },
    "description": "ServerTemplates allow you to pre-configure servers by starting from a base image and adding scripts that run during the boot,\noperational, and shutdown phases. A ServerTemplate is a description of how a new instance will be configured when it is\nprovisioned by your cloud provider.\n\nAll revisions of a ServerTemplate belong to a ServerTemplate lineage that is exposed by the \"lineage\" attribute.\n(NOTE: This attribute is merely a string to locate all revisions of a ServerTemplate and NOT a working URL)"
  },
  "ServerArrays": {
    "methods": {
      "launch": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Launches a new instance in the server array with the configuration defined in the 'next_instance'. This function is equivalent to invoking the launch action on the\nURL of this server_array's next_instance. See Instances#launch for details."
      },
      "multi_run_executable": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Run an executable on all instances of this array. This function is equivalent to invoking the \"multi_run_executable\" action on the instances resource\n(Instances#multi_run_executable with the filter \"parent_href == /api/server_arrays/XX\"). To run an executable on a subset of the instances of the array, provide additional filters. To run an executable\na single instance, invoke the action \"run_executable\" directly on the instance (see Instances#run_executable)"
      },
      "update": {
        "parameters": {
          "server_array[elasticity_params][schedule][][time]": {
            "class": "String",
            "description": "The updated time when an alert-based array resizes.",
            "regex": "/^\\d\\d:\\d\\d$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][schedule]": {
            "class": "Array",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_up_by]": {
            "class": "String",
            "description": "The updated number of servers to scale up by.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[name]": {
            "class": "String",
            "description": "The updated name for the Server Array.",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_calm_time]": {
            "class": "String",
            "description": "The updated time (in minutes) on how long you want to wait before you repeat another action.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[description]": {
            "class": "String",
            "description": "The updated description for the Server Array.",
            "non_blank": true
          },
          "server_array[datacenter_policy][][max]": {
            "class": "String",
            "description": "Max instances (0 for unlimited).",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[datacenter_policy]": {
            "class": "Array",
            "description": "The Server Allocation policy. For a single Datacenter, use 'instance[datacenter_href]' instead.",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][bounds][max_count]": {
            "class": "String",
            "description": "The updated maximum number of servers that can be operational at the same time in the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[datacenter_policy][][datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone.",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params][decision_threshold]": {
            "class": "String",
            "description": "The updated percentage of servers that must agree in order to trigger an alert before an action is taken.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][min_count]": {
            "class": "String",
            "description": "The updated minimum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][bounds]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[array_type]": {
            "class": "String",
            "description": "The updated array type for the Server Array.",
            "valid_values": [
              "alert",
              "queue"
            ],
            "non_blank": true
          },
          "server_array": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]": {
            "class": "String",
            "description": "Defines the ratio of worker instances per items in the queue. Example: If there are 50 items in the queue and \"Items per instance\" is set to 10, the server array will resize to 5 worker instances (50/10).  Default = 10",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params][voters_tag_predicate]": {
            "class": "String",
            "description": "The updated Voters Tag that RightScale will use in order to determine when to scale up/down.",
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_down_by]": {
            "class": "String",
            "description": "The updated number of servers to scale down by.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[optimized]": {
            "class": "String",
            "description": "A flag indicating whether Instances of this ServerArray should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server_array[state]": {
            "class": "String",
            "description": "The updated status of the server array. If active, the server array is enabled for scaling actions.",
            "valid_values": [
              "enabled",
              "disabled"
            ],
            "non_blank": true
          },
          "server_array[deployment_href]": {
            "class": "String",
            "description": "The updated href of the deployment for the Server Array.",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][queue_size]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][max_age]": {
            "class": "String",
            "description": "The updated threshold (in seconds) before a resize action occurs on the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[datacenter_policy][][weight]": {
            "class": "String",
            "description": "Instance allocation (should total 100%).",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][regexp]": {
            "class": "String",
            "description": "The updated regexp that helps the system determine an item's \"age\" in the queue. Example: created_at: (\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d UTC)",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][algorithm]": {
            "class": "String",
            "description": "The updated algorithm that defines how an item's age will be determined, either by the average age or max (oldest) age.",
            "valid_values": [
              "max_10",
              "avg_10"
            ],
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][max_count]": {
            "class": "String",
            "description": "The updated maximum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][bounds][min_count]": {
            "class": "String",
            "description": "The updated minimum number of servers that must be operational at all times in the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][collect_audit_entries]": {
            "class": "String",
            "description": "The updated audit SQS queue that will store audit entries.",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][day]": {
            "class": "String",
            "description": "The updated day when an alert-based array resizes.",
            "mandatory": true,
            "valid_values": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/server_arrays/:id(.:format)?        {:action=>\"update\", :controller=>\"server_arrays\"}PUT    /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"update\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a single server array."
      },
      "create": {
        "parameters": {
          "server_array[name]": {
            "class": "String",
            "description": "The name for the Server Array.",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_up_by]": {
            "class": "String",
            "description": "The number of servers to scale up by.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule]": {
            "class": "Array",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][time]": {
            "class": "String",
            "description": "Specifies the time when an alert-based array resizes.",
            "regex": "/^\\d\\d:\\d\\d$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[instance]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[instance][user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes]": {
            "class": "Hash",
            "description": "Cloud specific attributes that have no generic rightscale abstraction",
            "non_blank": true
          },
          "server_array[description]": {
            "class": "String",
            "description": "The description for the Server Array.",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_calm_time]": {
            "class": "String",
            "description": "The time (in minutes) on how long you want to wait before you repeat another action.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[instance][subnet_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the updated Subnets.",
            "non_blank": true
          },
          "server_array[elasticity_params]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][bounds][max_count]": {
            "class": "String",
            "description": "The maximum number of servers that can be operational at the same time in the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][pacing]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[datacenter_policy]": {
            "class": "Array",
            "description": "The Server Allocation policy. For a single Datacenter, use 'instance[datacenter_href]' instead.",
            "non_blank": true
          },
          "server_array[datacenter_policy][][max]": {
            "class": "String",
            "description": "Max instances (0 for unlimited).",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][bounds]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][min_count]": {
            "class": "String",
            "description": "The minimum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params][decision_threshold]": {
            "class": "String",
            "description": "The percentage of servers that must agree in order to trigger an alert before an action is taken.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[instance][ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the Ramdisk Image.",
            "non_blank": true
          },
          "server_array[instance][inputs][*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array[datacenter_policy][][datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone.",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[array_type]": {
            "class": "String",
            "description": "The array type for the Server Array.",
            "mandatory": true,
            "valid_values": [
              "alert",
              "queue"
            ],
            "non_blank": true
          },
          "server_array[instance][cloud_href]": {
            "class": "String",
            "description": "The href of the Cloud that the array will be associated with.",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][alert_specific_params][voters_tag_predicate]": {
            "class": "String",
            "description": "The Voters Tag that RightScale will use in order to determine when to scale up/down.",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][queue_size][items_per_instance]": {
            "class": "String",
            "description": "Defines the ratio of worker instances per items in the queue. Example: If there are 50 items in the queue and \"Items per instance\" is set to 10, the server array will resize to 5 worker instances (50/10).  Default = 10",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[instance][security_group_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the Security Groups.",
            "non_blank": true
          },
          "server_array[instance][kernel_image_href]": {
            "class": "String",
            "description": "The href of the Kernel Image.",
            "non_blank": true
          },
          "server_array[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server_array[instance][inputs][][value]": {
            "class": "String",
            "description": "The value of that Input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array[deployment_href]": {
            "class": "String",
            "description": "The href of the deployment for the Server Array.",
            "non_blank": true
          },
          "server_array[state]": {
            "class": "String",
            "description": "The status of the server array. If active, the server array is enabled for scaling actions.",
            "mandatory": true,
            "valid_values": [
              "enabled",
              "disabled"
            ],
            "non_blank": true
          },
          "server_array[optimized]": {
            "class": "String",
            "description": "A flag indicating whether Instances of this ServerArray should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server_array[elasticity_params][pacing][resize_down_by]": {
            "class": "String",
            "description": "The number of servers to scale down by.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[instance][datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone. For multiple Datacenters, use 'datacenter_policy' instead.",
            "non_blank": true
          },
          "server_array[instance][ip_forwarding_enabled]": {
            "class": "String",
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][max_age]": {
            "class": "String",
            "description": "The threshold (in seconds) before a resize action occurs on the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][queue_size]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[instance][server_template_href]": {
            "class": "String",
            "description": "The ServerTemplate that will be used to create the worker instances in the server array.",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[instance][instance_type_href]": {
            "class": "String",
            "description": "The href of the Instance Type.",
            "non_blank": true
          },
          "server_array[instance][inputs][][name]": {
            "class": "String",
            "description": "The Input name.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][regexp]": {
            "class": "String",
            "description": "The regexp that helps the system determine an item's \"age\" in the queue. Example: created_at: (\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d UTC)",
            "non_blank": true
          },
          "server_array[instance][multi_cloud_image_href]": {
            "class": "String",
            "description": "The href of the MultiCloudImage to be used.",
            "non_blank": true
          },
          "server_array[instance][ssh_key_href]": {
            "class": "String",
            "description": "The href of the SSH Key to be used.",
            "non_blank": true
          },
          "server_array[datacenter_policy][][weight]": {
            "class": "String",
            "description": "Instance allocation (should total 100%).",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "description": "The size for root disk. Not supported in all Clouds.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)",
            "mandatory": false,
            "non_blank": false
          },
          "server_array[elasticity_params][bounds][min_count]": {
            "class": "String",
            "description": "The minimum number of servers that must be operational at all times in the server array.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][max_count]": {
            "class": "String",
            "description": "The maximum number of servers that must be operational at all times in the server array. NOTE: Any changes that are made to the min/max count in the server array schedule will overwrite the array's default min/max count settings.",
            "regex": "/^\\d+$/",
            "mandatory": true,
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age]": {
            "class": "Hash",
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][item_age][algorithm]": {
            "class": "String",
            "description": "The algorithm that defines how an item's age will be determined, either by the average age or max (oldest) age.",
            "valid_values": [
              "max_10",
              "avg_10"
            ],
            "non_blank": true
          },
          "server_array[instance][placement_group_href]": {
            "class": "String",
            "description": "The href of the Placement Group.",
            "non_blank": true
          },
          "server_array[instance][associate_public_ip_address]": {
            "class": "String",
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server_array[instance][cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type.",
            "mandatory": false,
            "non_blank": true
          },
          "server_array[elasticity_params][schedule][][day]": {
            "class": "String",
            "description": "Specifies the day when an alert-based array resizes.",
            "mandatory": true,
            "valid_values": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "non_blank": true
          },
          "server_array[elasticity_params][queue_specific_params][collect_audit_entries]": {
            "class": "String",
            "description": "The audit SQS queue that will store audit entries.",
            "non_blank": true
          },
          "server_array[instance][image_href]": {
            "class": "String",
            "description": "The href of the Image to be used.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_arrays(.:format)?            {:action=>\"create\", :controller=>\"server_arrays\"}POST   /api/deployments/:deployment_id/server_arrays(.:format)? {:action=>\"create\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new server array, and configures its corresponding \"next\" instance with the received parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "instance_detail"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_arrays/1"},
            {"rel":"deployment","href":"/api/deployments/3"},
            {"rel":"current_instances","href":"/api/server_arrays/1/current_instances"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/4SR76CJO8M0A7"},
            {"rel":"alert_specs","href":"/api/server_arrays/1/alert_specs"},
            {"rel":"alerts","href":"/api/server_arrays/1/alerts"}
          ],
          "elasticity_params": {
            "bounds": {
              "min_count": "2",
              "max_count": "3"
            },
            "pacing": {
              "resize_calm_time": "6",
              "resize_up_by": "10",
              "resize_down_by": "5"
            },
            "schedule_entries": [
              {
                "day": "Monday",
                "time": "02:30",
                "min_count": 5,
                "max_count": 10
              },
              {
                "day": "Friday",
                "time": "14:00",
                "min_count": 6,
                "max_count": 11
              }
            ],
            "alert_specific_params": {
              "voters_tag_predicate": "pred3049727295",
              "decision_threshold": "50"
            }
          },
          "description": "DESCRIPTION_1639465109",
          "actions": [
            {
              "rel": "launch"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "enabled",
          "instances_count": 0,
          "array_type": "alert",
          "name": "NICKNAME_3075850269"
        },
        "filters": {
          "deployment_href": {
            "description": "The href of the Deployment to filter on."
          },
          "cloud_href": {
            "description": "The href of the Cloud to filter on."
          },
          "name": {
            "column": "server_arrays.nickname",
            "partial_match": true,
            "description": "The name of the Server Array to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_arrays(.:format)?            {:action=>\"index\", :controller=>\"server_arrays\"}GET    /api/deployments/:deployment_id/server_arrays(.:format)? {:action=>\"index\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists server arrays.\n\nBy using the available filters, it is possible to retrieve server arrays that have common characteristics.\nFor example, one can list:\n\n\narrays that have names that contain \"my_server_array\"\nall arrays of a given deployment\n"
      },
      "current_instances": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "List the running instances belonging to the server array. See Instances#index for details.\nThis action is slightly different from invoking the index action on the Instances resource with the filter \"parent_href == /api/server_arrays/XX\" because the\nlatter will include 'next_instance' as well."
      },
      "multi_terminate": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Terminate all instances of this array. This function is equivalent to invoking the \"multi_terminate\" action on the instances resource ( Instances#multi_terminate with\nthe filter \"parent_href == /api/server_arrays/XX\"). To terminate a subset of the instances of the array, provide additional filters. To terminate a single instance,\ninvoke the action \"terminate\" directly on the instance (see Instances#terminate)"
      },
      "clone": {
        "parameters": {
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_arrays/:id/clone(.:format)?  {:action=>\"clone\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Clones a given server array."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/server_arrays/:id(.:format)?        {:action=>\"destroy\", :controller=>\"server_arrays\"}DELETE /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"destroy\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given server array."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "instance_detail"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_arrays/1"},
            {"rel":"deployment","href":"/api/deployments/3"},
            {"rel":"current_instances","href":"/api/server_arrays/1/current_instances"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/4SR76CJO8M0A7"},
            {"rel":"alert_specs","href":"/api/server_arrays/1/alert_specs"},
            {"rel":"alerts","href":"/api/server_arrays/1/alerts"}
          ],
          "elasticity_params": {
            "bounds": {
              "min_count": "2",
              "max_count": "3"
            },
            "pacing": {
              "resize_calm_time": "6",
              "resize_up_by": "10",
              "resize_down_by": "5"
            },
            "schedule_entries": [
              {
                "day": "Monday",
                "time": "02:30",
                "min_count": 5,
                "max_count": 10
              },
              {
                "day": "Friday",
                "time": "14:00",
                "min_count": 6,
                "max_count": 11
              }
            ],
            "alert_specific_params": {
              "voters_tag_predicate": "pred3049727295",
              "decision_threshold": "50"
            }
          },
          "description": "DESCRIPTION_1639465109",
          "actions": [
            {
              "rel": "launch"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "enabled",
          "instances_count": 0,
          "array_type": "alert",
          "name": "NICKNAME_3075850269"
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_arrays/:id(.:format)?        {:action=>\"show\", :controller=>\"server_arrays\"}GET    /api/deployments/:deployment_id/server_arrays/:id(.:format)? {:action=>\"show\", :controller=>\"server_arrays\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows the information of a single server array."
      }
    },
    "media_type": {
      "attributes": {
        "optimized": "",
        "next_instance": "",
        "links": "",
        "elasticity_params": "",
        "description": "",
        "current_instances": "",
        "actions": "",
        "state": "",
        "instances_count": "",
        "array_type": "",
        "name": "",
        "datacenter_policy": ""
      },
      "content_types": [
        "application/vnd.rightscale.server_array"
      ],
      "links": {
        "deployment": "Associated deployment",
        "alert_specs": "Associated AlertSpecs",
        "next_instance": "Associated next instance",
        "current_instances": "Associated current instances",
        "alerts": "Associated Alerts",
        "self": "Href of itself"
      },
      "description": "A server array represents a logical group of instances and allows to resize(grow/shrink) that group based on certain elasticity parameters.\n\nA server array just like a server always has a next_instance association, which will define the configuration to apply when a new instance is launched.\n  But unlike a server which has a current_instance relationship, the server array has a \n  current_instances relationship that gives the information about\n  all the running instances in the array. Changes to the next_instance association prepares the configuration for the next instance that is to be launched\n  in the array and will therefore not affect any of the currently running instances."
    },
    "description": "A server array represents a logical group of instances and allows to resize(grow/shrink) that group based on certain elasticity parameters.\n\nA server array just like a server always has a next_instance association, which will define the configuration to apply when a new instance is launched.\nBut unlike a server which has a current_instance relationship, the server array has a\ncurrent_instances relationship that gives the information about\nall the running instances in the array. Changes to the next_instance association prepares the configuration for the next instance that is to be launched\nin the array and will therefore not affect any of the currently running instances."
  },
  "SecurityGroupRules": {
    "methods": {
      "update": {
        "parameters": {
          "security_group_rule[description]": {
            "class": "String",
            "non_blank": true
          },
          "security_group_rule": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/security_group_rules/:id(.:format)? {:action=>\"update\", :controller=>\"security_group_rules\"}PUT    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"update\", :controller=>\"security_group_rules\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": ""
      },
      "create": {
        "parameters": {
          "security_group_rule[protocol_details][end_port]": {
            "class": "String",
            "description": "End of port range (inclusive). Required if protocol is 'tcp' or 'udp'.",
            "non_blank": true
          },
          "security_group_rule[protocol]": {
            "class": "String",
            "description": "Protocol to filter on.",
            "mandatory": true,
            "valid_values": [
              "tcp",
              "udp",
              "icmp",
              "all"
            ],
            "non_blank": true
          },
          "security_group_rule[source_type]": {
            "class": "String",
            "description": "Source type. May be a CIDR block or another Security Group.",
            "mandatory": true,
            "valid_values": [
              "cidr_ips",
              "group"
            ],
            "non_blank": true
          },
          "security_group_rule[direction]": {
            "class": "String",
            "description": "Direction of traffic.",
            "valid_values": [
              "ingress",
              "egress"
            ],
            "non_blank": true
          },
          "security_group_rule[security_group_href]": {
            "class": "String",
            "description": "Security Group to add rule to.",
            "non_blank": true
          },
          "security_group_rule[protocol_details][start_port]": {
            "class": "String",
            "description": "Start of port range (inclusive). Required if protocol is 'tcp' or 'udp'.",
            "non_blank": true
          },
          "security_group_rule[cidr_ips]": {
            "class": "String",
            "description": "An IP address range in CIDR notation. Required if source_type is 'cidr_ips'.",
            "non_blank": true
          },
          "security_group_rule[protocol_details]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "security_group_rule[group_owner]": {
            "class": "String",
            "description": "Owner of source Security Group. Required if source_type is 'group'.",
            "non_blank": true
          },
          "security_group_rule[group_name]": {
            "class": "String",
            "description": "Name of source Security Group. Required if source_type is 'group'.",
            "non_blank": true
          },
          "security_group_rule[protocol_details][icmp_type]": {
            "class": "String",
            "description": "ICMP type. Required if protocol is 'icmp'.",
            "non_blank": true
          },
          "security_group_rule[protocol_details][icmp_code]": {
            "class": "String",
            "description": "ICMP code. Required if protocol is 'icmp'.",
            "non_blank": true
          },
          "security_group_rule": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/security_group_rules(.:format)?     {:action=>\"create\", :controller=>\"security_group_rules\"}POST   /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules(.:format)? {:action=>\"create\", :controller=>\"security_group_rules\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a security group rule for a security group.\nThe following flavors are supported:\n\n\ngroup-based TCP/UDP\ngroup-based ICMP\nCIDR-based TCP/UDP\nCIDR-based ICMP\n"
      },
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/security_group_rules/1"},
            {"rel":"security_group","href":"/api/clouds/888/security_groups/RESOURCE_231394044;RAND"}
          ],
          "start_port": "10",
          "cidr_ips": "10.0.0.0/32",
          "source_type": "cidr",
          "description": "some description",
          "end_port": "20",
          "actions": [

          ],
          "protocol": "tcp",
          "direction": "egress"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/security_group_rules(.:format)?     {:action=>\"index\", :controller=>\"security_group_rules\"}GET    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules(.:format)? {:action=>\"index\", :controller=>\"security_group_rules\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists SecurityGroupRules."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/security_group_rules/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_group_rules\"}DELETE /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"destroy\", :controller=>\"security_group_rules\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete security group rule(s)"
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/security_group_rules/1"},
            {"rel":"security_group","href":"/api/clouds/888/security_groups/RESOURCE_231394044;RAND"}
          ],
          "start_port": "10",
          "cidr_ips": "10.0.0.0/32",
          "source_type": "cidr",
          "description": "some description",
          "end_port": "20",
          "actions": [

          ],
          "protocol": "tcp",
          "direction": "egress"
        },
        "status_code": "200 OK",
        "route": "GET    /api/security_group_rules/:id(.:format)? {:action=>\"show\", :controller=>\"security_group_rules\"}GET    /api/clouds/:cloud_id/security_groups/:security_group_id/security_group_rules/:id(.:format)? {:action=>\"show\", :controller=>\"security_group_rules\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single SecurityGroupRule."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "start_port": "",
        "cidr_ips": "",
        "description": "",
        "source_type": "",
        "href": "",
        "end_port": "",
        "actions": "",
        "group_owner": "",
        "group_name": "",
        "icmp_code": "",
        "protocol": "",
        "group_uid": "",
        "icmp_type": "",
        "direction": ""
      },
      "content_types": [
        "application/vnd.rightscale.security_group_rule"
      ],
      "links": {
        "security_group": "Associated security group",
        "self": "Href of itself"
      },
      "description": "Security Group Rules represent the ingress/egress rules that define a security group."
    },
    "description": null
  },
  "Networks": {
    "methods": {
      "update": {
        "parameters": {
          "network[name]": {
            "class": "String",
            "description": "The updated name for the Network.",
            "non_blank": true
          },
          "network[description]": {
            "class": "String",
            "description": "The updated description for the Network.",
            "non_blank": true
          },
          "network": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network[route_table_href]": {
            "class": "String",
            "description": "Sets the default RouteTable for this Network.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/networks/:id(.:format)?             {:action=>\"update\", :controller=>\"networks\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Updates the given network."
      },
      "create": {
        "parameters": {
          "network[name]": {
            "class": "String",
            "description": "The name for the Network.",
            "non_blank": true
          },
          "network[description]": {
            "class": "String",
            "description": "The description for the Network.",
            "non_blank": true
          },
          "network[instance_tenancy]": {
            "class": "String",
            "description": "The launch policy for AWS instances in the Network. Specify 'default' to allow instances to decide their own launch policy. Specify 'dedicated' to force all instances to be launched as 'dedicated'.",
            "non_blank": true
          },
          "network[cloud_href]": {
            "class": "String",
            "description": "The Cloud to create the Network in",
            "mandatory": true,
            "non_blank": true
          },
          "network": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network[cidr_block]": {
            "class": "String",
            "description": "The range of IP addresses for the Network. This parameter is required for Amazon clouds.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/networks(.:format)?                 {:action=>\"create\", :controller=>\"networks\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Creates a new network."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/networks/RESOURCE_3932894095;1818962239"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "instance_tenancy": "INSTANCE_TENANCY_3598932845",
          "cidr_block": "10.0.0.0/32",
          "description": "DESCRIPTION_3672741924",
          "resource_uid": "RESOURCE_3932894095",
          "name": "NAME_1371845102",
          "is_default": false
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique Identifier for the Network to filter on."
          },
          "cidr_block": {
            "description": "Network's CIDR to filter on."
          },
          "cloud_href": {
            "description": "Cloud href to filter on."
          },
          "name": {
            "column": "name",
            "partial_match": true,
            "description": "Name of the Network to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/networks(.:format)?                 {:action=>\"index\", :controller=>\"networks\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists networks in this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/networks/:id(.:format)?             {:action=>\"destroy\", :controller=>\"networks\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Deletes the given network(s)."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/networks/RESOURCE_3932894095;1818962239"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "instance_tenancy": "INSTANCE_TENANCY_3598932845",
          "cidr_block": "10.0.0.0/32",
          "description": "DESCRIPTION_3672741924",
          "resource_uid": "RESOURCE_3932894095",
          "name": "NAME_1371845102",
          "is_default": false
        },
        "status_code": "200 OK",
        "route": "GET    /api/networks/:id(.:format)?             {:action=>\"show\", :controller=>\"networks\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows attributes of a single network."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "instance_tenancy": "",
        "cidr_block": "",
        "description": "",
        "actions": "",
        "resource_uid": "",
        "name": "",
        "is_default": ""
      },
      "content_types": [
        "application/vnd.rightscale.network"
      ],
      "links": {
        "default_route_table": "The href of the RouteTable that is currently active",
        "cloud": "Href of the Cloud the network is in",
        "self": "Href of itself"
      },
      "description": "A Network is a logical grouping of network devices."
    },
    "description": "A Network is a logical grouping of network devices."
  },
  "NetworkOptionGroups": {
    "methods": {
      "update": {
        "parameters": {
          "network_option_group[options][*]": {
            "class": "String",
            "description": "Add new or update existing key/value option pairs.",
            "mandatory": false,
            "non_blank": true
          },
          "network_option_group": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group[name]": {
            "class": "String",
            "description": "Update the name",
            "mandatory": false,
            "non_blank": false
          },
          "network_option_group[description]": {
            "class": "String",
            "description": "Update the description",
            "mandatory": false,
            "non_blank": false
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/network_option_groups/:id(.:format)? {:action=>\"update\", :controller=>\"network_option_groups\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Update an existing NetworkOptionGroup."
      },
      "create": {
        "parameters": {
          "network_option_group[options][*]": {
            "class": "String",
            "description": "Key/Value separated options (ex: network_option_group[options][domain-name]='rightscale.com'",
            "non_blank": true
          },
          "network_option_group[options]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group[cloud_href]": {
            "class": "String",
            "description": "The Cloud to create this NetworkOptionGroup in",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group[type]": {
            "class": "String",
            "description": "Type of this NetworkOptionGroup",
            "mandatory": true,
            "non_blank": true
          },
          "network_option_group[name]": {
            "class": "String",
            "description": "Name of this NetworkOptionGroup",
            "non_blank": false
          },
          "network_option_group[description]": {
            "class": "String",
            "description": "Description of this NetworkOptionGroup",
            "non_blank": false
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/network_option_groups(.:format)?    {:action=>\"create\", :controller=>\"network_option_groups\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a new NetworkOptionGroup."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "type": "aws-dhcp-options",
          "links": [
            {"rel":"self","href":"/api/network_option_groups/RESOURCE_1117361955;296518507"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1117361955",
          "name": "NAME_220750662",
          "options": {
            "dns_names": "xxx.com"
          },
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "type": {
            "column": "network_options_group_type",
            "description": "Returns NetworkOptionGroups with the specified types"
          },
          "cloud_href": {
            "description": "Returns NetworkOptionGroups in the specified cloud"
          },
          "name": {
            "partial_match": true,
            "description": "Returns NetworkOptionGroups containing the specified name"
          },
          "description": {
            "partial_match": true,
            "description": "Returns NetworkOptionGroups containing the specified description"
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_option_groups(.:format)?    {:action=>\"index\", :controller=>\"network_option_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List NetworkOptionGroups available in this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/network_option_groups/:id(.:format)? {:action=>\"destroy\", :controller=>\"network_option_groups\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete an existing NetworkOptionGroup."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "type": "aws-dhcp-options",
          "links": [
            {"rel":"self","href":"/api/network_option_groups/RESOURCE_1117361955;296518507"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_1117361955",
          "name": "NAME_220750662",
          "options": {
            "dns_names": "xxx.com"
          },
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_option_groups/:id(.:format)? {:action=>\"show\", :controller=>\"network_option_groups\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single NetworkOptionGroup."
      }
    },
    "media_type": {
      "attributes": {
        "type": "",
        "links": "",
        "description": "",
        "actions": "",
        "created_at": "",
        "resource_uid": "",
        "name": "",
        "options": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.network_option_group"
      ],
      "links": {
        "cloud": "Associated cloud.",
        "self": "This NetworkOptionGroup's href"
      },
      "description": "A key/value pair hash containing options for configuring a Network.\n\nThe key/value pairs are stored in the \"options\" parameter.\n\nKeys correspond to the type of option to set, and values correspond\n  to the value of the particular option being set.\n\nOption keys that are supported vary depending on cloud -- please consult\n  your particular cloud's documentation for available option keys."
    },
    "description": "A key/value pair hash containing options for configuring a Network.\n\nThe key/value pairs are stored in the \"options\" parameter.\n\nKeys correspond to the type of option to set, and values correspond\nto the value of the particular option being set.\n\nOption keys that are supported vary depending on cloud -- please consult\nyour particular cloud's documentation for available option keys."
  },
  "MultiCloudImages": {
    "methods": {
      "update": {
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "description": "The updated name for the MultiCloudImage.",
            "non_blank": true
          },
          "multi_cloud_image": {
            "class": "Hash",
            "description": "",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "description": "The updated description for the MultiCloudImage.",
            "non_blank": false
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"update\", :controller=>\"multi_cloud_images\"}PUT    /api/multi_cloud_images/:id(.:format)?   {:action=>\"update\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates attributes of a given MultiCloudImage. Only HEAD revisions can be updated (revision 0).\nCurrently, the attributes you can update are only the 'direct' attributes of a server template."
      },
      "create": {
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "description": "The name of the MultiCloudImage to be created.",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "description": "The description of the MultiCloudImage to be created.",
            "non_blank": false
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_templates/:server_template_id/multi_cloud_images(.:format)? {:action=>\"create\", :controller=>\"multi_cloud_images\"}POST   /api/multi_cloud_images(.:format)?       {:action=>\"create\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Creates a new MultiCloudImage with the given parameters."
      },
      "commit": {
        "parameters": {
          "commit_message": {
            "class": "String",
            "description": "The message associated with the commit.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/multi_cloud_images/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Commits a given MultiCloudImage. Only HEAD revisions can be committed."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/1"},
            {"rel":"settings","href":"/api/multi_cloud_images/1/settings"}
          ],
          "description": "DESCRIPTION_3624595679",
          "actions": [
            {
              "rel": "clone"
            }
          ],
          "revision": 0,
          "name": "NAME_1795651987"
        },
        "filters": {
          "name": {
            "partial_match": true,
            "description": "The name of the MultiCloudImage to filter on."
          },
          "revision": {
            "column": "version",
            "description": "The version of the MultiCloudImage to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The MultiCloudImage description to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates/:server_template_id/multi_cloud_images(.:format)? {:action=>\"index\", :controller=>\"multi_cloud_images\"}GET    /api/multi_cloud_images(.:format)?       {:action=>\"index\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the MultiCloudImages available to this account. HEAD revisions have a revision of 0."
      },
      "clone": {
        "parameters": {
          "multi_cloud_image[name]": {
            "class": "String",
            "description": "The name for the cloned MultiCloudImage.",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image": {
            "class": "Hash",
            "description": "",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image[description]": {
            "class": "String",
            "description": "The description for the cloned MultiCloudImage.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/multi_cloud_images/:id/clone(.:format)? {:action=>\"clone\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Clones a given MultiCloudImage."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"destroy\", :controller=>\"multi_cloud_images\"}DELETE /api/multi_cloud_images/:id(.:format)?   {:action=>\"destroy\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Deletes a given MultiCloudImage."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/1"},
            {"rel":"settings","href":"/api/multi_cloud_images/1/settings"}
          ],
          "description": "DESCRIPTION_3624595679",
          "actions": [
            {
              "rel": "clone"
            }
          ],
          "revision": 0,
          "name": "NAME_1795651987"
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_templates/:server_template_id/multi_cloud_images/:id(.:format)? {:action=>\"show\", :controller=>\"multi_cloud_images\"}GET    /api/multi_cloud_images/:id(.:format)?   {:action=>\"show\", :controller=>\"multi_cloud_images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single MultiCloudImage. HEAD revisions have a revision of 0."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "revision": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.multi_cloud_image"
      ],
      "links": {
        "settings": "Associated multi cloud image settings",
        "self": "Href of itself"
      },
      "description": "A MultiCloudImage is a RightScale component that functions as a pointer to machine images in specific clouds\n (e.g. AWS US-East, Rackspace). Each ServerTemplate can reference many MultiCloudImages that defines which\n image should be used when a server is launched in a particular cloud."
    },
    "description": "A MultiCloudImage is a RightScale component that functions as a pointer to machine images in specific clouds\n(e.g. AWS US-East, Rackspace). Each ServerTemplate can reference many MultiCloudImages that defines which\nimage should be used when a server is launched in a particular cloud."
  },
  "MonitoringMetrics": {
    "methods": {
      "data": {
        "parameters": {
          "end": {
            "class": "String",
            "description": "An integer number of seconds from current time. e.g. -150 or 0 ",
            "regex": "/^(-\\d+)|0$/",
            "mandatory": true,
            "non_blank": true
          },
          "start": {
            "class": "String",
            "description": "An integer number of seconds from current time. e.g. -300",
            "regex": "/^(-\\d+)|0$/",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics/:id/data(.:format)? {:action=>\"data\", :controller=>\"monitoring_metrics\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Gives the raw monitoring data for a particular metric. The response will include different variables\nassociated with that metric and the data points for each of those variables.\n\nTo get the data for a certain duration, for e.g. for the last 10 minutes(600 secs), provide the variables\nstart=\"-600\" and end=\"0\".",
        "content_type": "application/vnd.rightscale.monitoring_metric_data"
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "tz": {
            "class": "String",
            "description": "The time zone in which the graph will be displayed. Default will be 'America/Los_Angeles'. For more zones, see User Settings -> Preferences. ",
            "non_blank": true
          },
          "period": {
            "class": "String",
            "description": "The time scale for which the graph is generated. Default is 'day'",
            "valid_values": [
              "now",
              "day",
              "yday",
              "week",
              "lweek",
              "month",
              "quarter",
              "year"
            ],
            "non_blank": true
          },
          "size": {
            "class": "String",
            "description": "The size of the graph to be generated. Default is 'small'.",
            "valid_values": [
              "thumb",
              "tiny",
              "small",
              "large",
              "xlarge"
            ],
            "non_blank": true
          },
          "title": {
            "class": "String",
            "description": "The title of the graph.",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics/cpu-0:cpu-idle"},
            {"rel":"data","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics/cpu-0:cpu-idle/data"}
          ],
          "plugin": "cpu-0",
          "graph_href": "test.com/graph",
          "actions": [

          ],
          "view": "cpu-idle"
        },
        "filters": {
          "plugin": {
            "description": "The plugin to filter on."
          },
          "view": {
            "description": "The view to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics(.:format)? {:action=>\"index\", :controller=>\"monitoring_metrics\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the monitoring metrics available for the instance and their corresponding graph hrefs.\nMaking a request to the graph_href will return a png image corresponding to that monitoring metric."
      },
      "show": {
        "parameters": {
          "tz": {
            "class": "String",
            "description": "The time zone in which the graph will be displayed. Default will be 'America/Los_Angeles'. For more zones, see User Settings -> Preferences. ",
            "non_blank": true
          },
          "period": {
            "class": "String",
            "description": "The time scale for which the graph is generated. Default is 'day'.",
            "valid_values": [
              "now",
              "day",
              "yday",
              "week",
              "lweek",
              "month",
              "quarter",
              "year"
            ],
            "non_blank": true
          },
          "size": {
            "class": "String",
            "description": "The size of the graph to be generated. Default is 'small'.",
            "valid_values": [
              "thumb",
              "tiny",
              "small",
              "large",
              "xlarge"
            ],
            "non_blank": true
          },
          "title": {
            "class": "String",
            "description": "The title of the graph.",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics/cpu-0:cpu-idle"},
            {"rel":"data","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics/cpu-0:cpu-idle/data"}
          ],
          "plugin": "cpu-0",
          "graph_href": "test.com/graph",
          "actions": [

          ],
          "view": "cpu-idle"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/monitoring_metrics/:id(.:format)? {:action=>\"show\", :controller=>\"monitoring_metrics\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows attributes of a single monitoring metric.\nMaking a request to the graph_href will return a png image corresponding to that monitoring metric."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "plugin": "",
        "graph_href": "",
        "actions": "",
        "view": ""
      },
      "content_types": [
        "application/vnd.rightscale.monitoring_metric"
      ],
      "links": {
        "data": "Href for getting raw monitoring data for the metric",
        "self": "Href of itself"
      },
      "description": "A monitoring metric is a stream of data that is captured in an instance. Metrics can be monitored, graphed and can be used as the basis for triggering alerts."
    },
    "description": "A monitoring metric is a stream of data that is captured in an instance. Metrics can be monitored, graphed and can be used as the basis for triggering alerts."
  },
  "InstanceTypes": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instance_types/ABC1759798911DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "local_disks": null,
          "cpu_count": null,
          "local_disk_size": null,
          "description": "description_340489949",
          "actions": [

          ],
          "memory": null,
          "cpu_architecture": null,
          "resource_uid": "RESOURCE_3837053856",
          "name": "NAME_1375931074",
          "cpu_speed": null
        },
        "filters": {
          "cpu_architecture": {
            "partial_match": true,
            "description": "The CPU architecture of the Instance Type to filter on."
          },
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Instance Type to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Instance Type to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The Instance Type description to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instance_types(.:format)? {:action=>\"index\", :controller=>\"instance_types\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists instance types."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instance_types/ABC1759798911DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "local_disks": null,
          "cpu_count": null,
          "local_disk_size": null,
          "description": "description_340489949",
          "actions": [

          ],
          "memory": null,
          "cpu_architecture": null,
          "resource_uid": "RESOURCE_3837053856",
          "name": "NAME_1375931074",
          "cpu_speed": null
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instance_types/:id(.:format)? {:action=>\"show\", :controller=>\"instance_types\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single Instance type."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "local_disks": "",
        "cpu_count": "",
        "local_disk_size": "",
        "description": "",
        "actions": "",
        "memory": "",
        "cpu_architecture": "",
        "resource_uid": "",
        "name": "",
        "cpu_speed": ""
      },
      "content_types": [
        "application/vnd.rightscale.instance_type"
      ],
      "links": {
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "An InstanceType represents a basic hardware configuration for an Instance.\n\nCombining all possible configurations of hardware into a smaller, well-known set of options makes instances easier to manage, and allows better allocation efficiency into physical hosts."
    },
    "description": null
  },
  "IdentityProviders": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "filters": {
          "name": {
            "column": "friendly_name",
            "partial_match": true,
            "description": "The name of the identity provider to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/identity_providers(.:format)?       {:action=>\"index\", :controller=>\"identity_providers\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Lists the identity providers associated with this enterprise account."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/identity_providers/:id(.:format)?   {:action=>\"show\", :controller=>\"identity_providers\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Show the specified identity provider, if associated with this enterprise account."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "discovery_hint": "",
        "actions": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.identity_provider"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "An Identity Provider represents a SAML identity provider (IdP) that is linked to your RightScale Enterprise account,\n  and is trusted by the RightScale dashboard to authenticate your enterprise's end users.\n  To register an Identity Provider, contact your account manager.\n\nOnce your provider is registered with RightScale and associated with your enterprise account,\n  you can use the provisioning API to query the IdentityProviders resource and discover your provider's API href.\n  You can use the href to create new users via provisioning API who are pre-linked to your SAML identity provider and\n  can perform single sign-on immediately, without accepting an invitation or choosing a password."
    },
    "description": "An Identity Provider represents a SAML identity provider (IdP) that is linked to your RightScale Enterprise account,\nand is trusted by the RightScale dashboard to authenticate your enterprise's end users.\nTo register an Identity Provider, contact your account manager."
  },
  "Deployments": {
    "methods": {
      "servers": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Lists the servers belonging to this deployment. This call is equivalent to servers#index call, where the servers returned will\nautomatically be filtered by this deployment. See servers#index for details on other options and parameters."
      },
      "lock": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/deployments/:id/lock(.:format)?     {:action=>\"lock\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Locks a given deployment. Idempotent.\nLocking prevents servers from being deleted or moved from the deployment.\nOther actions such as adding servers or renaming the deployment are still allowed."
      },
      "update": {
        "parameters": {
          "deployment[server_tag_scope]": {
            "class": "String",
            "description": "The routing scope for tags for servers in the deployment.",
            "valid_values": [
              "deployment",
              "account"
            ],
            "non_blank": false
          },
          "deployment[description]": {
            "class": "String",
            "description": "The updated description for the deployment.",
            "non_blank": false
          },
          "deployment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "deployment[name]": {
            "class": "String",
            "description": "The updated name for the deployment.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/deployments/:id(.:format)?          {:action=>\"update\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a given deployment."
      },
      "create": {
        "parameters": {
          "deployment[server_tag_scope]": {
            "class": "String",
            "description": "The routing scope for tags for servers in the deployment.",
            "valid_values": [
              "deployment",
              "account"
            ],
            "non_blank": false
          },
          "deployment[description]": {
            "class": "String",
            "description": "The description of the deployment to be created.",
            "non_blank": false
          },
          "deployment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "deployment[name]": {
            "class": "String",
            "description": "The name of the deployment to be created.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/deployments(.:format)?              {:action=>\"create\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new deployment with the given parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"inputs","href":"/api/deployments/2/inputs"},
            {"rel":"self","href":"/api/deployments/2"},
            {"rel":"servers","href":"/api/deployments/2/servers"},
            {"rel":"server_arrays","href":"/api/deployments/2/server_arrays"},
            {"rel":"alerts","href":"/api/deployments/2/alerts"}
          ],
          "description": null,
          "actions": [
            {
              "rel": "clone"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "server_tag_scope": "deployment",
          "name": "TEST_NICKNAME-1804571637",
          "locked": false
        },
        "filters": {
          "server_tag_scope": {
            "partial_match": true,
            "description": "The routing scope for tags for servers in the deployment."
          },
          "name": {
            "column": "nickname",
            "partial_match": true,
            "description": "The name of the deployment to filter on."
          },
          "description": {
            "partial_match": true,
            "description": "The deployment description field to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/deployments(.:format)?              {:action=>\"index\", :controller=>\"deployments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists deployments of the account.\n\nUsing the available filters, one can select or group which deployments to retrieve.\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      },
      "unlock": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/deployments/:id/unlock(.:format)?   {:action=>\"unlock\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Unlocks a given deployment. Idempotent."
      },
      "clone": {
        "parameters": {
          "deployment[server_tag_scope]": {
            "class": "String",
            "description": "The routing scope for tags for servers in the cloned deployment.",
            "valid_values": [
              "deployment",
              "account"
            ],
            "non_blank": false
          },
          "deployment[description]": {
            "class": "String",
            "description": "The description for the cloned deployment.",
            "non_blank": false
          },
          "deployment": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "deployment[name]": {
            "class": "String",
            "description": "The name for the cloned deployment.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/deployments/:id/clone(.:format)?    {:action=>\"clone\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Clones a given deployment."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/deployments/:id(.:format)?          {:action=>\"destroy\", :controller=>\"deployments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given deployment."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "inputs",
              "inputs_2_0"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"inputs","href":"/api/deployments/2/inputs"},
            {"rel":"self","href":"/api/deployments/2"},
            {"rel":"servers","href":"/api/deployments/2/servers"},
            {"rel":"server_arrays","href":"/api/deployments/2/server_arrays"},
            {"rel":"alerts","href":"/api/deployments/2/alerts"}
          ],
          "description": null,
          "actions": [
            {
              "rel": "clone"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "server_tag_scope": "deployment",
          "name": "TEST_NICKNAME-1804571637",
          "locked": false
        },
        "status_code": "200 OK",
        "route": "GET    /api/deployments/:id(.:format)?          {:action=>\"show\", :controller=>\"deployments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the attributes of a given deployment.\n\nThe 'inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "inputs": "",
        "actions": "",
        "server_tag_scope": "",
        "name": "",
        "locked": ""
      },
      "content_types": [
        "application/vnd.rightscale.deployment"
      ],
      "links": {
        "servers": "Associated servers",
        "inputs": "List of configuration inputs",
        "server_arrays": "Associated server arrays",
        "lock_user": "Href of the user who has locked this deployment",
        "alerts": "Associated alerts",
        "self": "Href of itself"
      },
      "description": "Deployments represent logical groupings of related assets such as servers, server arrays, default configuration settings...etc."
    },
    "description": "Deployments represent logical groupings of related assets such as servers, server arrays, default configuration settings...etc."
  },
  "Datacenters": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/datacenters/ABC3135902123DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "actions": [

          ],
          "resource_uid": "RESOURCE_1137032857",
          "name": "NAME_577453731"
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Datacenter / Zone to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "Name of the Datacenter / Zone to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/datacenters(.:format)? {:action=>\"index\", :controller=>\"datacenters\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all Datacenters for a particular cloud."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/datacenters/ABC3135902123DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": null,
          "actions": [

          ],
          "resource_uid": "RESOURCE_1137032857",
          "name": "NAME_577453731"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/datacenters/:id(.:format)? {:action=>\"show\", :controller=>\"datacenters\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single Datacenter."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "resource_uid": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.datacenter"
      ],
      "links": {
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "Datacenters represent isolated facilities within a cloud. The level and type of isolation is cloud dependent. \n While Datacenters in large public clouds might correspond to different physical buildings, with different power, \n internet links...etc., Datacenters within the context of a private cloud might simply correspond to having different network providers.\n\nSpreading servers across distinct Datacenters helps minimize outages."
    },
    "description": "Datacenters represent isolated facilities within a cloud. The level and type of isolation is cloud dependent. \nWhile Datacenters in large public clouds might correspond to different physical buildings, with different power, \ninternet links...etc., Datacenters within the context of a private cloud might simply correspond to having different network providers.\n\nSpreading servers across distinct Datacenters helps minimize outages."
  },
  "CloudAccounts": {
    "methods": {
      "create": {
        "parameters": {
          "cloud_account[creds][*]": {
            "class": "String",
            "description": "The * denotes that the key could be anything,\n         limited to the required parameters for the respective cloud. See the description above.",
            "non_blank": true
          },
          "cloud_account[token]": {
            "class": "String",
            "description": "The cloud token to identify a private cloud",
            "non_blank": true
          },
          "cloud_account": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "cloud_account[creds]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "cloud_account[cloud_href]": {
            "class": "String",
            "description": "The href of the cloud if it is known. For valid values see support portal link above.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/cloud_accounts(.:format)?           {:action=>\"create\", :controller=>\"cloud_accounts\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Create a CloudAccount by passing in the respective credentials for each cloud.\n\nFor more information on the specific parameters for each cloud, refer to the following:\n\n\nhttp://support.rightscale.com/12-Guides/RightScale_API_1.5/Examples/Cloud_Accounts/Create_Cloud_Accounts\n\n"
      },
      "index": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cloud_accounts/7773"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"account","href":"/api/accounts/331800546"}
          ],
          "created_at": "2015/04/08 22:32:12 +0000",
          "updated_at": "2015/04/08 22:32:12 +0000"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/cloud_accounts(.:format)?           {:action=>\"index\", :controller=>\"cloud_accounts\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the CloudAccounts (non-aws) available to this Account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/cloud_accounts/:id(.:format)?       {:action=>\"destroy\", :controller=>\"cloud_accounts\"}",
        "access_rules": [
          "admin"
        ],
        "description": "Delete a CloudAccount."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cloud_accounts/7773"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"account","href":"/api/accounts/331800546"}
          ],
          "created_at": "2015/04/08 22:32:12 +0000",
          "updated_at": "2015/04/08 22:32:12 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/cloud_accounts/:id(.:format)?       {:action=>\"show\", :controller=>\"cloud_accounts\"}",
        "access_rules": [
          "observer"
        ],
        "description": ""
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "created_at": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.cloud_account"
      ],
      "links": {
        "account": "Associated account",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "Represents a Cloud Account (An association between the account and a cloud)."
    },
    "description": "Represents a Cloud Account (An association between the account and a cloud)."
  },
  "VolumeTypes": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_types/RESOURCE_3258943787;662668434"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "Small Disk, 5 GB",
          "actions": [

          ],
          "size": "5",
          "resource_uid": "RESOURCE_3258943787",
          "created_at": "2015/04/08 22:32:14 +0000",
          "name": "small",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Volume Type to filter on."
          },
          "name": {
            "partial_match": true,
            "description": "The name of the Volume Type to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volume_types(.:format)? {:action=>\"index\", :controller=>\"volume_types\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists Volume Types."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/volume_types/RESOURCE_3258943787;662668434"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "description": "Small Disk, 5 GB",
          "actions": [

          ],
          "size": "5",
          "resource_uid": "RESOURCE_3258943787",
          "created_at": "2015/04/08 22:32:14 +0000",
          "name": "small",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/volume_types/:id(.:format)? {:action=>\"show\", :controller=>\"volume_types\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Displays information about a single Volume Type."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "size": "",
        "resource_uid": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.volume_type"
      ],
      "links": {
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A VolumeType describes the type of volume, particularly the size."
    },
    "description": "A VolumeType describes the type of volume, particularly the size."
  },
  "Tasks": {
    "methods": {
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/live/tasks/ae-3"}
          ],
          "summary": "test summary",
          "actions": [

          ]
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/live/tasks/:id(.:format)? {:action=>\"show\", :controller=>\"tasks\"}GET    /api/server_arrays/:server_array_id/live/tasks/:id(.:format)? {:action=>\"show\", :controller=>\"tasks\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Displays information of a given task within the context of an instance."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "detail": "",
        "summary": "",
        "actions": ""
      },
      "content_types": [
        "application/vnd.rightscale.task"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "Tasks represent processes that happen (or have happened) asynchronously within the context of an Instance.\n\nAn example of a type of task is an operational script that runs in an instance.\n\nTask resources can be returned by certain API calls, such as Instances.run_executable, Backups.restore, and others."
    },
    "description": "Tasks represent processes that happen (or have happened) asynchronously within the context of an Instance.\n\nAn example of a type of task is an operational script that runs in an instance.\n\nTask resources can be returned by certain API calls, such as Instances.run_executable, Backups.restore, and others."
  },
  "Subnets": {
    "methods": {
      "update": {
        "parameters": {
          "subnet[description]": {
            "class": "String",
            "description": "The updated description for the Subnet.",
            "non_blank": false
          },
          "subnet": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "subnet[name]": {
            "class": "String",
            "description": "The updated name for the Subnet.",
            "non_blank": false
          },
          "subnet[route_table_href]": {
            "class": "String",
            "description": "The RouteTable to associate/dissociate with this Subnet. Pass this parameter with an empty string to reset this Subnet to use the default RouteTable.",
            "non_blank": false
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"update\", :controller=>\"subnets\"}PUT    /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"update\", :controller=>\"subnets\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Updates name and description for the current subnet."
      },
      "create": {
        "parameters": {
          "subnet[description]": {
            "class": "String",
            "description": "The description for the Subnet.",
            "non_blank": true
          },
          "subnet[network_href]": {
            "class": "String",
            "description": "The associated Network.",
            "mandatory": true,
            "non_blank": true
          },
          "subnet": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "subnet[datacenter_href]": {
            "class": "String",
            "description": "The associated Datacenter.",
            "non_blank": true
          },
          "subnet[cidr_block]": {
            "class": "String",
            "description": "The range of IP addresses for the Subnet.",
            "mandatory": true,
            "non_blank": true
          },
          "subnet[name]": {
            "class": "String",
            "description": "The name for the Subnet.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/subnets(.:format)? {:action=>\"create\", :controller=>\"subnets\"}POST   /api/clouds/:cloud_id/subnets(.:format)? {:action=>\"create\", :controller=>\"subnets\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Creates a new subnet."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/subnets/RESOURCE_46038226;1628498527"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_2828990771;RAND"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_52294064;2291428203"},
            {"rel":"effective_route_table","href":"/api/route_tables/RESOURCE_52294064;2291428203"}
          ],
          "cidr_block": null,
          "description": "subnet3735356989",
          "visibility": "public",
          "state": "pending",
          "resource_uid": "RESOURCE_46038226",
          "name": "NAME_2863904434",
          "is_default": false
        },
        "filters": {
          "datacenter_href": {
            "column": "subnets.datacenter_rsid",
            "description": "The href of the datacenter to filter on."
          },
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Subnet to filter on."
          },
          "instance_href": {
            "column": "network_interface_attachments.instance_rsid",
            "include": {
              "network_interfaces": "network_interface_attachments"
            },
            "description": "Returns Subnets that are associated with the specified Instance."
          },
          "visibility": {
            "description": "Visibility of the subnet to filter by (private, shared, etc)."
          },
          "name": {
            "column": "subnets.name",
            "partial_match": true,
            "description": "Name of the Subnet to filter on."
          },
          "network_href": {
            "column": "subnets.network_rsid",
            "description": "The href of the network to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/subnets(.:format)? {:action=>\"index\", :controller=>\"subnets\"}GET    /api/clouds/:cloud_id/subnets(.:format)? {:action=>\"index\", :controller=>\"subnets\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists subnets of a given cloud."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"destroy\", :controller=>\"subnets\"}DELETE /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"destroy\", :controller=>\"subnets\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Deletes the given subnet(s)."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/subnets/RESOURCE_46038226;1628498527"},
            {"rel":"datacenter","href":"/api/clouds/888/datacenters/RESOURCE_2828990771;RAND"},
            {"rel":"route_table","href":"/api/route_tables/RESOURCE_52294064;2291428203"},
            {"rel":"effective_route_table","href":"/api/route_tables/RESOURCE_52294064;2291428203"}
          ],
          "cidr_block": null,
          "description": "subnet3735356989",
          "visibility": "public",
          "state": "pending",
          "resource_uid": "RESOURCE_46038226",
          "name": "NAME_2863904434",
          "is_default": false
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/subnets/:id(.:format)? {:action=>\"show\", :controller=>\"subnets\"}GET    /api/clouds/:cloud_id/subnets/:id(.:format)? {:action=>\"show\", :controller=>\"subnets\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows attributes of a single subnet."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "cidr_block": "",
        "visibility": "",
        "state": "",
        "resource_uid": "",
        "name": "",
        "is_default": ""
      },
      "content_types": [
        "application/vnd.rightscale.subnet"
      ],
      "links": {
        "route_table": "Href of the RouteTable explicitly associated with the Subnet, if any.",
        "effective_route_table": "Href of the RouteTable associated with the Subnet (may be inherited).",
        "network": "Href of the Network the Subnet is in",
        "datacenter": "Href of the Datacenter the Subnet is in",
        "self": "Href of itself"
      },
      "description": "A Subnet is a logical grouping of network devices. An Instance can have many\n  Subnets."
    },
    "description": "A Subnet is a logical grouping of network devices. An Instance can have many\nSubnets."
  },
  "ServerTemplateMultiCloudImages": {
    "methods": {
      "make_default": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/server_template_multi_cloud_images/:id/make_default(.:format)? {:action=>\"make_default\", :controller=>\"server_template_multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Makes a given ServerTemplateMultiCloudImage the default for the ServerTemplate."
      },
      "create": {
        "parameters": {
          "server_template_multi_cloud_image": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server_template_multi_cloud_image[multi_cloud_image_href]": {
            "class": "String",
            "description": "The href of the MultiCloud Image to be used.",
            "mandatory": true,
            "non_blank": true
          },
          "server_template_multi_cloud_image[server_template_href]": {
            "class": "String",
            "description": "The href of the ServerTemplate to be used.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/server_template_multi_cloud_images(.:format)? {:action=>\"create\", :controller=>\"server_template_multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Creates a new ServerTemplateMultiCloudImage with the given parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_template_multi_cloud_images/1"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1"}
          ],
          "actions": [

          ],
          "created_at": "2015/04/08 22:32:13 +0000",
          "is_default": true,
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "filters": {
          "multi_cloud_image_href": {
            "description": "The href of the MultiCloud Image to filter on."
          },
          "server_template_href": {
            "description": "The href of the ServerTemplate to filter on."
          },
          "is_default": {
            "description": "The is_default attribute of the ServerTemplateMultiCloudImage to filter on. The value passed must be either 1 (true) or 0 (false)."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_template_multi_cloud_images(.:format)? {:action=>\"index\", :controller=>\"server_template_multi_cloud_images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the ServerTemplateMultiCloudImages available to this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/server_template_multi_cloud_images/:id(.:format)? {:action=>\"destroy\", :controller=>\"server_template_multi_cloud_images\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Deletes a given ServerTemplateMultiCloudImage."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/server_template_multi_cloud_images/1"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1"}
          ],
          "actions": [

          ],
          "created_at": "2015/04/08 22:32:13 +0000",
          "is_default": true,
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/server_template_multi_cloud_images/:id(.:format)? {:action=>\"show\", :controller=>\"server_template_multi_cloud_images\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single ServerTemplateMultiCloudImage which represents an association between a ServerTemplate and a MultiCloudImage."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "actions": "",
        "created_at": "",
        "is_default": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.server_template_multi_cloud_image"
      ],
      "links": {
        "multi_cloud_image": "Associated MultiCloud Image",
        "server_template": "Associated ServerTemplate",
        "self": "Href of itself"
      },
      "description": "This resource represents links between ServerTemplates and MultiCloud Images, it enables you to effectively\n add MultiCloud Images to ServerTemplates and make them the default one."
    },
    "description": "This resource represents links between ServerTemplates and MultiCloud Images and enables you to effectively\nadd/delete MultiCloudImages to ServerTemplates and make them the default one."
  },
  "NetworkGateways": {
    "methods": {
      "update": {
        "parameters": {
          "network_gateway": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network_gateway[description]": {
            "class": "String",
            "description": "The description to be set on the NetworkGateway.",
            "mandatory": false,
            "non_blank": false
          },
          "network_gateway[network_href]": {
            "class": "String",
            "description": "Pass a blank string to detach from the specified Network, or pass a valid Network href to attach to the specified network.",
            "mandatory": false,
            "non_blank": false
          },
          "network_gateway[name]": {
            "class": "String",
            "description": "The name to be set on the NetworkGateway.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/network_gateways/:id(.:format)?     {:action=>\"update\", :controller=>\"network_gateways\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Update an existing NetworkGateway."
      },
      "create": {
        "parameters": {
          "network_gateway": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "network_gateway[type]": {
            "class": "String",
            "description": "The type of the NetworkGateway.",
            "mandatory": true,
            "valid_values": [
              "vpn",
              "internet"
            ],
            "non_blank": true
          },
          "network_gateway[description]": {
            "class": "String",
            "description": "The description to be set on the NetworkGateway.",
            "non_blank": false
          },
          "network_gateway[name]": {
            "class": "String",
            "description": "The name to be set on the NetworkGateway.",
            "mandatory": true,
            "non_blank": true
          },
          "network_gateway[cloud_href]": {
            "class": "String",
            "description": "The cloud to create the NetworkGateway in.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/network_gateways(.:format)?         {:action=>\"create\", :controller=>\"network_gateways\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a new NetworkGateway."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "type": "internet",
          "links": [
            {"rel":"self","href":"/api/network_gateways/RESOURCE_4032447035;2964428936"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_4036382498;3851402991"}
          ],
          "description": null,
          "actions": [

          ],
          "state": "available",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_4032447035",
          "name": "NAME_387154418",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "cloud_href": {
            "description": "Returns NetworkGateways in the specified cloud"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the NetworkGateway to filter on."
          },
          "network_href": {
            "column": "network_rsid",
            "description": "Returns NetworkGateways attached to the specified network"
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_gateways(.:format)?         {:action=>\"index\", :controller=>\"network_gateways\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the NetworkGateways available to this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/network_gateways/:id(.:format)?     {:action=>\"destroy\", :controller=>\"network_gateways\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete an existing NetworkGateway."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "type": "internet",
          "links": [
            {"rel":"self","href":"/api/network_gateways/RESOURCE_4032447035;2964428936"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_4036382498;3851402991"}
          ],
          "description": null,
          "actions": [

          ],
          "state": "available",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_4032447035",
          "name": "NAME_387154418",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/network_gateways/:id(.:format)?     {:action=>\"show\", :controller=>\"network_gateways\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single NetworkGateway."
      }
    },
    "media_type": {
      "attributes": {
        "type": "",
        "links": "",
        "description": "",
        "state": "",
        "actions": "",
        "created_at": "",
        "resource_uid": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.network_gateway"
      ],
      "links": {
        "network": "The href of the Network this NetworkGateway is attached to, if any",
        "cloud": "The cloud the NetworkGateway is in",
        "self": "Href of itself"
      },
      "description": "A NetworkGateway is an interface that allows traffic to be routed between networks."
    },
    "description": "A NetworkGateway is an interface that allows traffic to be routed between networks."
  },
  "MultiCloudImageSettings": {
    "methods": {
      "update": {
        "parameters": {
          "multi_cloud_image_setting[instance_type_href]": {
            "class": "String",
            "description": "The href of the instance type.",
            "non_blank": true
          },
          "multi_cloud_image_setting[kernel_image_href]": {
            "class": "String",
            "description": "The href of the kernel image.",
            "non_blank": true
          },
          "multi_cloud_image_setting[cloud_href]": {
            "class": "String",
            "description": "The href of the Cloud to use.",
            "non_blank": true
          },
          "multi_cloud_image_setting[ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the ramdisk image.",
            "non_blank": true
          },
          "multi_cloud_image_setting": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image_setting[user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "multi_cloud_image_setting[image_href]": {
            "class": "String",
            "description": "The href of the Image to use.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"update\", :controller=>\"multi_cloud_image_settings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates a settings for a MultiCLoudImage."
      },
      "create": {
        "parameters": {
          "multi_cloud_image_setting[instance_type_href]": {
            "class": "String",
            "description": "The href of the instance type. Mandatory if specifying cloud_href.",
            "non_blank": true
          },
          "multi_cloud_image_setting[kernel_image_href]": {
            "class": "String",
            "description": "The href of the kernel image. Optional if specifying cloud_href.",
            "non_blank": true
          },
          "multi_cloud_image_setting[cloud_href]": {
            "class": "String",
            "description": "The href of the Cloud to use.",
            "non_blank": true
          },
          "multi_cloud_image_setting[ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the ramdisk image. Optional if specifying cloud_href.",
            "non_blank": true
          },
          "multi_cloud_image_setting": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "multi_cloud_image_setting[user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "multi_cloud_image_setting[image_href]": {
            "class": "String",
            "description": "The href of the Image to use. Mandatory if specifying cloud_href.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/multi_cloud_images/:multi_cloud_image_id/settings(.:format)? {:action=>\"create\", :controller=>\"multi_cloud_image_settings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Creates a new setting for an existing MultiCloudImage."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/1/settings/1"},
            {"rel":"image","href":"/api/clouds/888/images/RS_ID_16120294"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"instance_type","href":"/api/clouds/888/instance_types/RESOURCE_3964569546;RAND"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1"}
          ],
          "actions": [

          ]
        },
        "filters": {
          "multi_cloud_image_href": {
            "column": "multi_cloud_image_id",
            "description": "The MultiCloudImage href to filter on."
          },
          "cloud_href": {
            "column": "cloud_id",
            "description": "The Cloud href to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/multi_cloud_images/:multi_cloud_image_id/settings(.:format)? {:action=>\"index\", :controller=>\"multi_cloud_image_settings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the MultiCloudImage settings."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"destroy\", :controller=>\"multi_cloud_image_settings\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Deletes a MultiCloudImage setting."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/multi_cloud_images/1/settings/1"},
            {"rel":"image","href":"/api/clouds/888/images/RS_ID_16120294"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"instance_type","href":"/api/clouds/888/instance_types/RESOURCE_3964569546;RAND"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1"}
          ],
          "actions": [

          ]
        },
        "status_code": "200 OK",
        "route": "GET    /api/multi_cloud_images/:multi_cloud_image_id/settings/:id(.:format)? {:action=>\"show\", :controller=>\"multi_cloud_image_settings\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single MultiCloudImage setting."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "actions": ""
      },
      "content_types": [
        "application/vnd.rightscale.multi_cloud_image_setting"
      ],
      "links": {
        "multi_cloud_image": "Associated multi cloud image",
        "instance_type": "Associated instance type",
        "image": "Associated image",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A MultiCloudImageSetting defines which\n settings should be used when a server is launched in a cloud."
    },
    "description": "A MultiCloudImageSetting defines which\nsettings should be used when a server is launched in a cloud."
  },
  "IpAddresses": {
    "methods": {
      "update": {
        "parameters": {
          "ip_address[deployment_href]": {
            "class": "String",
            "description": "The href of the Deployment that owns this IpAddress.",
            "non_blank": true
          },
          "ip_address": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "ip_address[name]": {
            "class": "String",
            "description": "The updated name of the IpAddress.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"update\", :controller=>\"ip_addresses\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a given IpAddress."
      },
      "create": {
        "parameters": {
          "ip_address[deployment_href]": {
            "class": "String",
            "description": "The href of the Deployment that owns this IpAddress.",
            "non_blank": true
          },
          "ip_address": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "ip_address[network_href]": {
            "class": "String",
            "description": "(OpenStack Only) The href of the Network that the IpAddress will be associated to. This parameter is required for OpenStack with Neutron clouds.",
            "non_blank": true
          },
          "ip_address[domain]": {
            "class": "String",
            "description": "(Amazon Only) Pass vpc to create this IP for EC2-VPC only environments. Pass ec2_classic to create this IP for EC2-Classic environments. Defaults to ec2_classic.",
            "valid_values": [
              "ec2_classic",
              "vpc"
            ],
            "non_blank": true
          },
          "ip_address[name]": {
            "class": "String",
            "description": "The name of the IpAddress to be created.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/ip_addresses(.:format)? {:action=>\"create\", :controller=>\"ip_addresses\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new IpAddress with the given parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND/ip_address_bindings"}
          ],
          "address": "127.0.0.1",
          "created_at": "2015/04/08 22:32:15 +0000",
          "name": "NAME_2174666004",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "filters": {
          "deployment_href": {
            "description": "Deployment href to filter on."
          },
          "name": {
            "column": "name",
            "partial_match": true,
            "description": "Name of the IpAddress to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ip_addresses(.:format)? {:action=>\"index\", :controller=>\"ip_addresses\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the IpAddresses available to this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"destroy\", :controller=>\"ip_addresses\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given IpAddress."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND"},
            {"rel":"ip_address_bindings","href":"/api/clouds/888/ip_addresses/RESOURCE_3723461495;RAND/ip_address_bindings"}
          ],
          "address": "127.0.0.1",
          "created_at": "2015/04/08 22:32:15 +0000",
          "name": "NAME_2174666004",
          "updated_at": "2015/04/08 22:32:15 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ip_addresses/:id(.:format)? {:action=>\"show\", :controller=>\"ip_addresses\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single IpAddress."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "domain": "",
        "address": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.ip_address"
      ],
      "links": {
        "deployment": "Containing Deployment",
        "network": "Associated network",
        "ip_address_bindings": "Associated ip address bindings",
        "self": "Href of itself"
      },
      "description": "An IpAddress provides an abstraction for IPv4 addresses bindable to Instance resources running in a Cloud."
    },
    "description": "An IpAddress provides an abstraction for IPv4 addresses bindable to Instance resources running in a Cloud."
  },
  "AuditEntries": {
    "methods": {
      "detail": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/audit_entries/:id/detail(.:format)? {:action=>\"detail\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "shows the details of a given AuditEntry.\nNote that the media type of the response is simply text.",
        "content_type": "application/vnd.rightscale.text"
      },
      "update": {
        "parameters": {
          "audit_entry[offset]": {
            "class": "Integer",
            "description": "The offset where the next details will be appended. Used in ordering of summary updates.",
            "mandatory": false,
            "non_blank": true
          },
          "audit_entry[summary]": {
            "class": "String",
            "description": "The updated summary for the audit entry, maximum length is 255 characters.",
            "regex": "/^(.{1,255})$/",
            "mandatory": true,
            "non_blank": true
          },
          "notify": {
            "class": "String",
            "description": "The event notification category. Defaults to 'None'.",
            "regex": "/^(None|Notification|Security|Error)$/",
            "mandatory": false,
            "non_blank": true
          },
          "audit_entry": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/audit_entries/:id(.:format)?        {:action=>\"update\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Updates the summary of a given AuditEntry."
      },
      "create": {
        "parameters": {
          "user_email": {
            "class": "String",
            "description": "The email of the user (who created/triggered the audit entry). Only usable with instance role.",
            "mandatory": false,
            "non_blank": true
          },
          "audit_entry[auditee_href]": {
            "class": "String",
            "description": "The href of the resource that this audit entry should be associated with (e.g. an instance's href).",
            "mandatory": true,
            "non_blank": true
          },
          "audit_entry[summary]": {
            "class": "String",
            "description": "The summary of the audit entry to be created, maximum length is 255 characters.",
            "regex": "/^(.{1,255})$/",
            "mandatory": true,
            "non_blank": true
          },
          "audit_entry[detail]": {
            "class": "String",
            "description": "The initial details of the audit entry to be created.",
            "mandatory": false,
            "non_blank": false
          },
          "notify": {
            "class": "String",
            "description": "The event notification category. Defaults to 'None'.",
            "regex": "/^(None|Notification|Security|Error)$/",
            "mandatory": false,
            "non_blank": true
          },
          "audit_entry": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/audit_entries(.:format)?            {:action=>\"create\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Creates a new AuditEntry with the given parameters."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "mandatory": false,
            "non_blank": true
          },
          "start_date": {
            "class": "String",
            "description": "The start date for retrieving audit entries, the format must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g., 2011/06/25 00:00:00 +0000",
            "regex": "/^(\\d{4})\\/(\\d{2})\\/(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2}) ([+-]\\d{4})$/",
            "mandatory": true,
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          },
          "limit": {
            "description": "Limit the audit entries to this number. The limit should >= 1 and <= 1000",
            "regex": "/\\d+/",
            "mandatory": true
          },
          "end_date": {
            "class": "String",
            "description": "The end date for retrieving audit entries (the format must be the same as start date). The time period between start and end date must be less than 3 months (93 days).",
            "regex": "/^(\\d{4})\\/(\\d{2})\\/(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2}) ([+-]\\d{4})$/",
            "mandatory": true,
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/audit_entries/1"},
            {"rel":"auditee","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"detail","href":"/api/audit_entries/1/detail"}
          ],
          "user_email": "owner_user@rightscale.com",
          "summary": "test summary",
          "actions": [
            {
              "rel": "append"
            }
          ],
          "detail_size": 17,
          "updated_at": "2015/04/08 22:32:21 +0000"
        },
        "filters": {
          "user_email": {
            "description": "The email of the user (who created/triggered the audit entry) to filter on."
          },
          "auditee_href": {
            "description": "The href of the auditee resource to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/audit_entries(.:format)?            {:action=>\"index\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists AuditEntries of the account. Due to the potentially large number of audit entries, a start and end date must\nbe provided during an index call to limit the search. The format of the dates must be YYYY/MM/DD HH:MM:SS [+/-]ZZZZ e.g.\n2011/07/11 00:00:00 +0000.\nA maximum of 1000 records will be returned by each index call.\n\nUsing the available filters, one can select or group which audit entries to retrieve."
      },
      "append": {
        "parameters": {
          "summary": {
            "class": "String",
            "description": "The updated summary for the audit entry, maximum length is 255 characters.",
            "regex": "/^(.{1,255})$/",
            "mandatory": false,
            "non_blank": true
          },
          "detail": {
            "class": "String",
            "description": "The details to be appended to the audit entry record.",
            "mandatory": false,
            "non_blank": false
          },
          "offset": {
            "class": "Integer",
            "description": "The offset where the new details should be appended to in the audit entry's existing details section. Also used in ordering of summary updates. Defaults to end.",
            "mandatory": false,
            "non_blank": true
          },
          "notify": {
            "class": "String",
            "description": "The event notification category. Defaults to 'None'.",
            "regex": "/^(None|Notification|Security|Error)$/",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/audit_entries/:id/append(.:format)? {:action=>\"append\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Updates the summary and appends more details to a given AuditEntry. Each audit entry detail is stored\nas one chunk, the offset determines the location of that chunk within the overall audit entry details section.\nFor example, if you create an AuditEntry and append \"DEF\" at offset 10, and later append\n\"ABC\" at offset 9, the overall audit entry details will be \"ABCDEF\". Use the \\n character to\nseparate details by new lines."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/audit_entries/1"},
            {"rel":"auditee","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"detail","href":"/api/audit_entries/1/detail"}
          ],
          "user_email": "owner_user@rightscale.com",
          "summary": "test summary",
          "actions": [
            {
              "rel": "append"
            }
          ],
          "detail_size": 17,
          "updated_at": "2015/04/08 22:32:21 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/audit_entries/:id(.:format)?        {:action=>\"show\", :controller=>\"audit_entries\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists the attributes of a given audit entry."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "user_email": "",
        "summary": "",
        "actions": "",
        "detail_size": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.audit_entry"
      ],
      "links": {
        "auditee": "Href of the resource that this Audit Entry relates to.",
        "detail": "Href where the Audit Entry detail is available from.",
        "self": "Href of itself"
      },
      "description": "An Audit Entry can be used to track various activities of a resource."
    },
    "description": "An Audit Entry can be used to track various activities of a resource."
  },
  "SshKeys": {
    "methods": {
      "create": {
        "parameters": {
          "ssh_key": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "ssh_key[name]": {
            "class": "String",
            "description": "The name for the SSH key to be created.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/ssh_keys(.:format)? {:action=>\"create\", :controller=>\"ssh_keys\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new ssh key."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/ssh_keys/ABC2937723091DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "actions": [

          ],
          "resource_uid": "RESOURCE_1337742961"
        },
        "filters": {
          "resource_uid": {
            "description": "Resource Unique IDentifier for the SSH key to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ssh_keys(.:format)? {:action=>\"index\", :controller=>\"ssh_keys\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists ssh keys."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/ssh_keys/:id(.:format)? {:action=>\"destroy\", :controller=>\"ssh_keys\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given ssh key."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/ssh_keys/ABC2937723091DEF"},
            {"rel":"cloud","href":"/api/clouds/888"}
          ],
          "actions": [

          ],
          "resource_uid": "RESOURCE_1337742961"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/ssh_keys/:id(.:format)? {:action=>\"show\", :controller=>\"ssh_keys\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single ssh key."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "actions": "",
        "material": "",
        "resource_uid": ""
      },
      "content_types": [
        "application/vnd.rightscale.ssh_key"
      ],
      "links": {
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "Ssh Keys represent a created SSH Key that exists in the cloud.\n\nAn ssh key might also contain the private part of the key, and can be used to login to instances launched with it."
    },
    "description": "Ssh Keys represent a created SSH Key that exists in the cloud.\n\nAn ssh key might also contain the private part of the key, and can be used to login to instances launched with it."
  },
  "RouteTables": {
    "methods": {
      "update": {
        "parameters": {
          "route_table[name]": {
            "class": "String",
            "description": "The name to be set on the RouteTable.",
            "mandatory": false,
            "non_blank": false
          },
          "route_table": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "route_table[description]": {
            "class": "String",
            "description": "The description to be set on the RouteTable.",
            "mandatory": false,
            "non_blank": false
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/route_tables/:id(.:format)?         {:action=>\"update\", :controller=>\"route_tables\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Update an existing RouteTable."
      },
      "create": {
        "parameters": {
          "route_table[name]": {
            "class": "String",
            "description": "The name to be set on the RouteTable.",
            "mandatory": true,
            "non_blank": false
          },
          "route_table": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "route_table[cloud_href]": {
            "class": "String",
            "description": "The cloud to create the RouteTable in.",
            "mandatory": true,
            "non_blank": true
          },
          "route_table[description]": {
            "class": "String",
            "description": "The description to be set on the RouteTable.",
            "non_blank": false
          },
          "route_table[network_href]": {
            "class": "String",
            "description": "The Network to create the RouteTable in.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/route_tables(.:format)?             {:action=>\"create\", :controller=>\"route_tables\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Create a new RouteTable."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/route_tables/RESOURCE_476929356;1277906709"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_3932894095;1818962239"},
            {"rel":"routes","href":"/api/route_tables/RESOURCE_476929356;1277906709/routes"}
          ],
          "description": "DESCRIPTION_2208683741",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_476929356",
          "name": "NAME_3929743248",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "cloud_href": {
            "description": "Returns RouteTables in the specified cloud"
          },
          "name": {
            "partial_match": true,
            "description": "The name of the RouteTable to filter on."
          },
          "network_href": {
            "column": "network_rsid",
            "description": "Returns RouteTables attached to the specified network"
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/route_tables(.:format)?             {:action=>\"index\", :controller=>\"route_tables\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List RouteTables available in this account."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/route_tables/:id(.:format)?         {:action=>\"destroy\", :controller=>\"route_tables\"}",
        "access_rules": [
          "security_manager"
        ],
        "description": "Delete an existing RouteTable."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/route_tables/RESOURCE_476929356;1277906709"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"network","href":"/api/networks/RESOURCE_3932894095;1818962239"},
            {"rel":"routes","href":"/api/route_tables/RESOURCE_476929356;1277906709/routes"}
          ],
          "description": "DESCRIPTION_2208683741",
          "created_at": "2015/04/08 22:32:17 +0000",
          "resource_uid": "RESOURCE_476929356",
          "name": "NAME_3929743248",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/route_tables/:id(.:format)?         {:action=>\"show\", :controller=>\"route_tables\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single RouteTable."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "created_at": "",
        "resource_uid": "",
        "name": "",
        "routes": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.route_table"
      ],
      "links": {
        "network": "Associated Network",
        "routes": "Associated Routes",
        "cloud": "Associated Cloud",
        "self": "Href of itself"
      },
      "description": "Grouped listing of Routes"
    },
    "description": "Grouped listing of Routes"
  },
  "RepositoryAssets": {
    "methods": {
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/repositories/1/repository_assets/1"}
          ],
          "actions": [

          ],
          "name": "pending_cookbook_1243505346",
          "id": "1",
          "version": "1.2.3"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/repositories/:repository_id/repository_assets(.:format)? {:action=>\"index\", :controller=>\"repository_assets\"}",
        "access_rules": [
          "observer"
        ],
        "description": "List a repository's current assets.\n\nRepository assests are the cookbook details that were scraped from a\ngiven repository."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/repositories/1/repository_assets/1"}
          ],
          "actions": [

          ],
          "name": "pending_cookbook_1243505346",
          "id": "1",
          "version": "1.2.3"
        },
        "status_code": "200 OK",
        "route": "GET    /api/repositories/:repository_id/repository_assets/:id(.:format)? {:action=>\"show\", :controller=>\"repository_assets\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single asset.\n\nA repository assest are the cookbook details that were scraped from a\nrepository."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "name": "",
        "id": "",
        "version": ""
      },
      "content_types": [
        "application/vnd.rightscale.repository_asset"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "A RepositoryAsset represents an item discovered in a Repository. These assets represent only a view of the Repository\n  the last time it was scraped. In order to use these assets, you must import them into your account."
    },
    "description": "A RepositoryAsset represents an item discovered in a Repository. These assets represent only a view of the Repository\nthe last time it was scraped. In order to use these assets, you must import them into your account."
  },
  "InstanceCustomLodgements": {
    "methods": {
      "update": {
        "parameters": {
          "quantity": {
            "class": "Array",
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported.",
            "mandatory": true,
            "non_blank": true
          },
          "quantity[][name]": {
            "class": "String",
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\".",
            "non_blank": true
          },
          "quantity[][value]": {
            "class": "String",
            "description": "The value of the quantity. Should be a positive integer.",
            "regex": "/^-?\\d+$/",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"update\", :controller=>\"instance_custom_lodgements\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Update a lodgement with the quantity specified."
      },
      "create": {
        "parameters": {
          "quantity": {
            "class": "Array",
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported.",
            "mandatory": true,
            "non_blank": true
          },
          "quantity[][name]": {
            "class": "String",
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\".",
            "non_blank": true
          },
          "quantity[][value]": {
            "class": "String",
            "description": "The value of the quantity. Should be a positive integer.",
            "regex": "/^-?\\d+$/",
            "non_blank": true
          },
          "timeframe": {
            "class": "String",
            "description": "The time-frame (either a month \"YYYY_MM\" or a single day \"YYYY_MM_DD\") for which the quantity value is valid (currently for the PDT timezone only).",
            "regex": "/^\\d{4}_\\d{2}(_\\d{2})?$/",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements(.:format)? {:action=>\"create\", :controller=>\"instance_custom_lodgements\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Create a lodgement with the quantity and timeframe specified."
      },
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "filters": {
          "timeframe": {
            "description": "The timeframe (either a month \"YYYY_MM\" or a single day \"YYYY_MM_DD\") of the Lodgement to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements(.:format)? {:action=>\"index\", :controller=>\"instance_custom_lodgements\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "List InstanceCustomLodgements of a given cloud and instance."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"destroy\", :controller=>\"instance_custom_lodgements\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Destroy the specified lodgement."
      },
      "show": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/instance_custom_lodgements/:id(.:format)? {:action=>\"show\", :controller=>\"instance_custom_lodgements\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Show the specified lodgement."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "end_at": "",
        "account_owner": "",
        "resource_template_name": "",
        "resource_billing_start_at": "",
        "actions": "",
        "resource_template_library_href": "",
        "resource_billing_end_at": "",
        "resource_uid": "",
        "resource_template_published_by_account_id": "",
        "quantity": "",
        "resource_launched_by": "",
        "start_at": "",
        "resource_instance_type": ""
      },
      "content_types": [
        "application/vnd.rightscale.instance_custom_lodgement"
      ],
      "links": {
        "server_template": "Associated server template",
        "deployment": "Associated deployment",
        "instance": "Associated instance",
        "account": "Associated account",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "An InstanceCustomLodgement represents a way to create custom reports about a specific instance with a user defined quantity.  Replaces the legacy Instances#setcustomlodgement interface."
    },
    "description": "An InstanceCustomLodgement represents a way to create custom reports about a specific instance with a user defined quantity.  Replaces the legacy Instances#setcustomlodgement interface."
  },
  "Inputs": {
    "methods": {
      "multi_update": {
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "mandatory": true,
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "description": "The value to be updated with. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[][name]": {
            "class": "String",
            "description": "The name of the input to be updated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/instances/:instance_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}PUT    /api/deployments/:deployment_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}PUT    /api/server_templates/:server_template_id/inputs/multi_update(.:format)? {:action=>\"multi_update\", :controller=>\"inputs\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Performs a bulk update of inputs on the specified resource.\n\nIf an input exists with the same name, its value will be updated. If an input does not\nexist with a specified name, it will be ignored.\n\nInput values are represented as strings.\n\nThere are two notations for inputs:\n\n1.0 notation - The deprecated notation used in API 1.0 and in 1.5\n    2.0 notation - The new notation that is partially supported in API 1.5, and will\n        be the only notation supported in 2.0\n\nAlthough the two notations are similar, they have a few important differences, in particular:\n\n\n  With 2.0 notation, values MUST begin with a prefix identifying their type, followed\n  by a colon (example: \"text:foo\"). With 1.0 notation, unprefixed values are generally\n  taken to be text-type.\n  With 2.0 notation, a sentinel value \"inherit\" is used to express that an input\n  should use an inherited value. With 1.0 notation the empty string was used to express\n  the same thing. (Due to requirement 1, empty string is no longer a valid input.)\n  With 2.0 notation, each element of an array is an entire input value; arrays can\n  contain cred, env, or even other arrays. With 1.0 notation, array elements are\n  implicitly text values and there is no way to specify anything else.Note that the UI\n  does not support complex-valued arrays; please use this feature with caution!\n\n\nThe following types of inputs are supported:\n\n\n\nType\nFormat\n1.0 Example(s)\n2.0 Example(s)\n\n\nText string\n&lt;value&gt; (1.0 only)text:&lt;value&gt;\nfootext:footext:multi word value\ntext:footext:multi word value\n\n\nBlank string(input is present but its value is empty-string)\ntext:blank (2.0 only)\ntext:\nblank\n\n\nIgnore (input is not present)\nignore$ignore (1.0 only)ignore:$ignore (1.0 only)\nignore$ignoreignore:$ignore\nignore\n\n\nDynamically-substituted environment value\nenv:&lt;value&gt;env:&lt;component&gt;:&lt;value&gt;\nenv:MY_ENV_VARenv:my_server:MY_ENV_VAR\nenv:MY_ENV_VARenv:my_server:MY_ENV_VAR\n\n\nCredential value\ncred:&lt;value&gt;\ncred:abcd1234wxyz\ncred:abcd1234wxyz\n\n\nPrivate SSH key\nkey:&lt;value&gt;key:&lt;value&gt;:&lt;cloud_id&gt;\nkey:1234abcd5678key:1234abcd5678:1\nkey:1234abcd5678key:1234abcd5678:1\n\n\nArray of values\narray:&lt;value&gt;,... (1.0 only)array:[\"&lt;type&gt;:&lt;value&gt;\",...] (2.0 only)\narray:x,y(NOTE: 1.0 only supports text inputs for arrays)\narray:[\"text:v1\",\"text:v2\"]array:[\"text:x\",\"env:server_x:MY_VAR\"]\n\n\n\nNote that in the case of array inputs, the portion after the colon must be\nvalid JSON. In particular, when enclosing the input within double-quotes\n(e.g. for use in cURL or Ruby), the double-quotes must be escaped.\nSingle-quotes may not be used within the array input, since they are not\nvalid for JSON strings.\n\nThe legacy format for providing inputs is as an array of name-value pairs\n(ex: -d inputs[][name]=\"MY_INPUT\" -d inputs[][value]=\"text:foobar\"), however\nthe new format is supported for inputs provided as a hash\n(ex: -d inputs[MY_INPUT]=\"text:foobar\").\n\nIf the old format is used, the input is parsed using 1.0 semantics.\nIf the new format is used, the input is parsed using the new 2.0 semantics."
      },
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "inputs_2_0"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "value": "text:",
          "name": "input_definition_2729027209"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:instance_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}GET    /api/deployments/:deployment_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}GET    /api/server_templates/:server_template_id/inputs(.:format)? {:action=>\"index\", :controller=>\"inputs\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Retrieves the full list of existing inputs of the specified resource."
      }
    },
    "media_type": {
      "attributes": {
        "value": "",
        "name": ""
      },
      "content_types": [
        "application/vnd.rightscale.input"
      ],
      "links": {
      },
      "description": "Inputs help extract dynamic information, usually specified at runtime, from repeatable configuration operations that can be codified.\n  Inputs are variables defined in and used by RightScripts/Recipes. The two main attributes of an input are 'name' and 'value'. The 'name'\n  identifies the input and the 'value', although a string encodes what type it is. It could be a text encoded as 'text:myvalue' or a credential\n  encoded as 'cred:MY_CRED' or a key etc. Please see support.rightscale.com for more info on input hierarchies and their different types."
    },
    "description": "Inputs help extract dynamic information, usually specified at runtime, from repeatable configuration operations that can be codified.\nInputs are variables defined in and used by RightScripts/Recipes. The two main attributes of an input are 'name' and 'value'. The 'name'\nidentifies the input and the 'value', although a string encodes what type it is. It could be a text encoded as 'text:myvalue' or a credential\nencoded as 'cred:MY_CRED' or a key etc. Please see support.rightscale.com for more info on input hierarchies and their different types."
  },
  "Accounts": {
    "methods": {
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/accounts/331800546"},
            {"rel":"owner","href":"/api/users/888"},
            {"rel":"cluster","href":"/api/clusters/9"}
          ],
          "created_at": "2015/04/08 22:32:12 +0000",
          "name": "SPEC_ACCOUNT",
          "updated_at": "2015/04/08 22:32:12 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/accounts/:id(.:format)?             {:action=>\"show\", :controller=>\"accounts\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single Account."
      }
    },
    "media_type": {
      "attributes": {
        "products": "",
        "links": "",
        "permissions": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.account"
      ],
      "links": {
        "cluster": "Href of the cluster the account belongs to",
        "owner": "Href of the owner",
        "self": "Href of itself"
      },
      "description": null
    },
    "description": null
  },
  "Servers": {
    "methods": {
      "launch": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Launches the \"next\" instance of this server. This function is equivalent to invoking the launch action on the\nURL of this servers next_instance. See Instances#launch for details."
      },
      "update": {
        "parameters": {
          "server[automatic_instance_store_mapping]": {
            "class": "String",
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[optimized]": {
            "class": "String",
            "description": "A flag indicating whether Instances of this Server should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[root_volume_size]": {
            "class": "String",
            "description": "The size for root disk. Not supported in all Clouds.",
            "non_blank": true
          },
          "server[name]": {
            "class": "String",
            "description": "The updated server name.",
            "non_blank": true
          },
          "server[description]": {
            "class": "String",
            "description": "The updated description for the server.",
            "non_blank": true
          },
          "server": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/servers/:id(.:format)?              {:action=>\"update\", :controller=>\"servers\"}PUT    /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"update\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a single server."
      },
      "wrap_instance": {
        "parameters": {
          "server[instance][href]": {
            "class": "String",
            "description": "The href of the Instance around which the server should be created.",
            "mandatory": true,
            "non_blank": true
          },
          "server[deployment_href]": {
            "class": "String",
            "description": "The href of the deployment to which the Server will be added.",
            "non_blank": true
          },
          "server[instance][server_template_href]": {
            "class": "String",
            "description": "The href of the Server Template.",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance][inputs][*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update.",
            "non_blank": true
          },
          "server[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server[instance][features][automation]": {
            "class": "String",
            "description": "Enables running of automation.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][features][monitoring]": {
            "class": "String",
            "description": "Allow sending of monitoring data.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][features]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "server[name]": {
            "class": "String",
            "description": "The name of the Server.",
            "non_blank": true
          },
          "server[instance][multi_cloud_image_href]": {
            "class": "String",
            "description": "The href of the Multi Cloud Image to use.",
            "non_blank": true
          },
          "server[description]": {
            "class": "String",
            "description": "The Server description.",
            "non_blank": true
          },
          "server": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/servers/wrap_instance(.:format)?    {:action=>\"wrap_instance\", :controller=>\"servers\"}POST   /api/deployments/:deployment_id/servers/wrap_instance(.:format)? {:action=>\"wrap_instance\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Wrap an existing instance and set current instance for new server"
      },
      "create": {
        "parameters": {
          "server[instance][cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "description": "The size for root disk. Not supported in all Clouds.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone.",
            "non_blank": true
          },
          "server[instance][user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "server[deployment_href]": {
            "class": "String",
            "description": "The href of the deployment to which the Server will be added.",
            "non_blank": true
          },
          "server[instance][cloud_href]": {
            "class": "String",
            "description": "The href of the cloud that the Server should be added to.",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance][ssh_key_href]": {
            "class": "String",
            "description": "The href of the SSH key to use.",
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][server_template_href]": {
            "class": "String",
            "description": "The href of the Server Template.",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance][security_group_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the security groups.",
            "non_blank": true
          },
          "server[instance][inputs][][value]": {
            "class": "String",
            "description": "The value of that Input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][associate_public_ip_address]": {
            "class": "String",
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][features][automation]": {
            "class": "String",
            "description": "Enables running of automation.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][features][monitoring]": {
            "class": "String",
            "description": "Allow sending of monitoring data.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][features]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)",
            "mandatory": false,
            "non_blank": false
          },
          "server[optimized]": {
            "class": "String",
            "description": "A flag indicating whether Instances of this Server should be optimized for high-performance volumes (e.g. Volumes supporting a specified number of IOPS). Not supported in all Clouds.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance]": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance][image_href]": {
            "class": "String",
            "description": "The href of the Image to use.",
            "non_blank": true
          },
          "server[instance][subnet_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the updated subnets.",
            "non_blank": true
          },
          "server[instance][inputs][][name]": {
            "class": "String",
            "description": "The Input name. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][inputs]": {
            "class": "Enumerable",
            "non_blank": true
          },
          "server[instance][inputs][*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the Input, and the value is the value to assign to the Input. For more details on 2.0-style Inputs, please see Inputs#multi_update.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][ip_forwarding_enabled]": {
            "class": "String",
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes]": {
            "class": "Hash",
            "description": "Cloud specific attributes that have no generic rightscale abstraction",
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning.",
            "mandatory": false,
            "non_blank": true
          },
          "server[instance][cloud_specific_attributes][num_cores]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The number of CPU cores. Only available on UCA clouds."
          },
          "server[instance][cloud_specific_attributes][memory_mb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The memory size in MB. Only available on UCA clouds."
          },
          "server[instance][cloud_specific_attributes][disk_gb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The local disk space. Only available on UCA clouds."
          },
          "server[instance][ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the Ramdisk Image.",
            "non_blank": true
          },
          "server[instance][instance_type_href]": {
            "class": "String",
            "description": "The href of the Instance Type.",
            "non_blank": true
          },
          "server[name]": {
            "class": "String",
            "description": "The name of the Server.",
            "mandatory": true,
            "non_blank": true
          },
          "server[instance][placement_group_href]": {
            "class": "String",
            "description": "The href of the Placement Group.",
            "non_blank": true
          },
          "server[instance][multi_cloud_image_href]": {
            "class": "String",
            "description": "The href of the Multi Cloud Image to use.",
            "non_blank": true
          },
          "server": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "server[description]": {
            "class": "String",
            "description": "The Server description.",
            "non_blank": true
          },
          "server[instance][kernel_image_href]": {
            "class": "String",
            "description": "The href of the Kernel Image.",
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/servers(.:format)?                  {:action=>\"create\", :controller=>\"servers\"}POST   /api/deployments/:deployment_id/servers(.:format)? {:action=>\"create\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new server, and configures its corresponding \"next\" instance with the received parameters."
      },
      "terminate": {
        "parameters": {
        },
        "status_code": null,
        "route": "",
        "access_rules": {
        },
        "description": "Terminates the current instance of this server. This function is equivalent to invoking the terminate action on the\nURL of this servers current_instance. See Instances#terminate for details."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "instance_detail"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/servers/1"},
            {"rel":"deployment","href":"/api/deployments/2"},
            {"rel":"current_instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/1M823KA6DPKRJ"},
            {"rel":"alert_specs","href":"/api/servers/1/alert_specs"},
            {"rel":"alerts","href":"/api/servers/1/alerts"}
          ],
          "description": "description_2470108433",
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "operational",
          "created_at": "2015/04/08 22:32:13 +0000",
          "name": "nickname-1557904763",
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "filters": {
          "deployment_href": {
            "description": "The href of the Deployment to filter on."
          },
          "cloud_href": {
            "description": "The href of the Cloud to filter on."
          },
          "name": {
            "column": "servers.nickname",
            "partial_match": true,
            "description": "The name of the Server to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/servers(.:format)?                  {:action=>\"index\", :controller=>\"servers\"}GET    /api/deployments/:deployment_id/servers(.:format)? {:action=>\"index\", :controller=>\"servers\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists servers.\n\nBy using the available filters, it is possible to retrieve servers that have common characteristics.\nFor example, one can list:\n\n\nservers that have names that contain \"app_server\"\nall servers of a given deployment\n\n\nFor more filters, please see the 'index' action on 'Instances' resource as most of the attributes belong to\na 'current_instance' than to a server."
      },
      "clone": {
        "parameters": {
        },
        "status_code": "201 Created",
        "route": "POST   /api/servers/:id/clone(.:format)?        {:action=>\"clone\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Clones a given server."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/servers/:id(.:format)?              {:action=>\"destroy\", :controller=>\"servers\"}DELETE /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"destroy\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given server."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "instance_detail"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/servers/1"},
            {"rel":"deployment","href":"/api/deployments/2"},
            {"rel":"current_instance","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"next_instance","href":"/api/clouds/888/instances/1M823KA6DPKRJ"},
            {"rel":"alert_specs","href":"/api/servers/1/alert_specs"},
            {"rel":"alerts","href":"/api/servers/1/alerts"}
          ],
          "description": "description_2470108433",
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "clone"
            }
          ],
          "state": "operational",
          "created_at": "2015/04/08 22:32:13 +0000",
          "name": "nickname-1557904763",
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/servers/:id(.:format)?              {:action=>\"show\", :controller=>\"servers\"}GET    /api/deployments/:deployment_id/servers/:id(.:format)? {:action=>\"show\", :controller=>\"servers\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows the information of a single server."
      },
      "unwrap": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/servers/:id/unwrap(.:format)?       {:action=>\"unwrap\", :controller=>\"servers\"}POST   /api/deployments/:deployment_id/servers/:id/unwrap(.:format)? {:action=>\"unwrap\", :controller=>\"servers\"}",
        "access_rules": [
          "actor"
        ],
        "description": null
      }
    },
    "media_type": {
      "attributes": {
        "next_instance": "",
        "links": "",
        "optimized": "",
        "current_instance": "",
        "description": "",
        "actions": "",
        "state": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.server"
      ],
      "links": {
        "deployment": "Associated deployment",
        "current_instance": "Associated current instance",
        "alert_specs": "Associated AlertSpecs",
        "next_instance": "Associated next instance",
        "alerts": "Associated Alerts",
        "self": "Href of itself"
      },
      "description": "Servers represent the notion of a server/machine from the RightScale's perspective. A Server, does not always\n  have a corresponding VM running or provisioned in a cloud. Some clouds use the word \"servers\" to refer to created VM's. These allocated VM's\n  are not called Servers in the RightScale API, they are called Instances.\n\nA Server always has a next_instance association, which will define the configuration to apply to a new instance when\n  the server is launched or started (starting servers is not yet supported through this API).\n  Once a Server is launched/started a current_instance relationship will exist. \n  Accessing the current_instance of a server results in immediate runtime modification of this running server. \n  Changes to the next_instance association prepares the\n  configuration for the next instance launch/start (therefore they have no effect until such operation is performed)."
    },
    "description": "Servers represent the notion of a server/machine from the RightScale's perspective. A Server, does not always\nhave a corresponding VM running or provisioned in a cloud. Some clouds use the word \"servers\" to refer to created VM's. These allocated VM's\nare not called Servers in the RightScale API, they are called Instances.\n\nA Server always has a next_instance association, which will define the configuration to apply to a new instance when\nthe server is launched or started (starting servers is not yet supported through this API).\nOnce a Server is launched/started a current_instance relationship will exist.\nAccessing the current_instance of a server results in immediate runtime modification of this running server.\nChanges to the next_instance association prepares the\nconfiguration for the next instance launch/start (therefore they have no effect until such operation is performed)."
  },
  "RightScripts": {
    "methods": {
      "update": {
        "parameters": {
          "right_script": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "right_script[name]": {
            "class": "String",
            "description": "The new name for the RightScript",
            "non_blank": true
          },
          "right_script[description]": {
            "class": "String",
            "description": "The new description for the RightScript",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/right_scripts/:id(.:format)?        {:action=>\"update\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates RightScript name/description"
      },
      "update_source": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/right_scripts/:id/source(.:format)? {:action=>\"update_source\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Updates the source of the given RightScript"
      },
      "show_source": {
        "parameters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/right_scripts/:id/source(.:format)? {:action=>\"show_source\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Returns the script source for a RightScript"
      },
      "commit": {
        "parameters": {
          "right_script": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "right_script[commit_message]": {
            "class": "String",
            "description": "The message to be included with the requested commit",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/right_scripts/:id/commit(.:format)? {:action=>\"commit\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Commits the given RightScript. Only HEAD revisions (revision 0) can be committed."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          },
          "latest_only": {
            "class": "String",
            "description": "Whether or not to return only the latest version for each lineage.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/right_scripts/2"},
            {"rel":"source","href":"/api/right_scripts/2/source"}
          ],
          "description": "DESCRIPTION_3427582138",
          "lineage": "https://testscale_1/api/acct/331800546/right_scripts/2",
          "revision": 0,
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "NAME_230061123",
          "id": "2",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "name": {
            "partial_match": true,
            "description": "Name of the RightScript to filter on."
          },
          "lineage": {
            "column": "lineage_uid",
            "partial_match": false,
            "description": "Lineage of the RightScript to filter on (this attribute is simply a string and not a working URL)."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/right_scripts(.:format)?            {:action=>\"index\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists RightScripts."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/right_scripts/2"},
            {"rel":"source","href":"/api/right_scripts/2/source"}
          ],
          "description": "DESCRIPTION_3427582138",
          "lineage": "https://testscale_1/api/acct/331800546/right_scripts/2",
          "revision": 0,
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "NAME_230061123",
          "id": "2",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/right_scripts/:id(.:format)?        {:action=>\"show\", :controller=>\"right_scripts\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single RightScript."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "lineage": "",
        "revision": "",
        "source": "",
        "created_at": "",
        "name": "",
        "id": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.right_script"
      ],
      "links": {
        "source": "Returns the RightScript source",
        "self": "Href of itself"
      },
      "description": "A RightScript is an executable piece of code that can be run on a server\n  during the boot, operational, or decommission phases. A RightScript\n  consists of a script (typically written in Bash, Ruby, or Perl), a set of\n  binary-file attachments that are downloaded on demand from RightScale,\n  a set of package names that are installed using the system's package\n  manager before running the script, and a set of named input parameters\n  that are passed into the script as environment variables. All revisions of\n  a RightScript belong to a RightScript lineage that is exposed by the\n  \"lineage\" attribute (NOTE: This attribute is merely a string to locate\n  all revisions of a RightScript and NOT a working URL)."
    },
    "description": "A RightScript is an executable piece of code that can be run on a server\nduring the boot, operational, or decommission phases.\n\nAll revisions of\na RightScript belong to a RightScript lineage that is exposed by the\n\"lineage\" attribute (NOTE: This attribute is merely a string to locate\nall revisions of a RightScript and NOT a working URL)."
  },
  "Cookbooks": {
    "methods": {
      "freeze": {
        "parameters": {
          "value": {
            "class": "String",
            "description": "Indicates if this action should freeze (true) or unfreeze (false) a Cookbook.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/cookbooks/:id/freeze(.:format)?     {:action=>\"freeze\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Freezes (or unfreezes) a Cookbook. Only available for cookbooks that are in the Primary namespace."
      },
      "obsolete": {
        "parameters": {
          "value": {
            "class": "String",
            "description": "Indicates if this action should obsolete (true) or un-obsolete (false) a Cookbook.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/cookbooks/:id/obsolete(.:format)?   {:action=>\"obsolete\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Marks a Cookbook as obsolete (or un-obsolete)."
      },
      "follow": {
        "parameters": {
          "value": {
            "class": "String",
            "description": "Indicates if this action should follow (true) or unfollow (false) a Cookbook.",
            "mandatory": true,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/cookbooks/:id/follow(.:format)?     {:action=>\"follow\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Follows (or unfollows) a Cookbook. Only available for cookbooks that are in the Alternate namespace."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended",
              "extended_designer"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cookbooks/1"},
            {"rel":"repository","href":"/api/repositories/1"},
            {"rel":"cookbook_attachments","href":"/api/cookbooks/1/cookbook_attachments"}
          ],
          "namespace": "alternate",
          "actions": [
            {
              "rel": "freeze"
            },
            {
              "rel": "follow"
            },
            {
              "rel": "obsolete"
            }
          ],
          "state": "followed",
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "cookbook_701408434",
          "id": 1,
          "version": "0.1.0",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
          "state": {
            "column": "state",
            "partial_match": false,
            "description": "Status of the Cookbooks to filter on."
          },
          "repository_href": {
            "column": "cookbook_repo_id",
            "description": "Repository href to filter on."
          },
          "namespace": {
            "column": "alternate_namespace",
            "partial_match": false,
            "description": "Namespace of the Cookbooks to filter on."
          },
          "name": {
            "column": "name",
            "partial_match": false,
            "description": "Name of the Cookbooks to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/cookbooks(.:format)?                {:action=>\"index\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists the Cookbooks available to this account.\n\nThe extended_designer view is only available to accounts with the designer permission."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/cookbooks/:id(.:format)?            {:action=>\"destroy\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Destroys a Cookbook. Only available for cookbooks that have no Cookbook Attachments."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended",
              "extended_designer"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cookbooks/1"},
            {"rel":"repository","href":"/api/repositories/1"},
            {"rel":"cookbook_attachments","href":"/api/cookbooks/1/cookbook_attachments"}
          ],
          "namespace": "alternate",
          "actions": [
            {
              "rel": "freeze"
            },
            {
              "rel": "follow"
            },
            {
              "rel": "obsolete"
            }
          ],
          "state": "followed",
          "created_at": "2015/04/08 22:32:17 +0000",
          "name": "cookbook_701408434",
          "id": 1,
          "version": "0.1.0",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/cookbooks/:id(.:format)?            {:action=>\"show\", :controller=>\"cookbooks\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Show information about a single Cookbook.\n\nThe extended_designer view is only available to accounts with the designer permission."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "namespace": "Can be either 'primary' or 'alternate'",
        "download_url": "A URL that links to the source code of this cookbook as stored in RightScale",
        "source_info_summary": "",
        "actions": "",
        "state": "Can be one of 'normal', 'followed', 'frozen', or 'obsolete'",
        "created_at": "",
        "name": "",
        "id": "",
        "metadata": "",
        "updated_at": "",
        "version": "The version of the cookbook as specified in the metadata"
      },
      "content_types": [
        "application/vnd.rightscale.cookbook"
      ],
      "links": {
        "repository": "Href of associated Repository",
        "cookbook_attachments": "Attachments for this Cookbook",
        "self": "Href of itself"
      },
      "description": "Represents a given instance of a single cookbook."
    },
    "description": "Represents a given instance of a single cookbook."
  },
  "CookbookAttachments": {
    "methods": {
      "multi_attach": {
        "parameters": {
          "cookbook_attachments[cookbook_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the cookbooks to be attached",
            "non_blank": true
          },
          "cookbook_attachments[server_template_href]": {
            "class": "String",
            "description": "The href of the server template to attach the cookbooks to.",
            "mandatory": false,
            "non_blank": true
          },
          "cookbook_attachments": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/server_templates/:server_template_id/cookbook_attachments/multi_attach(.:format)? {:action=>\"multi_attach\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments/multi_attach(.:format)? {:action=>\"multi_attach\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Attach multiple cookbooks to a given resource."
      },
      "multi_detach": {
        "parameters": {
          "cookbook_attachments[cookbook_attachment_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the cookbook attachments to be detached",
            "non_blank": true
          },
          "cookbook_attachments": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/server_templates/:server_template_id/cookbook_attachments/multi_detach(.:format)? {:action=>\"multi_detach\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments/multi_detach(.:format)? {:action=>\"multi_detach\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Detach multiple cookbooks from a given resource."
      },
      "create": {
        "parameters": {
          "cookbook_attachment": {
            "class": "Hash",
            "non_blank": true
          },
          "cookbook_attachment[server_template_href]": {
            "class": "String",
            "description": "The href of the server template to attach the cookbook to.",
            "mandatory": false,
            "non_blank": true
          },
          "cookbook_attachment[cookbook_href]": {
            "class": "String",
            "description": "The href of the cookbook to attach.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/cookbooks/:cookbook_id/cookbook_attachments(.:format)? {:action=>\"create\", :controller=>\"cookbook_attachments\"}POST   /api/server_templates/:server_template_id/cookbook_attachments(.:format)? {:action=>\"create\", :controller=>\"cookbook_attachments\"}POST   /api/cookbook_attachments(.:format)?     {:action=>\"create\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Attach a cookbook to a given resource."
      },
      "index": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cookbook_attachments/1"},
            {"rel":"cookbook","href":"/api/cookbooks/1"},
            {"rel":"server_template","href":"/api/server_templates/1"}
          ],
          "actions": [

          ],
          "dependency": false,
          "id": "1"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/cookbooks/:cookbook_id/cookbook_attachments(.:format)? {:action=>\"index\", :controller=>\"cookbook_attachments\"}GET    /api/server_templates/:server_template_id/cookbook_attachments(.:format)? {:action=>\"index\", :controller=>\"cookbook_attachments\"}GET    /api/cookbook_attachments(.:format)?     {:action=>\"index\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists Cookbook Attachments."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/cookbooks/:cookbook_id/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}DELETE /api/server_templates/:server_template_id/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}DELETE /api/cookbook_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "designer"
        ],
        "description": "Detach a cookbook from a given resource."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/cookbook_attachments/1"},
            {"rel":"cookbook","href":"/api/cookbooks/1"},
            {"rel":"server_template","href":"/api/server_templates/1"}
          ],
          "actions": [

          ],
          "dependency": false,
          "id": "1"
        },
        "status_code": "200 OK",
        "route": "GET    /api/cookbooks/:cookbook_id/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}GET    /api/server_templates/:server_template_id/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}GET    /api/cookbook_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"cookbook_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single cookbook attachment to a ServerTemplate."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "actions": "",
        "dependency": "",
        "id": ""
      },
      "content_types": [
        "application/vnd.rightscale.cookbook_attachment"
      ],
      "links": {
        "server_template": "Href of ServerTemplate",
        "cookbook": "Href of the attached Cookbook",
        "self": "Href of itself"
      },
      "description": "Cookbook Attachment is used to associate a particular cookbook with a ServerTemplate. A Cookbook Attachment must be in place before a recipe can be bound to a runlist using RunnableBinding."
    },
    "description": "Cookbook Attachment is used to associate a particular cookbook with a ServerTemplate. A Cookbook Attachment must be in place before a recipe can be bound to a runlist using RunnableBinding."
  },
  "AccountGroups": {
    "methods": {
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/account_groups/1"},
            {"rel":"account","href":"/api/accounts/331800546"}
          ],
          "description": "DESCRIPTION_1494142549",
          "actions": [

          ],
          "created_at": 1428532334,
          "name": "NAME_1605111187",
          "updated_at": 1428532334
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/account_groups(.:format)?           {:action=>\"index\", :controller=>\"account_groups\"}",
        "access_rules": [
          "publisher"
        ],
        "description": "Lists the AccountGroups owned by this Account."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/account_groups/1"},
            {"rel":"account","href":"/api/accounts/331800546"}
          ],
          "description": "DESCRIPTION_1494142549",
          "actions": [

          ],
          "created_at": 1428532334,
          "name": "NAME_1605111187",
          "updated_at": 1428532334
        },
        "status_code": "200 OK",
        "route": "GET    /api/account_groups/:id(.:format)?       {:action=>\"show\", :controller=>\"account_groups\"}",
        "access_rules": [
          "publisher"
        ],
        "description": "Show information about a single AccountGroup."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "description": "",
        "actions": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.account_group"
      ],
      "links": {
        "account": "Associated account",
        "self": "Href of itself"
      },
      "description": "An Account Group specifies which RightScale accounts will have access to import a shared RightScale component (e.g. ServerTemplate, RightScript, etc.) from the MultiCloud Marketplace."
    },
    "description": "An Account Group specifies which RightScale accounts will have access to import a shared RightScale component (e.g. ServerTemplate, RightScript, etc.) from the MultiCloud Marketplace."
  },
  "Tags": {
    "methods": {
      "by_tag": {
        "parameters": {
          "resource_type": {
            "class": "String",
            "description": "Search among a single resource type.",
            "mandatory": true,
            "valid_values": [
              "servers",
              "instances",
              "volumes",
              "volume_snapshots",
              "deployments",
              "server_templates",
              "multi_cloud_images",
              "images",
              "server_arrays",
              "accounts"
            ],
            "non_blank": true
          },
          "match_all": {
            "class": "String",
            "description": "If set to 'true', resources having all the tags specified in the 'tags' parameter are returned. Otherwise, resources having any of the tags are returned.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "with_deleted": {
            "class": "String",
            "description": "If set to 'true', tags for deleted resources will also be returned. Default value is 'false'.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "include_tags_with_prefix": {
            "class": "String",
            "description": "If included, all tags matching this prefix will be returned. If not included, no tags will be returned.",
            "non_blank": true
          },
          "tags": {
            "class": "Array",
            "description": "The tags which must be present on the resource.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/tags/by_tag(.:format)?              {:action=>\"by_tag\", :controller=>\"tags\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Search for resources having a list of tags in a specific resource_type.\n\nThe search criteria can contain plain tags (\"my_db_server\"), machine tags (\"server:db=true\"), or\nnamespace &amp; predicate wildcards (\"server:db=*\"). The result set includes links to the resources.\n\nIf match_all is \"true\", then the search is an \"AND\" operation -- only resources having all the\ntags are returned. If match_all has any other value or is missing, the search is performed\nas an \"OR\" operation.\n\nPLEASE NOTE the behavior of the include_tags_with_prefix parameter: if it is absent,\nor blank, then you will find resources that match your query but receive no information about\nthe tags that apply to those resources. (Your search will also complete much more quickly in\nthis case.)\n\nFor example, a search with tag[]=\"server:db=true\" and include_tags_with_prefix=\"backup:\"\nwill return resources that are tagged as a DB server, and also return all \"backup\" related tags\nfor every matching resource.",
        "content_type": "application/vnd.rightscale.resource_tag;type=collection"
      },
      "multi_delete": {
        "parameters": {
          "resource_hrefs": {
            "class": "Array",
            "description": "Hrefs of the resources for which tags are to be deleted.",
            "mandatory": true,
            "non_blank": true
          },
          "tags": {
            "class": "Array",
            "description": "Tags to be deleted.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/tags/multi_delete(.:format)?        {:action=>\"multi_delete\", :controller=>\"tags\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Delete a list of tags on a list of hrefs. The tags must be either plain_tags or machine_tags.\nThe hrefs can belong to various resource types. If a resource for a href could not be found, an\nerror is returned and no tags are deleted for any resource.\n\nNote that no error will be raised if the resource does not have the tag(s) you are trying to delete."
      },
      "by_resource": {
        "parameters": {
          "resource_hrefs": {
            "class": "Array",
            "description": "Hrefs of the resources for which tags are to be returned.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "200 OK",
        "route": "POST   /api/tags/by_resource(.:format)?         {:action=>\"by_resource\", :controller=>\"tags\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Get tags for a list of resource hrefs.\nThe hrefs can belong to various resource types and the tags for a non-existent href will be empty.",
        "content_type": "application/vnd.rightscale.resource_tag;type=collection"
      },
      "multi_add": {
        "parameters": {
          "resource_hrefs": {
            "class": "Array",
            "description": "Hrefs of the resources for which the tags are to be added.",
            "mandatory": true,
            "non_blank": true
          },
          "tags": {
            "class": "Array",
            "description": "Tags to be added.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/tags/multi_add(.:format)?           {:action=>\"multi_add\", :controller=>\"tags\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "Add a list of tags to a list of hrefs. The tags must be either plain_tags or machine_tags.\nThe hrefs can belong to various resource types. If a resource for a href could not be found, an\nerror is returned and no tags are added for any resource.\n\nNo error will be raised if the resource already has the tag(s) you are trying to add.\n\nNote: At this point, tags on 'next_instance' are not supported and one has to add tags to the 'server'."
      }
    },
    "media_type": null,
    "description": "A tag or machine tag is a useful way of attaching useful metadata to an object/resource.\nTags are commonly used as an extra label or identifier.\nFor example, you might want to add a tag to an EBS Snapshot or AMI so that you can find it more quickly."
  },
  "RecurringVolumeAttachments": {
    "methods": {
      "create": {
        "parameters": {
          "recurring_volume_attachment[settings]": {
            "class": "Hash",
            "description": "Additional parameters concerning created attachment. For example, ':delete_on_termination => true' will schedule volume deletion if instance was terminated.",
            "non_blank": true
          },
          "recurring_volume_attachment[volume_type_href]": {
            "class": "String",
            "description": "The href of the volume type. Can be required by some clouds in case if you attaching volume snapshot.",
            "non_blank": true
          },
          "recurring_volume_attachment[storage_href]": {
            "class": "String",
            "description": "The href of the volume or volume snapshot to be attached on launch of a next instance.",
            "mandatory": true,
            "non_blank": true
          },
          "recurring_volume_attachment": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "recurring_volume_attachment[runnable_href]": {
            "class": "String",
            "description": "The href of the server or server array to attach to.",
            "mandatory": true,
            "non_blank": true
          },
          "recurring_volume_attachment[settings][*]": {
            "class": "String",
            "description": "Key/Value separated options",
            "non_blank": true
          },
          "recurring_volume_attachment[device]": {
            "class": "String",
            "description": "The device location where the volume or volume snapshot will be mounted. Value must be of format /dev/xvd[bcefghij]. This is not reliable and will be deprecated.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}POST   /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}POST   /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments(.:format)? {:action=>\"create\", :controller=>\"recurring_volume_attachments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates a new recurring volume attachment."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/recurring_volume_attachments/1"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"runnable","href":"/api/servers/1"},
            {"rel":"storage","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"}
          ],
          "device_id": "device_id:9",
          "device": "/dev/xvdj",
          "storage_type": "Volume",
          "runnable_type": "Server",
          "status": "attached",
          "actions": [

          ],
          "size": "1 GB",
          "created_at": "2015/04/08 22:32:14 +0000",
          "name": "Recurring Volume Attachment between nickname-1557904763 and NAME_4249686834",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "filters": {
          "storage_href": {
            "polymorphic": true,
            "column": "storage_rsid",
            "description": "The href of the volume or volume snapshot to filter on."
          },
          "runnable_href": {
            "polymorphic": true,
            "description": "The href of the server or server array to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments(.:format)? {:action=>\"index\", :controller=>\"recurring_volume_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all recurring volume attachments."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/clouds/:cloud_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}DELETE /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}DELETE /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments/:id(.:format)? {:action=>\"destroy\", :controller=>\"recurring_volume_attachments\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Deletes a given recurring volume attachment."
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/recurring_volume_attachments/1"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"runnable","href":"/api/servers/1"},
            {"rel":"storage","href":"/api/clouds/888/volumes/RESOURCE_4227702693;1652056387"}
          ],
          "device_id": "device_id:9",
          "device": "/dev/xvdj",
          "storage_type": "Volume",
          "runnable_type": "Server",
          "status": "attached",
          "actions": [

          ],
          "size": "1 GB",
          "created_at": "2015/04/08 22:32:14 +0000",
          "name": "Recurring Volume Attachment between nickname-1557904763 and NAME_4249686834",
          "updated_at": "2015/04/08 22:32:14 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volumes/:volume_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}GET    /api/clouds/:cloud_id/volume_snapshots/:volume_snapshot_id/recurring_volume_attachments/:id(.:format)? {:action=>\"show\", :controller=>\"recurring_volume_attachments\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Displays information about a single recurring volume attachment."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "device_id": "",
        "device": "",
        "storage_type": "",
        "runnable_type": "",
        "status": "",
        "actions": "",
        "size": "",
        "created_at": "",
        "name": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.recurring_volume_attachment"
      ],
      "links": {
        "runnable": "Associated Server/ServerArray",
        "storage": "Associated Volume/VolumeSnapshot",
        "cloud": "Associated cloud",
        "self": "Href of itself"
      },
      "description": "A RecurringVolumeAttachment specifies a Volume/VolumeSnapshot to attach to a Server/ServerArray the next time an instance is launched."
    },
    "description": "A RecurringVolumeAttachment specifies a Volume/VolumeSnapshot to attach to a Server/ServerArray the next time an instance is launched."
  },
  "Preferences": {
    "methods": {
      "update": {
        "parameters": {
          "preference[contents]": {
            "class": "String",
            "description": "The updated contents for the Preference.",
            "mandatory": true,
            "non_blank": true
          },
          "preference": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/preferences/:id(.:format)?          {:action=>\"update\", :controller=>\"preferences\"}",
        "access_rules": [
          "observer"
        ],
        "description": "If 'id' is known, updates preference with given contents.\nOtherwise, creates new preference.\nNote: If create, will return '201 Created' and the location of the new preference."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/preferences/my:custom:scope:custom_id"}
          ],
          "contents": "my custom string",
          "created_at": "2015/04/08 22:32:17 +0000",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "filters": {
        },
        "status_code": "200 OK",
        "route": "GET    /api/preferences(.:format)?              {:action=>\"index\", :controller=>\"preferences\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Lists all preferences."
      },
      "destroy": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "DELETE /api/preferences/:id(.:format)?          {:action=>\"destroy\", :controller=>\"preferences\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Deletes the given preference."
      },
      "show": {
        "parameters": {
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/preferences/my:custom:scope:custom_id"}
          ],
          "contents": "my custom string",
          "created_at": "2015/04/08 22:32:17 +0000",
          "updated_at": "2015/04/08 22:32:17 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/preferences/:id(.:format)?          {:action=>\"show\", :controller=>\"preferences\"}",
        "access_rules": [
          "observer"
        ],
        "description": "Shows a single preference."
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "contents": "",
        "actions": "",
        "created_at": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.preference"
      ],
      "links": {
        "self": "Href of itself"
      },
      "description": "A Preference is a user and account-specific setting. Preferences are used in many part of the RightScale platform and can be used for custom purposes if desired."
    },
    "description": "A Preference is a user and account-specific setting. Preferences are used in many part of the RightScale platform and can be used for custom purposes if desired."
  },
  "Instances": {
    "methods": {
      "launch": {
        "parameters": {
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "count": {
            "class": "String",
            "description": "For Server Arrays, will launch the specified number of instances into the ServerArray. Attempting to call this action on non-server array objects will result in a parameter error",
            "mandatory": false,
            "non_blank": true
          },
          "api_behavior": {
            "class": "String",
            "description": "When set to 'async', an instance resource will be returned immediately and processing will be handled in the background. Errors will not be returned and must be checked through the instance's audit entries. Default value is 'sync'",
            "mandatory": false,
            "valid_values": [
              "async",
              "sync"
            ],
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "description": "The value of that input. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[][name]": {
            "class": "String",
            "description": "The input name. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update.",
            "mandatory": false,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}POST   /api/servers/:server_id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/launch(.:format)? {:action=>\"launch\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Launches an instance using the parameters that this instance has been configured with.\n\nNote that this action can only be performed in \"next\" instances, and not on instances that are already running."
      },
      "lock": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/lock(.:format)? {:action=>\"lock\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": ""
      },
      "multi_run_executable": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "ignore_lock": {
            "class": "String",
            "description": "Specifies the ability to ignore the lock(s) on the Instance(s).",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "right_script_href": {
            "class": "String",
            "description": "The href of the RightScript to run. Should be of the form '/api/right_scripts/:id'.",
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "description": "The value of these inputs. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[][name]": {
            "class": "String",
            "description": "The name of inputs needed. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update.",
            "mandatory": false,
            "non_blank": true
          },
          "recipe_name": {
            "class": "String",
            "description": "The name of the recipe to be run.",
            "non_blank": true
          }
        },
        "status_code": "202 Accepted",
        "route": "POST   /api/clouds/:cloud_id/instances/multi_run_executable(.:format)? {:action=>\"multi_run_executable\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/multi_run_executable(.:format)? {:action=>\"multi_run_executable\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Runs a script or a recipe in the running instances.\n\nThis is an asynchronous function, which returns immediately after queuing the executable for execution.\nStatus of the execution can be tracked at the URL returned in the \"Location\" header."
      },
      "stop": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/stop(.:format)? {:action=>\"stop\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Stores the instance's current volume state to resume later using the 'start' action.\n\nAfter an instance is stopped, the reference to your instance will have a different id.\n\nThe new id can be found by performing an index query with the appropriate filters on the\nInstances resource, performing a show action on the Server resource for Server Instances, or performing a current_instances action on the ServerArray resource for ServerArray Instances."
      },
      "run_executable": {
        "parameters": {
          "ignore_lock": {
            "class": "String",
            "description": "Specifies the ability to ignore the lock on the Instance.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "inputs": {
            "class": "Enumerable",
            "non_blank": true
          },
          "right_script_href": {
            "class": "String",
            "description": "The href of the RightScript to run. Should be of the form '/api/right_scripts/:id'.",
            "non_blank": true
          },
          "inputs[][value]": {
            "class": "String",
            "description": "The value of these inputs. Should be of the form 'text:my_value' or 'cred:MY_CRED' etc. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[][name]": {
            "class": "String",
            "description": "The name of inputs needed. This format is used for passing legacy 1.0-style Inputs. Will eventually be deprecated.",
            "mandatory": false,
            "non_blank": true
          },
          "inputs[*]": {
            "class": "String",
            "description": "The format used for passing 2.0-style Inputs. The key is the name of the input, and the value is the value to assign to the input. For more details on 2.0-style inputs, please see Inputs#multi_update.",
            "mandatory": false,
            "non_blank": true
          },
          "recipe_name": {
            "class": "String",
            "description": "The name of the recipe to run.",
            "non_blank": true
          }
        },
        "status_code": "202 Accepted",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/run_executable(.:format)? {:action=>\"run_executable\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Runs a script or a recipe in the running instance.\n\nThis is an asynchronous function, which returns immediately after queuing the executable for execution.\nStatus of the execution can be tracked at the URL returned in the \"Location\" header.\nNote that this can only be performed on running instances."
      },
      "update": {
        "parameters": {
          "instance[cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type.",
            "mandatory": false,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning.",
            "mandatory": false,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][num_cores]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The number of CPU cores. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes][memory_mb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The memory size in MB. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes][disk_gb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The local disk space. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes]": {
            "class": "Hash",
            "description": "Cloud specific attributes that have no generic rightscale abstraction",
            "non_blank": true
          },
          "instance[name]": {
            "class": "String",
            "description": "The updated name to give the Instance.",
            "non_blank": true
          },
          "instance[ssh_key_href]": {
            "class": "String",
            "description": "The href of the updated SSH key for the Instance.",
            "non_blank": true
          },
          "instance[security_group_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the updated security groups.",
            "non_blank": true
          },
          "instance[ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the updated ramdisk image for the Instance.",
            "non_blank": true
          },
          "instance[datacenter_href]": {
            "class": "String",
            "description": "The href of the updated Datacenter / Zone for the Instance.",
            "non_blank": true
          },
          "instance[user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "instance[cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)",
            "mandatory": false,
            "non_blank": false
          },
          "instance[deployment_href]": {
            "class": "String",
            "description": "The href of the updated Deployment for the Instance. This is only supported for Instances that are not associated with a Server or ServerArray.",
            "non_blank": true
          },
          "instance[cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "description": "The size for root disk. Not supported in all Clouds.",
            "mandatory": false,
            "non_blank": true
          },
          "instance[kernel_image_href]": {
            "class": "String",
            "description": "The href of the updated kernel image for the Instance.",
            "non_blank": true
          },
          "instance[associate_public_ip_address]": {
            "class": "String",
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[ip_forwarding_enabled]": {
            "class": "String",
            "description": "Allows this Instance to send and receive network traffic when the source and destination IP addresses do not match the IP address of this Instance.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[image_href]": {
            "class": "String",
            "description": "The href of the updated Image for the Instance.",
            "non_blank": true
          },
          "instance[features][automation]": {
            "class": "String",
            "description": "Enables running of automation.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[features][monitoring]": {
            "class": "String",
            "description": "Allow sending of monitoring data.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[features]": {
            "class": "Hash",
            "mandatory": false,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "instance[subnet_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the updated subnets.",
            "non_blank": true
          },
          "instance[multi_cloud_image_href]": {
            "class": "String",
            "description": "The href of the updated MultiCloudImage for the Instance.",
            "non_blank": true
          },
          "instance[server_template_href]": {
            "class": "String",
            "description": "The href of the updated ServerTemplate for the Instance.",
            "non_blank": true
          },
          "instance[instance_type_href]": {
            "class": "String",
            "description": "The href of the updated Instance Type.",
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "PUT    /api/clouds/:cloud_id/instances/:id(.:format)? {:action=>\"update\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Updates attributes of a single instance."
      },
      "reboot": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/reboot(.:format)? {:action=>\"reboot\", :controller=>\"instances\"}POST   /api/servers/:server_id/reboot(.:format)? {:action=>\"reboot\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Reboot a running instance.\n\nNote that this action can only succeed if the instance is running. One cannot reboot instances of type \"next\"."
      },
      "create": {
        "parameters": {
          "instance[cloud_specific_attributes][root_volume_type_uid]": {
            "class": "String",
            "description": "The type of root volume for instance. Only available on clouds supporting root volume type.",
            "mandatory": false,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][root_volume_performance]": {
            "class": "String",
            "description": "The number of IOPS (I/O Operations Per Second) this root volume should support. Only available on clouds supporting performance provisioning.",
            "mandatory": false,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][num_cores]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The number of CPU cores. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes][memory_mb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The memory size in MB. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes][disk_gb]": {
            "mandatory": false,
            "class": "Integer",
            "description": "The local disk space. Only available on UCA clouds."
          },
          "instance[cloud_specific_attributes]": {
            "class": "Hash",
            "description": "Cloud specific attributes that have no generic rightscale abstraction",
            "non_blank": true
          },
          "instance[name]": {
            "class": "String",
            "description": "The name of the instance.",
            "mandatory": true,
            "non_blank": true
          },
          "instance[ssh_key_href]": {
            "class": "String",
            "description": "The href of the SSH key to use.",
            "non_blank": true
          },
          "instance[security_group_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the security groups.",
            "non_blank": true
          },
          "instance[ramdisk_image_href]": {
            "class": "String",
            "description": "The href of the ramdisk image.",
            "non_blank": true
          },
          "instance[datacenter_href]": {
            "class": "String",
            "description": "The href of the Datacenter / Zone.",
            "non_blank": true
          },
          "instance[cloud_specific_attributes][ebs_optimized]": {
            "class": "String",
            "description": "Whether the instance is able to connect to IOPS-enabled volumes.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[user_data]": {
            "class": "String",
            "description": "User data that RightScale automatically passes to your instance at boot time.",
            "non_blank": true
          },
          "instance[cloud_specific_attributes][iam_instance_profile]": {
            "class": "String",
            "description": "The name or ARN of the IAM Instance Profile (IIP) to associate with the instance (Amazon only)",
            "mandatory": false,
            "non_blank": false
          },
          "instance[deployment_href]": {
            "class": "String",
            "description": "The href of the deployment to which the Instance will be added.",
            "non_blank": true
          },
          "instance[cloud_specific_attributes][root_volume_size]": {
            "class": "String",
            "description": "The size for root disk. Not supported in all Clouds.",
            "mandatory": false,
            "non_blank": true
          },
          "api_behavior": {
            "class": "String",
            "description": "When set to 'async', an instance resource will be returned immediately and processing will be handled in the background. Errors will not be returned and must be checked through the instance's audit entries. Default value is 'sync'",
            "mandatory": false,
            "valid_values": [
              "async",
              "sync"
            ],
            "non_blank": true
          },
          "instance[kernel_image_href]": {
            "class": "String",
            "description": "The href of the kernel image.",
            "non_blank": true
          },
          "instance[associate_public_ip_address]": {
            "class": "String",
            "description": "Specify whether or not you want a public IP assigned when this Instance is launched. Only applies to Network-enabled Instances. If this is not specified, it will default to true.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance[placement_group_href]": {
            "class": "String",
            "description": "The placement group to launch the instance in. Not supported by all clouds & instance types.",
            "non_blank": true
          },
          "instance[image_href]": {
            "class": "String",
            "description": "The href of the Image to use.",
            "mandatory": true,
            "non_blank": true
          },
          "instance[cloud_specific_attributes][automatic_instance_store_mapping]": {
            "class": "String",
            "description": "A flag indicating whether instance store mapping should be enabled. Not supported in all Clouds.",
            "mandatory": false,
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          },
          "instance": {
            "class": "Hash",
            "mandatory": true,
            "non_blank": true
          },
          "instance[subnet_hrefs]": {
            "class": "Array",
            "description": "The hrefs of the updated subnets.",
            "non_blank": true
          },
          "instance[instance_type_href]": {
            "class": "String",
            "description": "The href of the instance type.",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "201 Created",
        "route": "POST   /api/clouds/:cloud_id/instances(.:format)? {:action=>\"create\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Creates and launches a raw instance using the provided parameters."
      },
      "terminate": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/terminate(.:format)? {:action=>\"terminate\", :controller=>\"instances\"}POST   /api/servers/:server_id/terminate(.:format)? {:action=>\"terminate\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Terminates a running instance.\n\nNote that this action can succeed only if the instance is running. One cannot terminate instances of type \"next\"."
      },
      "index": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended",
              "full",
              "full_inputs_2_0",
              "tiny",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"deployment","href":"/api/deployments/2"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1","inherited_source":"server_template"},
            {"rel":"parent","href":"/api/servers/1"},
            {"rel":"volume_attachments","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/volume_attachments"},
            {"rel":"inputs","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/inputs"},
            {"rel":"monitoring_metrics","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics"},
            {"rel":"alerts","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/alerts"}
          ],
          "public_ip_addresses": [
            "221.54.50.173"
          ],
          "private_ip_addresses": [
            "2.1.3.5"
          ],
          "cloud_specific_attributes": {
          },
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "reboot"
            },
            {
              "rel": "run_executable"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "state": "operational",
          "resource_uid": "RESOURCE_1381290985",
          "created_at": "2015/04/08 22:32:13 +0000",
          "pricing_type": "fixed",
          "associate_public_ip_address": true,
          "name": "NAME_55031662",
          "locked": false,
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "filters": {
          "state": {
            "column": "      IF (`is_next`=1, \"inactive\", IF(`stranded_at`, CONCAT('stranded in ', IF(\n        IF(`agent_state` IS NULL, `state`, `agent_state`)='running' AND IF(`incarnator_id` IS NOT NULL AND (attached_at AND NOT detached_at), `incarnator_id`, NULL),\n        \"booting\",\n        IF(`agent_state` IS NULL, `state`, `agent_state`)\n      )), IF(\n        IF(`agent_state` IS NULL, `state`, `agent_state`)='running' AND IF(`incarnator_id` IS NOT NULL AND (attached_at AND NOT detached_at), `incarnator_id`, NULL),\n        \"booting\",\n        IF(`agent_state` IS NULL, `state`, `agent_state`)\n      )))\n",
            "description": "The state of Instances to filter on."
          },
          "private_dns_name": {
            "column": "private_dns_names",
            "partial_match": true,
            "description": "The private dns name to filter on."
          },
          "private_ip_address": {
            "column": "private_ip_addresses",
            "partial_match": true,
            "description": "The private ip address to filter on."
          },
          "resource_uid": {
            "description": "Resource Unique IDentifier for the Instance to filter on."
          },
          "datacenter_href": {
            "column": "launch_settings.datacenter_rsid",
            "include": "launch_setting",
            "description": "The href of the datacenter to filter on."
          },
          "placement_group_href": {
            "column": "launch_settings.placement_group_rsid",
            "include": "launch_setting",
            "description": "The href of the placement group to filter on."
          },
          "server_template_href": {
            "description": "The href of the ServerTemplate to filter on."
          },
          "public_ip_address": {
            "column": "public_ip_addresses",
            "partial_match": true,
            "description": "The public ip address to filter on."
          },
          "deployment_href": {
            "description": "The href of the deployment to filter on."
          },
          "name": {
            "column": "instances.name",
            "partial_match": true,
            "description": "Name of the Instance to filter on."
          },
          "public_dns_name": {
            "column": "public_dns_names",
            "partial_match": true,
            "description": "The public dns name to filter on."
          },
          "os_platform": {
            "partial_match": true,
            "description": "The OS platform to filter on."
          },
          "parent_href": {
            "polymorphic": true,
            "column": "incarnator_id",
            "description": "The href of the parent to filter on."
          }
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}GET    /api/clouds/:cloud_id/instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}GET    /api/server_arrays/:server_array_id/current_instances(.:format)? {:action=>\"index\", :controller=>\"instances\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Lists instances of a given cloud, server array.\n\nUsing the available filters, it is possible to craft powerful queries about which instances to retrieve.\nFor example, one can easily list:\n\n\ninstances that have names that contain \"app\"\nall instances of a given deployment\ninstances belonging to a given server array (i.e., have the same parent_url)\n\n\nTo see the instances of a server array including the next_instance, use the URL \"/api/clouds/:cloud_id/instances\" with the filter \"parent_href==/api/server_arrays/XX\". To list only the running\ninstances of a server array, use the URL \"/api/server_arrays/:server_array_id/current_instances\"\n\nThe 'full_inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      },
      "multi_terminate": {
        "parameters": {
          "filter": {
            "class": "Array",
            "non_blank": true
          },
          "terminate_all": {
            "class": "String",
            "description": "Specifies the ability to terminate all instances.",
            "valid_values": [
              "true",
              "false"
            ],
            "non_blank": true
          }
        },
        "status_code": "202 Accepted",
        "route": "POST   /api/clouds/:cloud_id/instances/multi_terminate(.:format)? {:action=>\"multi_terminate\", :controller=>\"instances\"}POST   /api/server_arrays/:server_array_id/multi_terminate(.:format)? {:action=>\"multi_terminate\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Terminates running instances.\nEither a filter or the parameter 'terminate_all' must be provided."
      },
      "set_custom_lodgement": {
        "parameters": {
          "quantity": {
            "class": "Array",
            "description": "At least one name/value pair must be specified. Currently, a maximum of 2 name/value pairs is supported.",
            "mandatory": true,
            "non_blank": true
          },
          "quantity[][name]": {
            "class": "String",
            "description": "The name of the quantity. A customer-specific string, e.g. \"MB/s\" or \"GB/Month\".",
            "regex": "/^(\\w|\\/|\\ )+$/",
            "non_blank": true
          },
          "quantity[][value]": {
            "class": "String",
            "description": "The value of the quantity. Should be a positive integer.",
            "regex": "/^\\d+$/",
            "non_blank": true
          },
          "timeframe": {
            "class": "String",
            "description": "The timeframe (either a month or a single day) for which the quantity value is valid (currently for the PDT timezone only).",
            "regex": "/^\\d{4}\\/\\d{2}(\\/\\d{2})?$/",
            "mandatory": true,
            "non_blank": true
          }
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/set_custom_lodgement(.:format)? {:action=>\"set_custom_lodgement\", :controller=>\"instances\"}",
        "access_rules": [
          "actor||instance"
        ],
        "description": "This method is deprecated.  Please use InstanceCustomLodgement."
      },
      "start": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/start(.:format)? {:action=>\"start\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": "Starts an instance that has been stopped, resuming it to its previously saved volume state.\n\nAfter an instance is started, the reference to your instance will have a different id.\n\nThe new id can be found by performing an index query with the appropriate filters on the\nInstances resource, performing a show action on the Server resource for Server Instances, or\nperforming a current_instances action on the ServerArray resource for ServerArray Instances."
      },
      "unlock": {
        "parameters": {
        },
        "status_code": "204 No Content",
        "route": "POST   /api/clouds/:cloud_id/instances/:id/unlock(.:format)? {:action=>\"unlock\", :controller=>\"instances\"}",
        "access_rules": [
          "actor"
        ],
        "description": ""
      },
      "show": {
        "parameters": {
          "view": {
            "class": "String",
            "valid_values": [
              "default",
              "extended",
              "full",
              "full_inputs_2_0",
              "tiny",
              "sensitive"
            ],
            "non_blank": true
          }
        },
        "example_resource": {
          "links": [
            {"rel":"self","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND"},
            {"rel":"cloud","href":"/api/clouds/888"},
            {"rel":"deployment","href":"/api/deployments/2"},
            {"rel":"server_template","href":"/api/server_templates/1"},
            {"rel":"multi_cloud_image","href":"/api/multi_cloud_images/1","inherited_source":"server_template"},
            {"rel":"parent","href":"/api/servers/1"},
            {"rel":"volume_attachments","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/volume_attachments"},
            {"rel":"inputs","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/inputs"},
            {"rel":"monitoring_metrics","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/monitoring_metrics"},
            {"rel":"alerts","href":"/api/clouds/888/instances/RESOURCE_1381290985;RAND/alerts"}
          ],
          "public_ip_addresses": [
            "221.54.50.173"
          ],
          "private_ip_addresses": [
            "2.1.3.5"
          ],
          "cloud_specific_attributes": {
          },
          "actions": [
            {
              "rel": "terminate"
            },
            {
              "rel": "reboot"
            },
            {
              "rel": "run_executable"
            },
            {
              "rel": "lock"
            },
            {
              "rel": "unlock"
            }
          ],
          "state": "operational",
          "resource_uid": "RESOURCE_1381290985",
          "created_at": "2015/04/08 22:32:13 +0000",
          "pricing_type": "fixed",
          "associate_public_ip_address": true,
          "name": "NAME_55031662",
          "locked": false,
          "updated_at": "2015/04/08 22:32:13 +0000"
        },
        "status_code": "200 OK",
        "route": "GET    /api/clouds/:cloud_id/instances/:id(.:format)? {:action=>\"show\", :controller=>\"instances\"}",
        "access_rules": [
          "observer||instance"
        ],
        "description": "Shows attributes of a single instance.\n\nThe 'full_inputs_2_0' view is for retrieving inputs in 2.0 serialization (for more\ndetails please see Inputs#index.)"
      }
    },
    "media_type": {
      "attributes": {
        "links": "",
        "ip_forwarding_enabled": "",
        "public_ip_addresses": "",
        "security_groups": "",
        "user_data": "",
        "private_ip_addresses": "",
        "description": "",
        "cloud_specific_attributes": "",
        "monitoring_server": "",
        "inputs": "",
        "public_dns_names": "",
        "inherited_sources": "",
        "subnets": "",
        "monitoring_id": "",
        "actions": "",
        "state": "",
        "os_platform": "",
        "private_dns_names": "",
        "resource_uid": "",
        "created_at": "",
        "associate_public_ip_address": "",
        "pricing_type": "",
        "terminated_at": "",
        "name": "",
        "admin_password": "",
        "locked": "",
        "updated_at": ""
      },
      "content_types": [
        "application/vnd.rightscale.instance"
      ],
      "links": {
        "placement_group": "Associated placement group",
        "multi_cloud_image": "Associated multi cloud image",
        "server_template": "Associated ServerTemplate",
        "inputs": "List of configuration inputs",
        "deployment": "Associated Deployment",
        "volume_attachments": "Associated volume attachments",
        "ssh_key": "Associated ssh key",
        "monitoring_metrics": "Associated monitoring metrics",
        "lock_user": "Href of the user who has locked this instance",
        "instance_type": "Associated instance type",
        "parent": "Parent Object (Server/ServerArray)",
        "kernel_image": "Associated kernel image",
        "ramdisk_image": "Associated ramdisk image",
        "image": "Associated image",
        "datacenter": "Associated datacenter",
        "alerts": "Associated alerts",
        "cloud": "Associated Cloud",
        "self": "Href of itself"
      },
      "description": "Instances represent an entity that is runnable in the cloud.\n\nAn instance of type \"next\" is a container of information that expresses how to configure a future instance when we decide\n  to launch or start it.\n  A \"next\" instance generally only exists in the RightScale realm, and usually doesn't have any corresponding representation\n  existing in the cloud. However, if an instance is not of type \"next\", it will generally represent an existing running\n  (or provisioned) virtual machine existing in the cloud."
    },
    "description": "Instances represent an entity that is runnable in the cloud.\n\nAn instance of type \"next\" is a container of information that expresses how to configure a future instance when we decide\nto launch or start it.\nA \"next\" instance generally only exists in the RightScale realm, and usually doesn't have any corresponding representation\nexisting in the cloud. However, if an instance is not of type \"next\", it will generally represent an existing running\n(or provisioned) virtual machine existing in the cloud."
  }
}
